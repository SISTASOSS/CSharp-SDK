<?xml version="1.0"?>
<doc>
    <assembly>
        <name>o2g-sdk</name>
    </assembly>
    <members>
        <member name="T:o2g.Events.CallCenterAgent.OnAgentSkillChangedEvent">
            <summary>
            This event is raised when an agent changes the activation of one or several skills.
            </summary>
        </member>
        <member name="P:o2g.Events.CallCenterAgent.OnAgentSkillChangedEvent.LoginName">
            <summary>
            Return the agent login name.
            </summary>
            <value>
            A <see langword="string"/> value that represents the agent login name.
            </value>
        </member>
        <member name="P:o2g.Events.CallCenterAgent.OnAgentSkillChangedEvent.Skills">
            <summary>
            Return the agent skills.
            </summary>
            <value>
            A <see cref="T:o2g.Types.CallCenterAgentNS.OperatorState"/> object that represents the agent state.
            </value>
        </member>
        <member name="M:o2g.Events.CallCenterAgent.OnAgentSkillChangedEvent.#ctor(System.String,System.String,o2g.Types.CallCenterAgentNS.AgentSkillSet)">
            <summary>
            Initializes a new instance of the <see cref="T:o2g.Events.CallCenterAgent.OnAgentSkillChangedEvent"/> class.
            </summary>
            <param name="eventName">The event name.</param>
            <param name="loginName">The login name of the agent.</param>
            <param name="skills">The skill set of the agent.</param>
        </member>
        <member name="M:o2g.Events.CallCenterAgent.OnAgentSkillChangedEvent.GetLoginName">
            <summary>
            Returns the agent's login name.
            </summary>
        </member>
        <member name="M:o2g.Events.CallCenterAgent.OnAgentSkillChangedEvent.GetSkills">
            <summary>
            Returns the agent's skill set.
            </summary>
        </member>
        <member name="T:o2g.Events.CallCenterAgent.OnAgentStateChangedEvent">
            <summary>
            This event is raised when the state of a CCD agent is changed.
            </summary>
        </member>
        <member name="P:o2g.Events.CallCenterAgent.OnAgentStateChangedEvent.LoginName">
            <summary>
            Return the agent login name.
            </summary>
            <value>
            A <see langword="string"/> value that represents the agent login name.
            </value>
        </member>
        <member name="P:o2g.Events.CallCenterAgent.OnAgentStateChangedEvent.State">
            <summary>
            Return the agent state.
            </summary>
            <value>
            A <see cref="T:o2g.Types.CallCenterAgentNS.OperatorState"/> object that represents the agent state.
            </value>
        </member>
        <member name="T:o2g.Events.CallCenterAgent.OnSupervisorHelpCancelledEvent">
            <summary>
            This event is raised when agent has requested the assistance of his supervisor and when 
            the request is canceled by the agent or when the request is rejected by the supervisor.
            This event is received by both the agent and the supervisor.
            </summary>
        </member>
        <member name="P:o2g.Events.CallCenterAgent.OnSupervisorHelpCancelledEvent.LoginName">
            <summary>
            Return the supervisor login name.
            </summary>
            <value>
            A <see langword="string"/> value that represents the agent or supervisor login name.
            </value>
        </member>
        <member name="P:o2g.Events.CallCenterAgent.OnSupervisorHelpCancelledEvent.OtherNumber">
            <summary>
            Return the agent or supervisor number.
            </summary>
            <value>
            A <see langword="string"/> value that represents the agent or supervisor number.
            </value>
            <remarks>
            If the event is received by the supervisor, <c>OtherNumber</c> is the agent number. If this event is received by 
            the agent, <c>OtherNumber</c> is the supervisor number.
            </remarks>
        </member>
        <member name="T:o2g.Events.CallCenterAgent.OnSupervisorHelpRequestedEvent">
            <summary>
            This event is raised when an agent requests the assistance of his supervisor.
            This event is received by both the agent and the supervisor.
            </summary>
        </member>
        <member name="P:o2g.Events.CallCenterAgent.OnSupervisorHelpRequestedEvent.LoginName">
            <summary>
            Return the supervisor login name.
            </summary>
            <value>
            A <see langword="string"/> value that represents the agent or the supervisor login name.
            </value>
        </member>
        <member name="P:o2g.Events.CallCenterAgent.OnSupervisorHelpRequestedEvent.OtherNumber">
            <summary>
            Return the agent or supervisor number.
            </summary>
            <value>
            A <see langword="string"/> value that represents the agent or supervisor number.
            </value>
            <remarks>
            If the event is received by the supervisor, <c>OtherNumber</c> is the agent number. If this event is received by 
            the agent, <c>OtherNumber</c> is the supervisor number.
            </remarks>
        </member>
        <member name="T:o2g.Events.CallCenterRsi.OnDigitCollectedEvent">
            <summary>
            This event is raised when a data collection has ended.
            </summary>
        </member>
        <member name="P:o2g.Events.CallCenterRsi.OnDigitCollectedEvent.RsiPoint">
            <summary>
            Return the RSI point.
            </summary>
            <value>
            A <see langword="string"/> that represents the RSI point extension number.
            </value>
        </member>
        <member name="P:o2g.Events.CallCenterRsi.OnDigitCollectedEvent.CallRef">
            <summary>
            Return the call reference.
            </summary>
            <value>
            A <see langword="string"/> that is the unique call identifier.
            </value>
        </member>
        <member name="P:o2g.Events.CallCenterRsi.OnDigitCollectedEvent.DataCollected">
            <summary>
            Return the collected DTMF tones.
            </summary>
            <value>
            A <see cref="P:o2g.Events.CallCenterRsi.OnDigitCollectedEvent.DataCollected"/> that represents the DTMF tones that have been collected.
            </value>
        </member>
        <member name="T:o2g.Events.CallCenterRsi.OnRouteEndEvent">
            <summary>
            This event is sent from a Routing point to close a route session (routing crid is no longer valid).
            </summary>
        </member>
        <member name="P:o2g.Events.CallCenterRsi.OnRouteEndEvent.RsiPoint">
            <summary>
            Return the RSI point number which is the origin of the request.
            </summary>
            <value>
            A <see langword="string"/> that represents the RSI point extension number which is the origin of the request.
            </value>
        </member>
        <member name="P:o2g.Events.CallCenterRsi.OnRouteEndEvent.RouteCrid">
            <summary>
            Return the routing session identifier.
            </summary>
            <value>
            A <see langword="string"/> value thats represents the unique identifier of this route request.
            </value>
        </member>
        <member name="P:o2g.Events.CallCenterRsi.OnRouteEndEvent.RoutedCallRef">
            <summary>
            Return the call reference of the call who which teh route request is made.
            </summary>
            <value>
            A <see langword="string"/> value that represents the call reference.
            </value>
        </member>
        <member name="P:o2g.Events.CallCenterRsi.OnRouteEndEvent.Reason">
            <summary>
            Return the reason associated to the request.
            </summary>
            <value>
            A <see cref="T:o2g.Types.CallCenterRsiNS.RoutingReason"/> value that represents the reason associated the route request.
            </value>
        </member>
        <member name="T:o2g.Events.CallCenterRsi.OnRouteRequestEvent">
            <summary>
            This event is sent from a Routing point to request a route.
            </summary>
        </member>
        <member name="P:o2g.Events.CallCenterRsi.OnRouteRequestEvent.RsiPoint">
            <summary>
            Return the RSI point number which is the origin of the request.
            </summary>
            <value>
            A <see langword="string"/> that represents the RSI point extension number which is the origin of the request.
            </value>
        </member>
        <member name="P:o2g.Events.CallCenterRsi.OnRouteRequestEvent.Request">
            <summary>
            Return the associated request.
            </summary>
            <value>
            A <see cref="T:o2g.Types.CallCenterRsiNS.RouteRequest"/> object that represents the route request.
            </value>
        </member>
        <member name="T:o2g.Events.CallCenterRsi.OnToneGeneratedStartEvent">
            <summary>
            This event is sent from a RSI point when a tone generation is started.
            </summary>
        </member>
        <member name="P:o2g.Events.CallCenterRsi.OnToneGeneratedStartEvent.RsiPoint">
            <summary>
            Return the RSI point.
            </summary>
            <value>
            A <see langword="string"/> that represents the RSI point extension number.
            </value>
        </member>
        <member name="P:o2g.Events.CallCenterRsi.OnToneGeneratedStartEvent.CallRef">
            <summary>
            Return the call reference.
            </summary>
            <value>
            A <see langword="string"/> that is the unique call identifier.
            </value>
        </member>
        <member name="P:o2g.Events.CallCenterRsi.OnToneGeneratedStartEvent.ToneType">
            <summary>
            Return the generated tone.
            </summary>
            <value>
            A <see cref="T:o2g.Types.CallCenterRsiNS.Tones"/> value that represents the tone to generate.
            </value>
        </member>
        <member name="T:o2g.Events.CallCenterRsi.OnToneGeneratedStopEvent">
            <summary>
            This event is sent from a RSI point when a tone generation is stopped.
            </summary>
        </member>
        <member name="P:o2g.Events.CallCenterRsi.OnToneGeneratedStopEvent.RsiPoint">
            <summary>
            Return the RSI point.
            </summary>
            <value>
            A <see langword="string"/> that represents the RSI point extension number.
            </value>
        </member>
        <member name="P:o2g.Events.CallCenterRsi.OnToneGeneratedStopEvent.CallRef">
            <summary>
            Return the call reference.
            </summary>
            <value>
            A <see langword="string"/> that is the unique call identifier.
            </value>
        </member>
        <member name="T:o2g.Events.Common.OnChannelInformationEvent">
            <summary>
            This event is raised when the eventing channel has been established.
            </summary>
        </member>
        <member name="P:o2g.Events.Common.OnChannelInformationEvent.Text">
            <summary>
            Return the text associated to this event.
            </summary>
            <value>
            A <see langword="string"/> containing the information.
            </value>
        </member>
        <member name="T:o2g.Events.CommunicationLog.OnComRecordCreatedEvent">
            <summary>
            This event is raised each time new <see cref="T:o2g.Types.CommunicationLogNS.ComRecord"/> entry is created.
            </summary>
        </member>
        <member name="P:o2g.Events.CommunicationLog.OnComRecordCreatedEvent.LoginName">
            <summary>
            Return the user login name.
            </summary>
            <value>
            A <see langword="string"/> value that represents the user login name.
            </value>
        </member>
        <member name="P:o2g.Events.CommunicationLog.OnComRecordCreatedEvent.Record">
            <summary>
            Return the new created record.
            </summary>
            <value>
            A <see cref="T:o2g.Types.CommunicationLogNS.ComRecord"/> that represents the created record.
            </value>
        </member>
        <member name="T:o2g.Events.CommunicationLog.OnComRecordModifiedEvent">
            <summary>
            This event is raised each time new <see cref="T:o2g.Types.CommunicationLogNS.ComRecord"/> entry is modified.
            </summary>
        </member>
        <member name="P:o2g.Events.CommunicationLog.OnComRecordModifiedEvent.LoginName">
            <summary>
            Return the user login name.
            </summary>
            <value>
            A <see langword="string"/> value that represents the user login name.
            </value>
        </member>
        <member name="P:o2g.Events.CommunicationLog.OnComRecordModifiedEvent.Record">
            <summary>
            Return the new created record.
            </summary>
            <value>
            A <see cref="T:o2g.Types.CommunicationLogNS.ComRecord"/> that represents the modified record.
            </value>
        </member>
        <member name="T:o2g.Events.CommunicationLog.OnComRecordsAckEvent">
            <summary>
            This event is raised when one or more unanswered comlog records have been acknowledged.
            </summary>
            <seealso cref="M:o2g.ICommunicationLog.AcknowledgeComRecordsAsync(System.Collections.Generic.List{System.Int64},System.String)"/>
        </member>
        <member name="P:o2g.Events.CommunicationLog.OnComRecordsAckEvent.LoginName">
            <summary>
            Return the user login name.
            </summary>
            <value>
            A <see langword="string"/> value that represents the user login name.
            </value>
        </member>
        <member name="P:o2g.Events.CommunicationLog.OnComRecordsAckEvent.RecordIds">
            <summary>
            Return the list of com record identifiers.
            </summary>
            <value>
            A list of <see cref="T:System.Int64"/> that represents the identifiers of the acknowledged com records.
            </value>
        </member>
        <member name="T:o2g.Events.CommunicationLog.OnComRecordsDeletedEvent">
            <summary>
            This event is raised when one or more unanswered comlog records have been deleted.
            </summary>
            <seealso cref="M:o2g.ICommunicationLog.DeleteComRecordsAsync(System.Collections.Generic.List{System.Int64},System.String)"/>
        </member>
        <member name="P:o2g.Events.CommunicationLog.OnComRecordsDeletedEvent.LoginName">
            <summary>
            Return the user login name.
            </summary>
            <value>
            A <see langword="string"/> value that represents the user login name.
            </value>
        </member>
        <member name="P:o2g.Events.CommunicationLog.OnComRecordsDeletedEvent.RecordIds">
            <summary>
            Return the list of com record identifiers.
            </summary>
            <value>
            A list of <see cref="T:System.Int64"/> that represents the identifiers of the deleted com records.
            </value>
        </member>
        <member name="T:o2g.Events.CommunicationLog.OnComRecordsUnAckEvent">
            <summary>
            This event is raised when one or more unanswered comlog records have been unacknowledged.
            </summary>
            <seealso cref="M:o2g.ICommunicationLog.UnacknowledgeComRecordsAsync(System.Collections.Generic.List{System.Int64},System.String)"/>
        </member>
        <member name="P:o2g.Events.CommunicationLog.OnComRecordsUnAckEvent.LoginName">
            <summary>
            Return the user login name.
            </summary>
            <value>
            A <see langword="string"/> value that represents the user login name.
            </value>
        </member>
        <member name="P:o2g.Events.CommunicationLog.OnComRecordsUnAckEvent.RecordIds">
            <summary>
            Return the list of com record identifiers.
            </summary>
            <value>
            A list of <see cref="T:System.Int64"/> that represents the identifiers of the unacknowledged com records.
            </value>
        </member>
        <member name="T:o2g.Events.EventPackage">
            <summary>
            <c>EventPackage</c> class represents a set of event the application can subscribe on.
            </summary>
        </member>
        <member name="P:o2g.Events.EventPackage.Value">
            <summary>
            Return the value for this event package
            </summary>
            <value>
            A <see langword="string"/> that represents the event package.
            </value>
        </member>
        <member name="P:o2g.Events.EventPackage.Telephony">
            <summary>
            The event package value to subscribe to telephony events.
            </summary>
            <seealso cref="T:o2g.ITelephony"/>
        </member>
        <member name="P:o2g.Events.EventPackage.EventSummary">
            <summary>
            The event package value to subscribe to event summary events.
            </summary>
            <seealso cref="T:o2g.IEventSummary"/>
        </member>
        <member name="P:o2g.Events.EventPackage.CommunicationLog">
            <summary>
            The event package value to subscribe to communictaion log events.
            </summary>
            <seealso cref="T:o2g.ICommunicationLog"/>
        </member>
        <member name="P:o2g.Events.EventPackage.User">
            <summary>
            The event package value to subscribe to <see cref="T:o2g.Events.Users.OnUserInfoChangedEvent"/> events.
            </summary>
            <seealso cref="T:o2g.IUsers"/>
        </member>
        <member name="P:o2g.Events.EventPackage.Users">
            <summary>
            The event package value to subscribe to users events.
            </summary>
            <seealso cref="T:o2g.IUsers"/>
        </member>
        <member name="P:o2g.Events.EventPackage.Routing">
            <summary>
            The event package value to subscribe to routing events.
            </summary>
            <seealso cref="T:o2g.IRouting"/>
        </member>
        <member name="P:o2g.Events.EventPackage.Agent">
            <summary>
            The event package value to subscribe to call center agent events.
            </summary>
        </member>
        <member name="P:o2g.Events.EventPackage.Rsi">
            <summary>
            The Event package value to subscribe to call center rsi events.
            </summary>
        </member>
        <member name="P:o2g.Events.EventPackage.System">
            <summary>
            The event package value to subscribe to system events.
            </summary>
            <seealso cref="T:o2g.ICommunicationLog"/>
        </member>
        <member name="P:o2g.Events.EventPackage.PbxManagement">
            <summary>
            The event package value to subscribe to pbx management events.
            </summary>
            <seealso cref="T:o2g.IPbxManagement"/>
        </member>
        <member name="T:o2g.Events.EventSummary.OnEventSummaryUpdatedEvent">
            <summary>
            This event is raised each time the user's counters have changed.
            </summary>
        </member>
        <member name="P:o2g.Events.EventSummary.OnEventSummaryUpdatedEvent.LoginName">
            <summary>
            Return the user login name.
            </summary>
            <value>
            A <see langword="string"/> value that represents the user login name.
            </value>
        </member>
        <member name="P:o2g.Events.EventSummary.OnEventSummaryUpdatedEvent.EventSummary">
            <summary>
            The associated eent summary object.
            </summary>
            <value>
            An <see cref="T:o2g.Types.EventSummaryNS.EventSummary"/> object that represent the user new counters.
            </value>
        </member>
        <member name="T:o2g.Events.Maintenance.OnCtiLinkDownEvent">
            <summary>
            <c>OnCtiLinkDownEvent</c> is raised when a CTI link is down.
            </summary>
            <remarks>
            This event is sent with a 30 s minimum and 60 s maximum delay.
            </remarks>
        </member>
        <member name="P:o2g.Events.Maintenance.OnCtiLinkDownEvent.NodeId">
            <summary>
            The OmniPCX Enterprise node id which CTI link is down.
            </summary>
            <value>
            An <see langword="int"/> value that represents the OmniPCX Enterprise node number.
            </value>
        </member>
        <member name="T:o2g.Events.Maintenance.OnCtiLinkUpEvent">
            <summary>
            <c>OnCtiLinkDownEvent</c> is raised when CTI link has been re-established.
            </summary>
        </member>
        <member name="P:o2g.Events.Maintenance.OnCtiLinkUpEvent.NodeId">
            <summary>
            The OmniPCX Enterprise node id which CTI link is back to normal.
            </summary>
            <value>
            An <see langword="int"/> value that represents the OmniPCX Enterprise node number.
            </value>
        </member>
        <member name="T:o2g.Events.Maintenance.OnLicenseExpirationEvent">
            <summary>
            <c>OnLicenseExpirationEvent</c> event is sent when the license file will soon expire or has recently expired
            </summary>
        </member>
        <member name="P:o2g.Events.Maintenance.OnLicenseExpirationEvent.message">
            <summary>
            Return the alarm message.
            </summary>
            <value>
            A <see langword="string"/> value that represents the alarm message.
            </value>
        </member>
        <member name="P:o2g.Events.Maintenance.OnLicenseExpirationEvent.nbDays">
            <summary>
            nb days since or to expiration date: nbDays bigger then 0 means the license will expire in nb days and nbDays less then 0 means the license has already expired since nb days
            </summary>
            <value>
            An <see langword="long"/> value that represents the nb days since or to expiration date.
            </value>
        </member>
        <member name="T:o2g.Events.Maintenance.OnPbxLoadedEvent">
            <summary>
            <c>OnPbxLoadedEvent</c> is raised when datas are fully loaded from an OmniPCX Enterprise node.
            </summary>
        </member>
        <member name="P:o2g.Events.Maintenance.OnPbxLoadedEvent.NodeId">
            <summary>
            The OmniPCX Enterprise node id.
            </summary>
            <value>
            An <see langword="int"/> value that represents the OmniPCX Enterprise node number.
            </value>
        </member>
        <member name="T:o2g.Events.Management.OnPbxObjectInstanceCreatedEvent">
            <summary>
            <c>OnPbxObjectInstanceCreatedEvent</c> is sent when a PBX object instance is created.
            </summary>
            <remarks>
            <b>The current O2G send this event only on Subscriber creation.</b>
            </remarks>
        </member>
        <member name="P:o2g.Events.Management.OnPbxObjectInstanceCreatedEvent.NodeId">
            <summary>
            The OmniPCX Enterprise node id that send this event.
            </summary>
            <value>
            An <see langword="int"/> value that is the OmniPC Enterprise node number.
            </value>
        </member>
        <member name="P:o2g.Events.Management.OnPbxObjectInstanceCreatedEvent.Object">
            <summary>
            Return the created object definition.
            </summary>
            <value>
            A <see cref="T:o2g.Types.ManagementNS.PbxObjectDefinition"/> object that represents the created object.
            </value>
        </member>
        <member name="P:o2g.Events.Management.OnPbxObjectInstanceCreatedEvent.Father">
            <summary>
            Return the object father of the created object.
            </summary>
            <value>
            A <see cref="T:o2g.Types.ManagementNS.PbxObjectDefinition"/> object that represents the father of the object.
            </value>
        </member>
        <member name="T:o2g.Events.Management.OnPbxObjectInstanceDeletedEvent">
            <summary>
            <c>OnPbxObjectInstanceDeletedEvent</c> is sent when a PBX object instance is deleted.
            </summary>
            <remarks>
            <b>The current O2G send this event only on Subscriber deletion.</b>
            </remarks>
        </member>
        <member name="P:o2g.Events.Management.OnPbxObjectInstanceDeletedEvent.NodeId">
            <summary>
            The OmniPCX Enterprise node id that send this event.
            </summary>
            <value>
            An <see langword="int"/> value that is the OmniPC Enterprise node number.
            </value>
        </member>
        <member name="P:o2g.Events.Management.OnPbxObjectInstanceDeletedEvent.Object">
            <summary>
            Return the deleted object definition.
            </summary>
            <value>
            A <see cref="T:o2g.Types.ManagementNS.PbxObjectDefinition"/> object that represents the deleted object.
            </value>
        </member>
        <member name="P:o2g.Events.Management.OnPbxObjectInstanceDeletedEvent.Father">
            <summary>
            Return the object father of the deleted object.
            </summary>
            <value>
            A <see cref="T:o2g.Types.ManagementNS.PbxObjectDefinition"/> object that represents the father of the object.
            </value>
        </member>
        <member name="T:o2g.Events.Management.OnPbxObjectInstanceModifiedEvent">
            <summary>
            <c>OnPbxObjectInstanceModifiedEvent</c> is sent when a PBX object instance is modified.
            </summary>
            <remarks>
            <b>The current O2G send this event only on Subscriber modification.</b>
            </remarks>
        </member>
        <member name="P:o2g.Events.Management.OnPbxObjectInstanceModifiedEvent.NodeId">
            <summary>
            The OmniPCX Enterprise node id that send this event.
            </summary>
            <value>
            An <see langword="int"/> value that is the OmniPC Enterprise node number.
            </value>
        </member>
        <member name="P:o2g.Events.Management.OnPbxObjectInstanceModifiedEvent.Object">
            <summary>
            Return the modified object definition.
            </summary>
            <value>
            A <see cref="T:o2g.Types.ManagementNS.PbxObjectDefinition"/> object that represents the modified object.
            </value>
        </member>
        <member name="P:o2g.Events.Management.OnPbxObjectInstanceModifiedEvent.Father">
            <summary>
            Return the object father of the modified object.
            </summary>
            <value>
            A <see cref="T:o2g.Types.ManagementNS.PbxObjectDefinition"/> object that represents the father of the object.
            </value>
        </member>
        <member name="T:o2g.Events.O2GEventArgs`1">
            <summary>
            An <see cref="T:System.EventArgs"/> class that contain an <see cref="T:o2g.Events.O2GEvent"/>.
            </summary>
            <typeparam name="T">
            An <see cref="T:o2g.Events.O2GEvent"/> class.
            </typeparam>
        </member>
        <member name="M:o2g.Events.O2GEventArgs`1.#ctor(`0)">
            <summary>
            Construct a new <see cref="T:o2g.Events.O2GEventArgs`1"/> with the specified event.
            </summary>
            <param name="ev">
            An <see cref="T:o2g.Events.O2GEvent"/> object.
            </param>
        </member>
        <member name="P:o2g.Events.O2GEventArgs`1.Event">
            <summary>
            Return the event.
            </summary>
            <value>
            An <see cref="T:o2g.Events.O2GEvent"/> object that is the transported event.
            </value>
        </member>
        <member name="T:o2g.Events.O2GEvent">
            <summary>
            <c>O2GEvent</c> Represents the base class for all <see cref="T:o2g.Events.O2GEvent"/> events.
            </summary>
        </member>
        <member name="P:o2g.Events.O2GEvent.EventName">
            <summary>
            Return the event name.
            </summary>
            <value>
            A <see langword="string"/> that represents the event name.
            </value>
        </member>
        <member name="T:o2g.Events.Routing.OnRoutingStateChangedEvent">
            <summary>
            <c>OnRoutingStateChangedEvent</c> is raised when a routing parameter has changed.
            </summary>
        </member>
        <member name="P:o2g.Events.Routing.OnRoutingStateChangedEvent.LoginName">
            <summary>
            Return the login name of the user for which the event is raised.
            </summary>
            <value>
            A <see langword="string"/> that is the user login name.
            </value>
        </member>
        <member name="P:o2g.Events.Routing.OnRoutingStateChangedEvent.RoutingState">
            <summary>
            Return the new Routing state.
            </summary>
            <value>
            A <see cref="P:o2g.Events.Routing.OnRoutingStateChangedEvent.RoutingState"/> object that represents the new routing state.
            </value>
        </member>
        <member name="T:o2g.Events.Telephony.OnCallCreatedEvent">
            <summary>
            <c>OnCallCreatedEvent</c> is raised when a new call has been created.
            </summary>
        </member>
        <member name="P:o2g.Events.Telephony.OnCallCreatedEvent.LoginName">
            <summary>
            Return the login name of the user for which the event is raised.
            </summary>
            <value>
            A <see langword="string"/> that is the user login name.
            </value>
        </member>
        <member name="P:o2g.Events.Telephony.OnCallCreatedEvent.CallRef">
            <summary>
            Return the call reference.
            </summary>
            <value>
            A <see langword="string"/> that is the unique call identifier.
            </value>
        </member>
        <member name="P:o2g.Events.Telephony.OnCallCreatedEvent.Cause">
            <summary>
            Return the cause of this call creation.
            </summary>
            <value>
            A <see cref="P:o2g.Events.Telephony.OnCallCreatedEvent.Cause"/> that give the reason of this call creation.
            </value>
        </member>
        <member name="P:o2g.Events.Telephony.OnCallCreatedEvent.CallData">
            <summary>
            Return the data associated to this call.
            </summary>
            <value>
            A <see cref="P:o2g.Events.Telephony.OnCallCreatedEvent.CallData"/> that represents the data associated to this call.
            </value>
        </member>
        <member name="P:o2g.Events.Telephony.OnCallCreatedEvent.Initiator">
            <summary>
            Return the call initiator.
            </summary>
            <value>
            A <see langword="string"/> that is the id of the participant who initiate the call, the matching can be done with the <see cref="P:o2g.Types.TelephonyNS.CallNS.Participant.ParticipantId"/> value of the participants.
            </value>
        </member>
        <member name="P:o2g.Events.Telephony.OnCallCreatedEvent.Legs">
            <summary>
            Return the legs associated to this call.
            </summary>
            <value>
            A list of <see cref="T:o2g.Types.TelephonyNS.CallNS.Leg"/>. 
            </value>
        </member>
        <member name="P:o2g.Events.Telephony.OnCallCreatedEvent.Participants">
            <summary>
            Return the participants to this call.
            </summary>
            <value>
            A list of <see cref="T:o2g.Types.TelephonyNS.CallNS.Participant"/>. 
            </value>
        </member>
        <member name="P:o2g.Events.Telephony.OnCallCreatedEvent.DeviceCapabilities">
            <summary>
            Return the capabilities of the devices associated to this call.
            </summary>
            <value>
            A list of <see cref="P:o2g.Events.Telephony.OnCallCreatedEvent.DeviceCapabilities"/>. 
            </value>
        </member>
        <member name="T:o2g.Events.Telephony.OnCallModifiedEvent">
            <summary>
            <c>OnCallModifiedEvent</c> is raised when an existing call has been modified.
            <para>Modification of a call can be triggered for various reason: changes on legs, on participants, changes on states, ...</para>
            </summary>
        </member>
        <member name="P:o2g.Events.Telephony.OnCallModifiedEvent.LoginName">
            <summary>
            Return the login name of the user for which the event is raised.
            </summary>
            <value>
            A <see langword="string"/> that is the user login name.
            </value>
        </member>
        <member name="P:o2g.Events.Telephony.OnCallModifiedEvent.CallRef">
            <summary>
            Return the call reference.
            </summary>
            <value>
            A <see langword="string"/> that is the unique call identifier.
            </value>
        </member>
        <member name="P:o2g.Events.Telephony.OnCallModifiedEvent.Cause">
            <summary>
            Return the cause of this call modification.
            </summary>
            <value>
            A <see cref="P:o2g.Events.Telephony.OnCallModifiedEvent.Cause"/> that give the reason of this call creation.
            </value>
        </member>
        <member name="P:o2g.Events.Telephony.OnCallModifiedEvent.PreviousCallRef">
            <summary>
            Return the previous call reference.
            </summary>
            <value>
            A <see langword="string"/> that is the previous call reference, or <see langword="null"/> if the call reference has not been changed.
            </value>
            <remarks>
            If not <see langword="null"/>, this call reference indicates that the "<c>callRef</c>" replace "<c>previousCallRef</c>". This also indicates that "previousCallRef" has been removed <b>(call removed event is not generated).</b>
            </remarks>
        </member>
        <member name="P:o2g.Events.Telephony.OnCallModifiedEvent.ReplacedByCallRef">
            <summary>
            Return the call reference that has replaced the call reference
            </summary>
            <value>
            A <see langword="string"/> that is the call reference that replace the "<c>CallRef</c>".
            </value>
            <remarks>
            This call reference is not <see langword="null"/> when a call is released. The replacedByCallRef indicates that the "callRef" is replaced by this one.
            </remarks>
        </member>
        <member name="P:o2g.Events.Telephony.OnCallModifiedEvent.CallData">
            <summary>
            Return the data associated to this call.
            </summary>
            <value>
            A <see cref="P:o2g.Events.Telephony.OnCallModifiedEvent.CallData"/> that represents the data associated to this call.
            </value>
        </member>
        <member name="P:o2g.Events.Telephony.OnCallModifiedEvent.ModifiedLegs">
            <summary>
            Return the modified legs.
            </summary>
            <value>
            A list of <see cref="T:o2g.Types.TelephonyNS.CallNS.Leg"/> that corresponds to all the modified legs.
            </value>
        </member>
        <member name="P:o2g.Events.Telephony.OnCallModifiedEvent.AddedLegs">
            <summary>
            Return the list of added legs.
            </summary>
            <value>
            A list of <see cref="T:o2g.Types.TelephonyNS.CallNS.Leg"/> that corresponds to all the added legs.
            </value>
        </member>
        <member name="P:o2g.Events.Telephony.OnCallModifiedEvent.RemovedLegs">
            <summary>
            Return the list of removed legs.
            </summary>
            <value>
            A list of <see cref="T:o2g.Types.TelephonyNS.CallNS.Leg"/> that corresponds to all the removed legs.
            </value>
        </member>
        <member name="P:o2g.Events.Telephony.OnCallModifiedEvent.ModifiedParticipants">
            <summary>
            Return the list of modified participants.
            </summary>
            <value>
            A list of <see cref="T:o2g.Types.TelephonyNS.CallNS.Participant"/> that corresponds to all the modified participants.
            </value>
        </member>
        <member name="P:o2g.Events.Telephony.OnCallModifiedEvent.AddedParticipants">
            <summary>
            Return the list of added participants
            </summary>
            <value>
            A list of <see cref="T:o2g.Types.TelephonyNS.CallNS.Participant"/> that corresponds to all the added participants.
            </value>
        </member>
        <member name="P:o2g.Events.Telephony.OnCallModifiedEvent.RemovedParticipantIds">
            <summary>
            Return the list of removed participant.
            </summary>
            <value>
            A list of <see langword="string"/>. Each string is the participantId of a removed participant.
            </value>
        </member>
        <member name="P:o2g.Events.Telephony.OnCallModifiedEvent.DeviceCapabilities">
            <summary>
            Return the capabilities of the devices associated to this call.
            </summary>
            <value>
            A list of <see cref="P:o2g.Events.Telephony.OnCallModifiedEvent.DeviceCapabilities"/>. 
            </value>
        </member>
        <member name="T:o2g.Events.Telephony.OnCallRemovedEvent">
            <summary>
            <c>OnCallRemovedEvent</c> is raised when a call has been removed (released, hang up, transfer...).
            </summary>
        </member>
        <member name="P:o2g.Events.Telephony.OnCallRemovedEvent.LoginName">
            <summary>
            Return the login name of the user for which the event is raised.
            </summary>
            <value>
            A <see langword="string"/> that is the user login name.
            </value>
        </member>
        <member name="P:o2g.Events.Telephony.OnCallRemovedEvent.CallRef">
            <summary>
            Return the call reference.
            </summary>
            <value>
            A <see langword="string"/> that is the unique call identifier.
            </value>
        </member>
        <member name="P:o2g.Events.Telephony.OnCallRemovedEvent.Cause">
            <summary>
            Return the cause of this call modification.
            </summary>
            <value>
            A <see cref="P:o2g.Events.Telephony.OnCallRemovedEvent.Cause"/> that give the reason of this call creation.
            </value>
        </member>
        <member name="P:o2g.Events.Telephony.OnCallRemovedEvent.NewDestination">
            <summary>
            Return the new call destination.
            </summary>
            <value>
            A <see langword="string"/> that is the new destination phone number.
            </value>
            <remarks>
            If the call is forwarded or redirected, this field indicate the new destination number. 
            </remarks>
        </member>
        <member name="P:o2g.Events.Telephony.OnCallRemovedEvent.DeviceCapabilities">
            <summary>
            Return the capabilities of the devices associated to this call.
            </summary>
            <value>
            A list of <see cref="P:o2g.Events.Telephony.OnCallRemovedEvent.DeviceCapabilities"/>. 
            </value>
        </member>
        <member name="T:o2g.Events.Telephony.OnDeviceStateModifiedEvent">
            <summary>
            <c>OnDeviceStateModifiedEvent</c> is raised when a device's state has been modified.
            </summary>
        </member>
        <member name="P:o2g.Events.Telephony.OnDeviceStateModifiedEvent.LoginName">
            <summary>
            Return the login name of the user for which the event is raised.
            </summary>
            <value>
            A <see langword="string"/> that is the user login name.
            </value>
        </member>
        <member name="P:o2g.Events.Telephony.OnDeviceStateModifiedEvent.DeviceStates">
            <summary>
            Return the list of new device states
            </summary>
            <value>
            A list of <see cref="T:o2g.Types.TelephonyNS.DeviceNS.DeviceState"/>.
            </value>
        </member>
        <member name="T:o2g.Events.Telephony.OnDynamicStateChangedEvent">
            <summary>
            <c>OnDynamicStateChangedEvent</c> is raised when the user's dynamic state change. (hunting group logon state)
            </summary>
        </member>
        <member name="P:o2g.Events.Telephony.OnDynamicStateChangedEvent.LoginName">
            <summary>
            Return the login name of the user for which the event is raised.
            </summary>
            <value>
            A <see langword="string"/> that is the user login name.
            </value>
        </member>
        <member name="P:o2g.Events.Telephony.OnDynamicStateChangedEvent.HuntingGroupState">
            <summary>
            Return the new hunting group status
            </summary>
            <value>
            A <see cref="T:o2g.Types.TelephonyNS.HuntingGroupStatus"/> that represents the new hunting group status.
            </value>
        </member>
        <member name="T:o2g.Events.Telephony.OnTelephonyStateEvent">
            <summary>
            <c>OnTelephonyStateEvent</c> is raised when the application request a snapshot.
            </summary>
        </member>
        <member name="P:o2g.Events.Telephony.OnTelephonyStateEvent.LoginName">
            <summary>
            Return the login name of the user for which the event is raised.
            </summary>
            <value>
            A <see langword="string"/> that is the user login name.
            </value>
        </member>
        <member name="P:o2g.Events.Telephony.OnTelephonyStateEvent.State">
            <summary>
            Return teh telephonic state of the user.
            </summary>
            <value>
            A <see cref="T:o2g.Types.TelephonyNS.TelephonicState"/> object that give the user state.
            </value>
        </member>
        <member name="T:o2g.Events.Telephony.OnUserStateModifiedEvent">
            <summary>
            <c>OnUserStateModifiedEvent</c> is raised when a user's state has been modified (FREE, BUSY ...).
            </summary>
        </member>
        <member name="F:o2g.Events.Telephony.OnUserStateModifiedEvent.LoginName">
            <summary>
            Return the login name of the user for which the event is raised.
            </summary>
            <value>
            A <see langword="string"/> that is the user login name.
            </value>
        </member>
        <member name="F:o2g.Events.Telephony.OnUserStateModifiedEvent.State">
            <summary>
            Return the new user's state.
            </summary>
            <value>
            A <see cref="T:o2g.Types.TelephonyNS.UserNS.UserState"/> object that represents the new user's state.
            </value>
        </member>
        <member name="T:o2g.Events.Users.OnUserCreatedEvent">
            <summary>
            <c>OnUserCreatedEvent</c> is raised on creation of an user (only for administrator).
            </summary>
            <remarks>
            There is no control on the 'ids' provided in the 'Selector' filter of the subscription filter (subscription done for all users).
            </remarks>
        </member>
        <member name="P:o2g.Events.Users.OnUserCreatedEvent.User">
            <summary>
            The created user.
            </summary>
            <value>
            A <see cref="P:o2g.Events.Users.OnUserCreatedEvent.User"/> object that represents the created user.
            </value>
        </member>
        <member name="T:o2g.Events.Users.OnUserDeletedEvent">
            <summary>
            <c>OnUserDeletedEvent</c> is raised when user is deleted (only for administrator).
            </summary>
            <remarks>
            There is no control on the 'ids' provided in the 'Selector' filter of the subscription filter (subscription done for all users).
            </remarks>
        </member>
        <member name="P:o2g.Events.Users.OnUserDeletedEvent.LoginName">
            <summary>
            The deleted user login name.
            </summary>
            <value>
            A <see langword="string"/> that is the deleted user login name.
            </value>
        </member>
        <member name="T:o2g.Events.Users.OnUserInfoChangedEvent">
            <summary>
            <c>OnUserInfoChangedEvent</c> event is raised on any change on the user's data.
            </summary>
        </member>
        <member name="P:o2g.Events.Users.OnUserInfoChangedEvent.User">
            <summary>
            The user whose data has changed.
            </summary>
            <value>
            A <see cref="P:o2g.Events.Users.OnUserInfoChangedEvent.User"/> object that represents the user with the new data.
            </value>
        </member>
        <member name="P:o2g.Events.Users.OnUserInfoChangedEvent.LoginName">
            <summary>
            The user login name.
            </summary>
            <value>
            A <see langword="string"/> that is the user login name.
            </value>
        </member>
        <member name="T:o2g.IAnalytics">
            <summary>
            The <c>IAnalytics</c> service allows to retrieve OmniPCX entreprise charging information and incidents.
            Using this service requires having a <b>ANALYTICS</b> license. This service requires an administrative login.
            </summary>
            <remarks>
            O2G uses SSH to get the information from an OmniPCX Enterprise node. So <b>SSH must be enabled</b> on the OmniPCX Enterprise node to use this service.
            </remarks>
        </member>
        <member name="M:o2g.IAnalytics.GetIncidentsAsync(System.Int32,System.Int32)">
            <summary>
            Return a list of incident from the specified OmniPCX Enterprise node.
            </summary>
            <param name="nodeId">The OmniPCX Enterprise node id.</param>
            <param name="last">An optional parameter to limit te query to the N latest incident.</param>
            <returns>
            A list of <see cref="T:o2g.Types.AnalyticsNS.Incident"/> that represents the incidents raised on the specified OmniPCX Enterprise node, or <see langword="null"/> in case of error.
            </returns>
        </member>
        <member name="M:o2g.IAnalytics.GetChargingFilesAsync(System.Int32,o2g.Types.AnalyticsNS.TimeRange)">
            <summary>
            Get the list of charging files on the specified node.
            </summary>
            <param name="nodeId">The OmniPCX Enterprise node id.</param>
            <param name="filter">An optional time range filter.</param>
            <returns>
            The list of <see cref="T:o2g.Types.AnalyticsNS.ChargingFile"/> that represents the charging files.
            </returns>
            <seealso cref="M:o2g.IAnalytics.GetChargingsAsync(System.Int32,System.Collections.Generic.List{o2g.Types.AnalyticsNS.ChargingFile},System.Nullable{System.Int32},System.Boolean)"/>
        </member>
        <member name="M:o2g.IAnalytics.GetChargingsAsync(System.Int32,o2g.Types.AnalyticsNS.TimeRange,System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Query the charging information for the specified node, using the specified options.
            </summary>
            <param name="nodeId">The OmniPCX Enterprise node id.</param>
            <param name="filter">An optional time range filter.</param>
            <param name="topResults">An optional filter used to return only the 'top N' tickets.</param>
            <param name="all">Optional filter, <see langword="true"/> to include tickets with a 0 cost.</param>
            <returns>
            A <see cref="T:o2g.Types.AnalyticsNS.ChargingResult"/> object that represents the result of the query or <see langword="null"/> in case of error or if the specified filter does not return any result.
            </returns>
            <remarks>
            <para>
            If <c>all</c> option is <see langword="true"/>, all the tickets are returned, including the zero cost ticket, and with the called party; 
            If <c>all</c> option is <see langword="false"/> or omitted, the total of charging info is returned for each user, the call number giving 
            the number of calls with non null charging cost.
            </para>
            <para>
            The request processes charging files on the OmniPCX Enterprise. The processing is limited to a maximum of 100 files for performance reason. If the range filter is too large and 
            the number of file to process is greater than 100, the method fails and returns <see langword="null"/>. In this case, a smaller range must be specified.
            </para>
            </remarks>
            <seealso cref="M:o2g.IAnalytics.GetChargingsAsync(System.Int32,System.Collections.Generic.List{o2g.Types.AnalyticsNS.ChargingFile},System.Nullable{System.Int32},System.Boolean)"/>
        </member>
        <member name="M:o2g.IAnalytics.GetChargingsAsync(System.Int32,System.Collections.Generic.List{o2g.Types.AnalyticsNS.ChargingFile},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Query the charging information for the specified node, using the specified options.
            </summary>
            <param name="nodeId">The OmniPCX Enterprise node id.</param>
            <param name="files">The list of file to process.</param>
            <param name="topResults">An optional filter used to return only the 'top N' tickets.</param>
            <param name="all">Optional filter, <see langword="true"/> to include tickets with a 0 cost.</param>
            <returns>
            A <see cref="T:o2g.Types.AnalyticsNS.ChargingResult"/> object that represents the result of the query or <see langword="null"/> in case of error or if the specified filter does not return any result.
            </returns>
            <remarks>
            <para>
            If <c>all</c> option is <see langword="true"/>, all the tickets are returned, including the zero cost ticket, and with the called party; 
            If <c>all</c> option is <see langword="false"/> or omitted, the total of charging info is returned for each user, the call number giving 
            the number of calls with non null charging cost.
            </para>
            <para>
            This method allows to better control the processign of the request by spefifying the ist of charging files to consider. The list size must be lower than 100.
            If the number of file to process is greater than 100, the method fails and returns <see langword="null"/>.
            </para>
            </remarks>
            <see cref="M:o2g.IAnalytics.GetChargingFilesAsync(System.Int32,o2g.Types.AnalyticsNS.TimeRange)"/>
            <seealso cref="M:o2g.IAnalytics.GetChargingsAsync(System.Int32,o2g.Types.AnalyticsNS.TimeRange,System.Nullable{System.Int32},System.Boolean)"/>
        </member>
        <member name="T:o2g.ICallCenterAgent">
            <summary>
            <c>ICallCenterAgent</c> provides services for CCD operators.
            Using this service requires having a <b>CONTACTCENTER_AGENT</b> license.
            </summary>
        </member>
        <member name="E:o2g.ICallCenterAgent.AgentStateChanged">
            <summary>
            Occurs when an agent state has changed.
            </summary>
        </member>
        <member name="E:o2g.ICallCenterAgent.SupervisorHelpRequested">
            <summary>
            Occurs when an agent request help from his supervisor
            </summary>
        </member>
        <member name="E:o2g.ICallCenterAgent.SupervisorHelpCancelled">
            <summary>
            Occurs when an agent has requested the assistance of his supervisor and when the request is 
            canceled by the agent or when the request is rejected by the supervisor.
            </summary>
        </member>
        <member name="E:o2g.ICallCenterAgent.AgentSkillChanged">
            <summary>
            Occurs when an agent changes the activation of one or several skills.
            </summary>
        </member>
        <member name="M:o2g.ICallCenterAgent.GetOperatorConfigurationAsync(System.String)">
            <summary>
            Get the operator configuration.
            </summary>
            <param name="loginName">The operator login name.</param>
            <returns>
            A <see cref="T:o2g.Types.CallCenterAgentNS.OperatorConfiguration"/> object that represents the operator configuration.
            </returns>
        </member>
        <member name="M:o2g.ICallCenterAgent.GetOperatorStateAsync(System.String)">
            <summary>
            Get the specified agent or supervisor state.
            </summary>
            <param name="loginName">The operator login name.</param>
            <returns>
            A <see cref="T:o2g.Types.CallCenterAgentNS.OperatorState"/> object thats represents the operator state.
            </returns>
        </member>
        <member name="M:o2g.ICallCenterAgent.LogonOperatorAsync(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Logon an agent or a supervisor.
            </summary>
            <param name="proAcdNumber">The pro-acd device number.</param>
            <param name="pgNumber">The agent processing group number.</param>
            <param name="headset">Headset mode.</param>
            <param name="loginName">The agent login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            <para>
            For a Supervisor, if the <c>pgNumber</c> is omitted, the supervisor is logged on out off group.
            </para>
            <para>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
            <seealso cref="T:o2g.Events.CallCenterAgent.OnAgentStateChangedEvent"/>
        </member>
        <member name="M:o2g.ICallCenterAgent.LogoffOperatorAsync(System.String)">
            <summary>
            Logoff an agent or a supervisor.
            </summary>
            <param name="loginName">The agent login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            <para>
            This method does nothing an return <see langword="true"/> if the agent or the supervisor is already logged off.
            </para>
            <para>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
            <seealso cref="T:o2g.Events.CallCenterAgent.OnAgentStateChangedEvent"/>
        </member>
        <member name="M:o2g.ICallCenterAgent.EnterAgentGroupAsync(System.String,System.String)">
            <summary>
            Enter in a agent group. Only for a supervisor.
            </summary>
            <param name="pgNumber">The agent processing group number.</param>
            <param name="loginName">The supervisor login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            <para>
            This method is used by a supervisor to enter an agent group when it is in pre-assigned state (logged but not in an agent group).
            </para>
            <para>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.ICallCenterAgent.ExitAgentGroupAsync(System.String)">
            <summary>
            Exit from an agent group. Only for a supervisor.
            </summary>
            <param name="loginName">The supervisor login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            <para>
            This method is used by a supervisor to leave an agent group an go back in pre-assigned state (logged but not in an agent group).
            </para>
            <para>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.ICallCenterAgent.SetWrapupAsync(System.String)">
            <summary>
            Put the specified agent in wrapup.
            </summary>
            <param name="loginName">The agent login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
        </member>
        <member name="M:o2g.ICallCenterAgent.SetReadyAsync(System.String)">
            <summary>
            Put the specified agent in ready state.
            </summary>
            <param name="loginName">The agent login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
        </member>
        <member name="M:o2g.ICallCenterAgent.SetPauseAsync(System.String)">
            <summary>
            Put the specified agent in pause.
            </summary>
            <param name="loginName">The agent login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
        </member>
        <member name="M:o2g.ICallCenterAgent.SetWithdrawAsync(o2g.Types.CallCenterAgentNS.WithdrawReason,System.String)">
            <summary>
            Withdraw an agent with the specified reason.
            </summary>
            <param name="reason">The withdraw reason.</param>
            <param name="loginName">The agent login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
        </member>
        <member name="M:o2g.ICallCenterAgent.RequestPermanentListeningAsync(System.String,System.String)">
            <summary>
            Request to listen to the agent by a supervisor.
            </summary>
            <param name="agentNumber">The listened agent number.</param>
            <param name="loginName">The agent login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            <para>
            On success, an <see cref="T:o2g.Events.CallCenterAgent.OnSupervisorHelpRequestedEvent"/> is raised. for both the agent and the supervisor.
            </para>
            <para>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
            <seealso cref="T:o2g.Events.CallCenterAgent.OnSupervisorHelpRequestedEvent"/>
        </member>
        <member name="M:o2g.ICallCenterAgent.RequestIntrusionAsync(System.String,o2g.Types.CallCenterAgentNS.IntrusionMode,System.String)">
            <summary>
            Request intrusion in a ccd call.
            </summary>
            <param name="agentNumber">The extension number of the ccd agent who answers the ccd call.</param>
            <param name="intrusionMode">The intrusion mode.</param>
            <param name="loginName">The supervisor login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
        </member>
        <member name="M:o2g.ICallCenterAgent.ChangeIntrusionModeAsync(o2g.Types.CallCenterAgentNS.IntrusionMode,System.String)">
            <summary>
            Change the intrusion mode.
            </summary>
            <param name="newIntrusionMode">The new intrusion mode.</param>
            <param name="loginName">The agent login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            <para>
            Calling this method allows to change the intrusion mode, or to cancel an intrusion. To cancel an intrusion,
            the application must pass the current mode in the <c>newIntrusionMode</c> parameter.
            </para>
            <para>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.ICallCenterAgent.RequestSupervisorHelpAsync(System.String)">
            <summary>
            Request help of the supervisor.
            </summary>
            <param name="loginName">The agent login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            <para>
            On success, an <see cref="T:o2g.Events.CallCenterAgent.OnSupervisorHelpRequestedEvent"/> is raised. for both the agent and the supervisor.
            </para>
            <para>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
            <seealso cref="T:o2g.Events.CallCenterAgent.OnSupervisorHelpRequestedEvent"/>
        </member>
        <member name="M:o2g.ICallCenterAgent.RejectAgentHelpRequestAsync(System.String,System.String)">
            <summary>
            Reject an help request from an agent.
            </summary>
            <param name="agentNumber">The extension number of the agent who has requested help.</param>
            <param name="loginName">The agent login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            <para>
            This method is invoked by a supervisor when he reject an help request from an agent. On success, 
            an <see cref="T:o2g.Events.CallCenterAgent.OnSupervisorHelpCancelledEvent"/> is raised.
            </para>
            <para>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
            <seealso cref="E:o2g.ICallCenterAgent.SupervisorHelpCancelled"/>
        </member>
        <member name="M:o2g.ICallCenterAgent.CancelSupervisorHelpRequestAsync(System.String,System.String)">
            <summary>
            Cancel a supervisor help request.
            </summary>
            <param name="supervisorNumber">The supervisor number.</param>
            <param name="loginName">The agent login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            <para>
            This method is invoked by an agent when he want to cancel an help request. On success, 
            an <see cref="T:o2g.Events.CallCenterAgent.OnSupervisorHelpCancelledEvent"/> is raised.
            </para>
            <para>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.ICallCenterAgent.RequestSnaphotAsync(System.String)">
            <summary>
            Ask a snapshot event to receive an <see cref="T:o2g.Events.CallCenterAgent.OnAgentStateChangedEvent"/> event notification.
            </summary>
            <param name="loginName">The agent login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            The event <see cref="T:o2g.Events.CallCenterAgent.OnAgentStateChangedEvent"/> will contain the <see cref="T:o2g.Types.CallCenterAgentNS.OperatorState"/>.
            If a second request is asked since the previous one is still in progress, it has no effect.
            </para>
            <para>
            If an administrator invokes <c>RequestSnapshotAsync</c> with <c>loginName = null</c>, the snapshot event request is done for all the agents.
            The event processing can be long depending on the number of users.
            </para>
            </remarks>
            <seealso cref="M:o2g.ICallCenterAgent.GetOperatorStateAsync(System.String)"/>
            <seealso cref="T:o2g.Types.CallCenterAgentNS.OperatorState"/>
        </member>
        <member name="M:o2g.ICallCenterAgent.ActivateSkillAsync(System.Collections.Generic.List{System.Int32},System.String)">
            <summary>
            Activate a list of skills for this agent.
            </summary>
            <param name="skillNumbers">The list of skill to activate.</param>
            <param name="loginName">The agent login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            Skills are referenced by their numbers. <see cref="T:o2g.Types.CallCenterAgentNS.AgentSkill"/>. This method return <see langword="true"/> whatever the skill numbers passed. 
            Only valid skills are considered.
            </para>
            <para>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.ICallCenterAgent.DeactivateSkillAsync(System.Collections.Generic.List{System.Int32},System.String)">
            <summary>
            Deactivate a list of skills for this agent.
            </summary>
            <param name="skillNumbers">The list of skill to deactivate.</param>
            <param name="loginName">The agent login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            Skills are referenced by their numbers. <see cref="T:o2g.Types.CallCenterAgentNS.AgentSkill"/>. This method return <see langword="true"/> whatever the skill numbers passed. 
            Only valid skills are considered.
            </para>
            <para>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.ICallCenterAgent.GetWithdrawReasonsAsync(System.String,System.String)">
            <summary>
            Return the list of withdraw reason for the specified processing group.
            </summary>
            <param name="pgNumber">The agent processing group number.</param>
            <param name="loginName">The agent login name.</param>
            <returns>
            A list of <see cref="T:o2g.Types.CallCenterAgentNS.WithdrawReason"/> that represents the withdraw reason defined in the agent processing group in case of success;
            or a <see langword="null"/> value in case or error.
            </returns>
            <remarks>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
        </member>
        <member name="T:o2g.ICallCenterRsi">
            <summary>
            <c>ContactCenterRsi</c> service provides the capabilities on a RSI (Routing Service Intelligence) point:
            <list type="bullet">
            <item><description>To make route selection.</description></item>
            <item><description>To make digit collection.</description></item>
            <item><description>To play voice guide or tone.</description></item>
            <item><description>To play announcements (prompts and/or digits).</description></item>
            </list>
            <para>
            To be able to receive the RouteRequest from the OmniPCX Enterprise, the first action is subscribe to rsi events 
            and the second action is to enable the RSI point.
            </para>
            Using this service requires having a <b>CONTACTCENTER_RSI</b> license.
            </summary>
        </member>
        <member name="E:o2g.ICallCenterRsi.DigitCollected">
            <summary>
            Occurs when a data collection has ended.
            </summary>
        </member>
        <member name="E:o2g.ICallCenterRsi.ToneGeneratedStart">
            <summary>
            Raised from a RSI point when a tone generation is started.
            </summary>
        </member>
        <member name="E:o2g.ICallCenterRsi.ToneGeneratedStop">
            <summary>
            Raised from a RSI point when a tone generation is stopped.
            </summary>
        </member>
        <member name="E:o2g.ICallCenterRsi.RouteEnd">
            <summary>
            Raised from a Routing point to close a route session (routing crid is no longer valid).
            </summary>
        </member>
        <member name="E:o2g.ICallCenterRsi.RouteRequest">
            <summary>
            Raised from a Routing point to request a route.
            </summary>
        </member>
        <member name="M:o2g.ICallCenterRsi.GetRsiPointsAsync">
            <summary>
            Get the configured RSI points.
            </summary>
            <returns>
            A list of <see cref="T:o2g.Types.CallCenterRsiNS.RsiPoint"/> that represents all the declared RSI points.
            </returns>
        </member>
        <member name="M:o2g.ICallCenterRsi.EnableRsiPointAsync(System.String)">
            <summary>
            Enable the specified RSI point.
            </summary>
            <param name="rsiNumber">The RSI point extension number.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            The method return <see langword="false"/> if the RSI point is already enabled.
            </remarks>
        </member>
        <member name="M:o2g.ICallCenterRsi.DisableRsiPointAsync(System.String)">
            <summary>
            Disable the specified RSI point.
            </summary>
            <param name="rsiNumber">The RSI point extension number.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            The method return <see langword="false"/> if the RSI point is already disabled.
            </remarks>
        </member>
        <member name="M:o2g.ICallCenterRsi.StartCollectDigitsAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Char},System.Nullable{System.Int32},o2g.Types.CallCenterRsiNS.AdditionalDigitCollectionCriteria)">
            <summary>
            Start a digits collection on the specified RSI point.
            </summary>
            <param name="rsiNumber">The RSI point extension number.</param>
            <param name="callRef">The reference of the call on which to collect the digits.</param>
            <param name="numChars">Optional number of digit to collect. The digit collection is stopped when this number is reached.</param>
            <param name="flushChar">Optional char used to stop the digit collection when pressed.</param>
            <param name="timeout">Optional timeout in second. Stop the digit collection after this time elapses.</param>
            <param name="additionalCriteria">Extension criteria used to collect digits.</param>
            <returns>
            A <see langword="string"/> thats represents the digits collection Crid. A unique identifier for the collection.
            </returns>
            <seealso cref="M:o2g.ICallCenterRsi.StopCollectDigitsAsync(System.String,System.String)"/>
            <seealso cref="T:o2g.Events.CallCenterRsi.OnDigitCollectedEvent"/>
        </member>
        <member name="M:o2g.ICallCenterRsi.StopCollectDigitsAsync(System.String,System.String)">
            <summary>
            Stop the specified digit collection on the specified RSI point.
            </summary>
            <param name="rsiNumber">The RSI point extension number.</param>
            <param name="collCrid">The digit collection identifier.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <seealso cref="T:o2g.Events.CallCenterRsi.OnDigitCollectedEvent"/>
            <seealso cref="M:o2g.ICallCenterRsi.StopCollectDigitsAsync(System.String,System.String)"/>
        </member>
        <member name="M:o2g.ICallCenterRsi.PlayToneAsync(System.String,System.String,o2g.Types.CallCenterRsiNS.Tones,System.Int32)">
            <summary>
            Play the specified tone.
            </summary>
            <param name="rsiNumber">The RSI point extension number.</param>
            <param name="callRef">The reference of the call on which to tone will be played.</param>
            <param name="tone">The tone type.</param>
            <param name="duration">The duration the tone is played (in second)</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <seealso cref="M:o2g.ICallCenterRsi.CancelToneAsync(System.String,System.String)"/>
            <seealso cref="T:o2g.Events.CallCenterRsi.OnToneGeneratedStartEvent"/>
        </member>
        <member name="M:o2g.ICallCenterRsi.CancelToneAsync(System.String,System.String)">
            <summary>
            Cancel playing a tone.
            </summary>
            <param name="rsiNumber">The RSI point extension number.</param>
            <param name="callRef">The reference of the call on which to tone will be played.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <seealso cref="M:o2g.ICallCenterRsi.PlayToneAsync(System.String,System.String,o2g.Types.CallCenterRsiNS.Tones,System.Int32)"/>
            <seealso cref="T:o2g.Events.CallCenterRsi.OnToneGeneratedStopEvent"/>
        </member>
        <member name="M:o2g.ICallCenterRsi.PlayVoiceGuideAsync(System.String,System.String,System.Int32,System.Nullable{System.Int32})">
            <summary>
            Play the specified voice guide.
            </summary>
            <param name="rsiNumber">The RSI point extension number.</param>
            <param name="callRef">The reference of the call on which to voice guide will be played.</param>
            <param name="guideNumber">The voice guide number as defined in the OmniPcx Enterprise.</param>
            <param name="duration">An optional duration for the voice guide</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <seealso cref="T:o2g.Events.CallCenterRsi.OnToneGeneratedStartEvent"/>
        </member>
        <member name="M:o2g.ICallCenterRsi.RouteEndAsync(System.String,System.String)">
            <summary>
            End a route session.
            </summary>
            <param name="rsiNumber">The RSI point extension number.</param>
            <param name="routeCrid">The routing session unique identifier.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:o2g.ICallCenterRsi.RouteSelectAsync(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            Selects a route as a response to a RouteRequest.
            </summary>
            <param name="rsiNumber">The RSI point extension number.</param>
            <param name="routeCrid">The routing session unique identifier.</param>
            <param name="selectedRoute">The selected route number.</param>
            <param name="callingLine">Optional calling line number.</param>
            <param name="associatedData">Correlator data to add to the call.</param>
            <param name="routeToVoiceMail"><see langword="true"/> if the selected route is the voice mail.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <paramref name="callingLine"/> can be used to change the identity of the calling number to present on the called party.
            </remarks>
            <seealso cref="T:o2g.Events.CallCenterRsi.OnRouteRequestEvent"/>
        </member>
        <member name="M:o2g.ICallCenterRsi.GetRouteSessionsAsync(System.String)">
            <summary>
            Return the list of existing route request session for the specified RSI point.
            </summary>
            <param name="rsiNumber">The RSI point extension number.</param>
            <returns>
            A list of <see cref="T:o2g.Types.CallCenterRsiNS.RouteSession"/> objets that represents the route session in progress for this RSI point.
            </returns>
        </member>
        <member name="M:o2g.ICallCenterRsi.GetRouteSessionAsync(System.String,System.String)">
            <summary>
            Return the specified route session.
            </summary>
            <param name="rsiNumber">The RSI point extension number.</param>
            <param name="routeCrid">The routing session unique identifier.</param>
            <returns>
            A <see cref="T:o2g.Types.CallCenterRsiNS.RouteSession"/> objet that represents the route session.
            </returns>
        </member>
        <member name="T:o2g.ICommunicationLog">
            <summary>
            The <c>ICommunicationLog</c> service allows a user to retrieve his last communication history records and to manage them.
            Using this service requires having a <b>TELEPHONY_ADVANCED</b> license.
            </summary>
            <remarks>
            <para>
            The call history records are built at O2G server level, thanks to its telephony call monitoring and therefore, 
            the comlog database is built independently of the OmniPcx Enterprise internal comlog.<br/>
            Acknowledgement/Unacknowledgement of an incoming missed call using O2G is <b>NOT synchronized</b> with the OmniPCX Enterprise. 
            </para>
            <para>
            The O2G communication log has a depth of 100 records maximum per user. When the limit is reached, oldest records are removed.
            </para>
            </remarks>
        </member>
        <member name="E:o2g.ICommunicationLog.ComRecordCreated">
            <summary>
            Occurs when a new comlog entry has been created.
            </summary>
        </member>
        <member name="E:o2g.ICommunicationLog.ComRecordModified">
            <summary>
            Occurs when one or more records have been modified.
            </summary>
        </member>
        <member name="E:o2g.ICommunicationLog.ComRecordsDeleted">
            <summary>
            Occurs when one or more call log records have been deleted.
            </summary>
        </member>
        <member name="E:o2g.ICommunicationLog.ComRecordsAck">
            <summary>
            Occurs when one or more unanswered comlog records have been acknowledged.
            </summary>
        </member>
        <member name="E:o2g.ICommunicationLog.ComRecordsUnAck">
            <summary>
            Occurs when one or more unanswered comlog records have been unacknowledged.
            </summary>
        </member>
        <member name="M:o2g.ICommunicationLog.GetComRecordsAsync(o2g.Types.CommunicationLogNS.QueryFilter,o2g.Types.CommunicationLogNS.Page,System.Boolean,System.String)">
             <summary>
             Get the com records corresponding to the given criterias.
             </summary>
             <param name="filter">The filter describing the query criterias.</param>
             <param name="page">Optional page description.</param>
             <param name="optimized"><see langword="true"/> to activate optimization.</param>
             <param name="loginName">The user login name.</param>
             <returns>
             A <see cref="T:o2g.Types.CommunicationLogNS.QueryResult"/> object that represents the results of this query in case of success; <see langword="null"/> otherwise.
             </returns>
             <remarks>
             <para>
             When used, the <c>page</c> parameter of type <see cref="T:o2g.Types.CommunicationLogNS.Page"/> allows to query the communication log by page. The <see cref="T:o2g.Types.CommunicationLogNS.QueryResult"/> result contains the same parameters 
             and the total number of records retrieved by the query.
             </para>
             <para>
             When used, the <c>filter</c> parameter of type <see cref="T:o2g.Types.CommunicationLogNS.QueryFilter"/> defines the search criteria for the query.
             </para>
             <para>
             When <c>optimized</c> is used and set to <see langword="true"/> the query returns the full identity of a participant only the first time it occurs, 
             when the same participant appears in several records. When omitted this query returns the records with no optimization.
             </para>
             <para>
             If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
             but it is mandatory if the session has been opened by an administrator.
             </para>
             </remarks>
             <example>
             This exemple shows how to use the <c>Page</c> object to retrieve com records.
             <code>
                 ICommunicationLog comLog = myApp.CommunicationLogService;
            	
                 Page page = new()
                 {
                     Offset = 0,
                     Limit = 10
                 }
            	
                 for (;;)
                 {	
                     QueryResult result = await comLog.GetCallRecordsAsync(null, page);
            
                     // Display page of result
                     if (result.Count > (page.Offset + page.Limit))
                     {
                         // Load next page
                         page.Next();
            			
                         // Wait a user action (click on a button for exemple)
                         // and load the next page.
                     }
                     else
                     {
                         // end of pages display
                     }
                 }
             </code>
             </example>
        </member>
        <member name="M:o2g.ICommunicationLog.GetComRecordAsync(System.Int64,System.String)">
            <summary>
            Return the com record specified by its identifier.
            </summary>
            <param name="recordId">The com record identifier.</param>
            <param name="loginName">The user login name.</param>
            <returns>
            A <see cref="T:o2g.Types.CommunicationLogNS.ComRecord"/> object that represents the com record with the requested identifier in case of success; <see langword="null"/> in case
            of error or if there is no com record with the specified identifier.
            </returns>
            <remarks>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
        </member>
        <member name="M:o2g.ICommunicationLog.DeleteComRecordAsync(System.Int64,System.String)">
            <summary>
            Delete the com record with the given identifier.
            </summary>
            <param name="recordId">The com record identifier.</param>
            <param name="loginName">The user login name.</param>
            <returns>
            <see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
        </member>
        <member name="M:o2g.ICommunicationLog.DeleteComRecordsAsync(o2g.Types.CommunicationLogNS.QueryFilter,System.String)">
            <summary>
            Delete the com records corresponding to the given criterias.
            </summary>
            <param name="filter">The filter describing the query criterias.</param>
            <param name="loginName">The user login name.</param>
            <returns>
            <see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            When used, the <c>filter</c> parameter of type <see cref="T:o2g.Types.CommunicationLogNS.QueryFilter"/> defines the search criteria for the delete operation.
            A <see cref="T:o2g.Events.CommunicationLog.OnComRecordsDeletedEvent"/> will be raised with the list of deleted com records.
            </para>
            <para>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
            <seealso cref="E:o2g.ICommunicationLog.ComRecordsDeleted"/>
        </member>
        <member name="M:o2g.ICommunicationLog.DeleteComRecordsAsync(System.Collections.Generic.List{System.Int64},System.String)">
            <summary>
            Delete the specified list of com records.
            </summary>
            <param name="recordIds">The list of com records.</param>
            <param name="loginName">The user login name.</param>
            <returns>
            <see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            The event <see cref="T:o2g.Events.CommunicationLog.OnComRecordsDeletedEvent"/> contains the list of the com record identifier that have been really deleted. 
            </para>
            <para>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
            <seealso cref="E:o2g.ICommunicationLog.ComRecordsDeleted"/>
        </member>
        <member name="M:o2g.ICommunicationLog.AcknowledgeComRecordsAsync(System.Collections.Generic.List{System.Int64},System.String)">
            <summary>
            Acknowledge the specified list of com records.
            </summary>
            <param name="recordIds">The list of com records.</param>
            <param name="loginName">The user login name.</param>
            <returns>
            <see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            The event <see cref="T:o2g.Events.CommunicationLog.OnComRecordsAckEvent"/> contains the list of the com record identifier that have been really acknowledged. 
            </para>
            <para>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
            <seealso cref="E:o2g.ICommunicationLog.ComRecordsAck"/>
        </member>
        <member name="M:o2g.ICommunicationLog.AcknowledgeComRecordAsync(System.Int64,System.String)">
            <summary>
            Acknowledge the specified com records.
            </summary>
            <param name="recordId">The com record identifier.</param>
            <param name="loginName">The user login name.</param>
            <returns>
            <see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            The event <see cref="T:o2g.Events.CommunicationLog.OnComRecordsAckEvent"/> contains the list of the com record identifier that have been really acknowledged. 
            </para>
            <para>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
            <seealso cref="M:o2g.ICommunicationLog.AcknowledgeComRecordsAsync(System.Collections.Generic.List{System.Int64},System.String)"/>
            <seealso cref="E:o2g.ICommunicationLog.ComRecordsAck"/>
        </member>
        <member name="M:o2g.ICommunicationLog.UnacknowledgeComRecordsAsync(System.Collections.Generic.List{System.Int64},System.String)">
            <summary>
            Unacknowledge the specified list of com records.
            </summary>
            <param name="recordIds">The list of com records.</param>
            <param name="loginName">The user login name.</param>
            <returns>
            <see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            The event <see cref="T:o2g.Events.CommunicationLog.OnComRecordsUnAckEvent"/> contains the list of the com record identifier that have been really unacknowledged. 
            </para>
            <para>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
            <seealso cref="E:o2g.ICommunicationLog.ComRecordsAck"/>
        </member>
        <member name="M:o2g.ICommunicationLog.UnacknowledgeComRecordAsync(System.Int64,System.String)">
            <summary>
            Unacknowledge the specified com records.
            </summary>
            <param name="recordId">The com record identifier.</param>
            <param name="loginName">The user login name.</param>
            <returns>
            <see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            The event <see cref="T:o2g.Events.CommunicationLog.OnComRecordsUnAckEvent"/> contains the list of the com record identifier that have been really unacknowledged. 
            </para>
            <para>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
            <seealso cref="M:o2g.ICommunicationLog.UnacknowledgeComRecordsAsync(System.Collections.Generic.List{System.Int64},System.String)"/>
            <seealso cref="E:o2g.ICommunicationLog.ComRecordsAck"/>
        </member>
        <member name="T:o2g.IDirectory">
            <summary>
            The <c>DirectoryService</c> is used to search contacts in the OmniPCX Enterprise phone book.Using this service requires having a <b>TELEPHONY_ADVANCED</b> license.
            </summary>
            <para>
            A directory search is a set of 2 or more sequential operations:
            <list type="bullet">
            <item>The first operation initiate the search with a set of criteria</item>
            <item>The second and next operations retrieve results</item>
            </list>
            </para>
            <remarks>
            Note: For each session (user or administrator), only 5 concurrent searches are authorized. An unused search context is freed after 1 minute.
            </remarks>
        </member>
        <member name="M:o2g.IDirectory.SearchAsync(o2g.Types.DirectoryNS.Criteria,System.Nullable{System.Int32},System.String)">
            <summary>
            Initiates a search for the specified user with the specified filter. The search will be limited to the specified number of results.
            </summary>
            <param name="filter">The search filter</param>
            <param name="limit">The maximum number of results. The range of supported values is [1 .. 100]</param>
            <param name="loginName">The user login name</param>
            <returns><c>true</c> in case of success; <c>false</c> otherwise.</returns>
            <seealso cref="T:o2g.Types.DirectoryNS.Criteria"/>
            <remark>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, but it is mandatory if the session has been opened by an administrator.
            </remark>
        </member>
        <member name="M:o2g.IDirectory.CancelAsync(System.String)">
            <summary>
            Cancel a search query for the specified user.
            </summary>
            <param name="loginName">The user login name</param>
            <returns><c>true</c> in case of success; <c>false</c> otherwise.</returns>
            <seealso cref="M:o2g.IDirectory.SearchAsync(o2g.Types.DirectoryNS.Criteria,System.Nullable{System.Int32},System.String)"/>
            <remark>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, but it is mandatory if the session has been opened by an administrator.
            </remark>
        </member>
        <member name="M:o2g.IDirectory.GetResultsAsync(System.String)">
            <summary>
            Gets the next available results for the current search.
            <c>GetResultAsync</c> is generally called in a loop and for each iteration:
            <list type="bullet">
            <item>
            <term>If the status result code is <c>Nok</c></term><description>the search is in progress but no result is available : it is recommended to wait before the next iteration (500ms for example)</description>
            </item>
            <item>
            <term>If the status result code is <c>Ok</c></term><description>Results are available and can be processed.</description>
            </item>
            <item>
            <term>If the status result code is <c>Finish</c> or <c>TimeOut</c></term><description>The search is ended, exit from the loop.</description>
            </item>
            </list>
            </summary>
            <param name="loginName"></param>
            <returns>A <see cref="T:o2g.Types.DirectoryNS.SearchResult"/> object in case of success; <c>null</c> otherwise.</returns>
            <remark>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, but it is mandatory if the session has been opened by an administrator.
            </remark>
        </member>
        <member name="T:o2g.IEventSummary">
            <summary>
            The <c>EventSummary</c> service allows a user to get its new message indicators (missed call, voice mails, callback request, fax). 
            IEventSummary service is available from a connected application, it requires <b>TELEPHONY_ADVANCED</b> license.
            </summary>
            <example>
            <code>
            // Get the EventSummary service from a connected application
            IEventSummary eventSummaryService = myApp.EventSummaryService.
            </code>
            </example>
            <seealso cref="M:o2g.O2G.Application.LoginAsync(System.String,System.String)"/>
        </member>
        <member name="E:o2g.IEventSummary.EventSummaryUpdated">
            <summary>
            <c>EventSummaryUpdated</c> event is raised each time the user's counters have changed.
            </summary>
        </member>
        <member name="M:o2g.IEventSummary.GetAsync(System.String)">
            <summary>
            Retrieve the <c>EventSummary</c> that gives the user's event counters.
            </summary>
            <param name="loginName">Login name of the user for whom the request is invoked. This parameter is mandatory for an administrator session.</param>
            <returns>The <see cref="T:o2g.Types.EventSummaryNS.EventSummary"/> object that gives the user's event counters on success, or <c>null</c> in case of error.</returns>
        </member>
        <member name="T:o2g.IMaintenance">
            <summary>
            <c>IMaintenance</c> service is used to retrieve information about the system state, in particular, information on the 
            OmniPCX Enterprise nodes and their connection state.
            <c>IMaintenance</c> service doesn't require any specific license on the O2G server.
            <para>
            It also provides informations about licenses: total allocated licenses, numbers of current used and expiration date.
            </para>
            </summary>
        </member>
        <member name="E:o2g.IMaintenance.CtiLinkDown">
            <summary>
            Occurs when a CTI link is down. 
            </summary>
        </member>
        <member name="E:o2g.IMaintenance.CtiLinkUp">
            <summary>
            Occurs when a CTI link is up. 
            </summary>
        </member>
        <member name="E:o2g.IMaintenance.PbxLoaded">
            <summary>
            Occurs when datas are fully loaded from an OmniPCX Enterprise node. 
            </summary>
        </member>
        <member name="E:o2g.IMaintenance.LicenseExpiration">
            <summary>
            Occurs when the license file will soon expire or has recently expired
            </summary>
        </member>
        <member name="M:o2g.IMaintenance.GetSystemStatusAsync">
            <summary>
            Get information about system status. 
            <para>
            This operation provides information about the system state, and the total number of each license available 
            for the system. This operation is restricted to an admininistrator only.
            </para>
            </summary>
            <returns>
            A <see cref="T:o2g.Types.MaintenanceNS.SystemStatus"/> objects containing system information.
            </returns>
        </member>
        <member name="T:o2g.IMessaging">
            <summary>
            <c>IMessaging</c> service provides access to user's voice mail box. It's possible using this service to connect 
            to the voice mail box, retrieve the information and the list of voice mails and manage the mail box.
            Using this service requires having a <b>TELEPHONY_ADVANCED</b> license.
            <para>
            It's possible to download the voice mail as a wav file and to delete an existing messages.
            </para>
            </summary>
        </member>
        <member name="M:o2g.IMessaging.GetMailboxesAsync(System.String)">
            <summary>
            Get the specified user's mailboxes. This is the logical first step to access further operation on voice mail feature. 
            </summary>
            <param name="loginName">The user login name.</param>
            <returns>
            A list of <see cref="T:o2g.Types.MessagingNS.MailBox"/>.
            </returns>
            <remarks>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
        </member>
        <member name="M:o2g.IMessaging.GetMailboxInfoAsync(System.String,System.String,System.String)">
            <summary>
            Get the information on the specified mailbox.
            </summary>
            <param name="mailboxId">The mailbox identifier.</param>
            <param name="password">The mailbox password.</param>
            <param name="loginName">The user login name.</param>
            <returns>
            A <see cref="T:o2g.Types.MessagingNS.MailBoxInfo"/> that contains the mailbox information or <see langword="null"/> in case of error.
            </returns>
            <remarks>
            <para>
            The <c>password</c> is optional. if not set, the user password is used to connect on the voicemail. 
            This is only possible if the OmniPCX Enterprise administrator has managed the same pasword for the user and his mailbox.
            </para>
            <para>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.IMessaging.GetVoiceMessagesAsync(System.String,System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String)">
            <summary>
            Get the list of voice mail in this voice mail box.
            </summary>
            <param name="mailboxId">The mailbox identifier.</param>
            <param name="newOnly">Filter only unread voicemail if set to <see langword="true"/> (Default value is <see langword="false"/>)</param>
            <param name="offset">The offset from which to start retrieving the voicemail list (Default value is 0).</param>
            <param name="limit">The maximum number of items to return (Default value is -1: no limit).</param>
            <param name="loginName">The user login name.</param>
            <returns>
            The list of <see cref="T:o2g.Types.MessagingNS.VoiceMessage"/> objects that represents the voice messages.
            </returns>
            <remarks>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
        </member>
        <member name="M:o2g.IMessaging.DeleteVoiceMessageAsync(System.String,System.String,System.String)">
            <summary>
            Delete the specified voice message.
            </summary>
            <param name="mailboxId">The mailbox identifier.</param>
            <param name="voicemailId">The voice message to delete.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
        </member>
        <member name="M:o2g.IMessaging.DeleteVoiceMessagesAsync(System.String,System.Collections.Generic.List{System.String},System.String)">
            <summary>
            Delete the specified list of voice messages.
            </summary>
            <param name="mailboxId">The mailbox identifier.</param>
            <param name="msgIds">The voice messages to delete.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
        </member>
        <member name="M:o2g.IMessaging.DownloadVoiceMessageAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Download a voice mail as a wav file.
            </summary>
            <param name="mailboxId">The mailbox identifier.</param>
            <param name="voicemailId">The voice mail identifier.</param>
            <param name="wavPath">An optional destination file name.</param>
            <param name="loginName">The user login name.</param>
            <returns>
            Return a <see langword="true"/> that is the path to the downloaded wav file.
            </returns>
            <remarks>
            <para>
            If the <c>wavPath</c> is not set, the wav file is downloaded in the default system <c>download</c> folder.
            </para>
            <para>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
        </member>
        <member name="T:o2g.Internal.Rest.AbstractRESTService">
            <summary>
            The abstract base class for REST services.
            </summary>
        </member>
        <member name="P:o2g.Internal.Rest.AbstractRESTService.LastError">
            <summary>
            Return a value indicating the lastest occured error.
            </summary>
            
        </member>
        <member name="T:o2g.Internal.Services.IService">
            <summary>
            The IService is the base interface for all O2G services. 
            </summary>
            <remarks>
            Services are available from an opened session.
            <list type="table">
                <listheader><term>Service</term><description>Description</description></listheader>
                <item><term><see cref="T:o2g.ITelephony"/></term><description>The telephony service provides access to the basic and advanced OmniPCX Enterprise telpehony services.</description></item>
                <item><term><see cref="T:o2g.IUsers"/></term><description>The users service allows to get information about users and to change passwords.</description></item>
                <item><term><see cref="T:o2g.IRouting"/></term><description>The routing service allows to configure the forward, overflow and do not disturb feature.</description></item>
                <item><term><see cref="T:o2g.IMessaging"/></term><description>The messaging service allows to retrieve voice messages.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:o2g.Internal.Services.IService.LastError">
            <summary>
            The <c>LastError</c> property represents the error raised by the last service invoked. It has the <see langword="null"/> value, if no error have been raised.
            </summary>
            <remarks>
            <value>
            The <c>LastError</c> is a <see cref="T:o2g.Types.RestErrorInfo"/> object that provides information about the error.
            </value>
            The last error is set each time a service invocation return an error. It contains all information from errors sent while invoking REST operations on resources.
            But it's possible depending on the context than no error is set on service failure.
            </remarks>
        </member>
        <member name="M:o2g.Internal.Utility.FileUtil.GetSystemPath(o2g.Internal.Utility.SystemFolder)">
            <summary>
            Gets the current path to the specified known folder as currently configured. This does
            not require the folder to be existent.
            </summary>
            <param name="knownFolder">The known folder which current path will be returned.</param>
            <returns>The default path of the known folder.</returns>
            <exception cref="T:System.Runtime.InteropServices.ExternalException">Thrown if the path
                could not be retrieved.</exception>
        </member>
        <member name="M:o2g.Internal.Utility.FileUtil.GetPath(o2g.Internal.Utility.SystemFolder,System.Boolean)">
            <summary>
            Gets the current path to the specified known folder as currently configured. This does
            not require the folder to be existent.
            </summary>
            <param name="knownFolder">The known folder which current path will be returned.</param>
            <param name="defaultUser">Specifies if the paths of the default user (user profile
                template) will be used. This requires administrative rights.</param>
            <returns>The default path of the known folder.</returns>
            <exception cref="T:System.Runtime.InteropServices.ExternalException">Thrown if the path
                could not be retrieved.</exception>
        </member>
        <member name="M:o2g.Internal.Utility.FileUtil.GetRandomFileName(System.Int32,System.String)">
            <summary>
            Create a random file of the specified length and with the specified optional extension
            </summary>
            <param name="length">The file length (without the extension)</param>
            <param name="extension">An optional extension.</param>
            <returns>The random file name</returns>
        </member>
        <member name="T:o2g.Internal.Utility.SystemFolder">
            <summary>
            Standard folders registered with the system. These folders are installed with Windows Vista
            and later operating systems, and a computer will have only folders appropriate to it
            installed.
            </summary>
        </member>
        <member name="T:o2g.ProductVersion">
            <summary>
            Class <c>ProductVersion</c> gives information about the O2G server version.
            </summary>
        </member>
        <member name="P:o2g.ProductVersion.Major">
            <summary>
            Return the major release number of this product version.
            </summary>
            <value>
            A <see langword="string"/> that represents the major release number.
            </value>
        </member>
        <member name="P:o2g.ProductVersion.Minor">
            <summary>
            Return the minor release number of this product version.
            </summary>
            <value>
            A <see langword="string"/> that represents the minor release number.
            </value>
        </member>
        <member name="T:o2g.ServerInfo">
            <summary>
            Class <c>ServerInfo</c> gives information about the O2G server.
            </summary>
        </member>
        <member name="P:o2g.ServerInfo.ProductName">
            <summary>
            Return the O2G server product name.
            </summary>
            <value>
            A <see langword="string"/> that represents the friendly description of the product.
            </value>
        </member>
        <member name="P:o2g.ServerInfo.ProductType">
            <summary>
            Return the O2G server product type.
            </summary>
            <value>
            A <see langword="string"/> that represents the product short name.
            </value>
        </member>
        <member name="P:o2g.ServerInfo.ProductVersion">
            <summary>
            Return the O2G product version.
            </summary>
            <value>
            A <see langword="string"/> that represents the O2G product version.
            </value>
        </member>
        <member name="P:o2g.ServerInfo.HaMode">
            <summary>
            Return whether this O2G is deployed in high availability mode.
            </summary>
            <value>
            <see langword="true"/> if O2G is deployed in high availability mode; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="T:o2g.IPbxManagement">
            <summary>
            The <c>IPbxManagement</c> service allows an administrator to manage an OmniPcx Enterprise, that is to create/modify/delete 
            any object or sub-object in the OmniPcx Enterprise object model.
            Using this service requires having a <b>MANAGEMENT</b> license.
            <para>
            <b>WARNING:</b> Using this service requires to have a good knowledge of the OmniPCX Enterprise object model.
            </para>
            </summary>
            <remarks>
            <para>
            The service uses two kinds of resource: the object model resource and the object instance resource.
            <h3>The object model resource</h3>
            The object model can be retrieved for the whole Pbx or for a particular object. It provides the detail of object attributes: 
            whether the attribute is mandatory/optional in the object creation, what range of value is authorized, what are the possible 
            enumeration value.
            <h3>The object instance resources</h3>
            It is used to create, modify, retrieve or remove any instances of any object, giving the reference of this object. For 
            the creation or the modification of an object, the body must be compliant with the object model.
            </para>
            <para>
            The list of sub-objects which are returned by a get instance of an object corresponds to the relative path of the first 
            instanciable objects in the hierarchy in order to be able by recursion to build the path to access to any object and sub-object.
            </para>
            <para>
            When access to an object which is a sub-object, the full path must be given : <c>{object1Name}/{object1Id}/{object2Name}/{object2Id}/..../{objectxName}/{objectxId}</c>. 
            </para><para>
                ex: pbxs/1/instances/System_Parameters/1/System_Parameters_2/1/Network_Parameters
            </para>
            </remarks>
        </member>
        <member name="E:o2g.IPbxManagement.PbxObjectInstanceCreated">
            <summary>
            Occurs when a PBX object instance is created. 
            </summary>
            <remarks>
            Only Object Subscriber is concerned by this event.
            </remarks>
        </member>
        <member name="E:o2g.IPbxManagement.PbxObjectInstanceDeleted">
            <summary>
            Occurs when a PBX object instance is deleted. 
            </summary>
            <remarks>
            Only Object Subscriber is concerned by this event.
            </remarks>
        </member>
        <member name="E:o2g.IPbxManagement.PbxObjectInstanceModified">
            <summary>
            Occurs when a PBX object instance is modified. 
            </summary>
            <remarks>
            Only Object Subscriber is concerned by this event.
            </remarks>
        </member>
        <member name="M:o2g.IPbxManagement.GetPbxsAsync">
            <summary>
            Get the list of Pbx connected on this O2G server.
            </summary>
            <returns>
            A list of <see langword="int"/> That represents the Pbx node ID; Or <see langword="null"/> in case of error.
            </returns>
        </member>
        <member name="M:o2g.IPbxManagement.GetPbxAsync(System.Int32)">
            <summary>
            Get the OmniPCX Enterprise specified by its node id.
            </summary>
            <param name="nodeId">The PCX Enterprise node id.</param>
            <returns>
            A <see cref="T:o2g.Types.ManagementNS.Pbx"/> object that represents the OmniPCX Enterprise node; Or <see langword="null"/> in case of error.
            </returns>
        </member>
        <member name="M:o2g.IPbxManagement.GetObjectModelAsync(System.Int32,System.String)">
            <summary>
            Get the description of the data model for the specified object on the specified OmniPCX Enterprise node.
            </summary>
            <param name="nodeId">The OmniPCX Enterprise node id.</param>
            <param name="objectName">The object name. This parameter is case sensitive</param>
            <returns>
            An <see cref="T:o2g.Types.ManagementNS.Model"/> object that describes the requested object model; Or <see langword="null"/> in case of error. 
            </returns>
            <remarks>
            If <c>objectName</c> is <see langword="null"/>, the global object model of the OmniPCX Enterprise node is returned.
            </remarks>
        </member>
        <member name="M:o2g.IPbxManagement.GetNodeObjectAsync(System.Int32)">
            <summary>
            Get the node(root) object.
            </summary>
            <param name="nodeId">The OmniPCX Enterprise node id.</param>
            <returns>
            A <see cref="T:o2g.Types.ManagementNS.PbxObject"/> that represents the node object.
            </returns>
            <example>
            <code>
                PbxObject obj = await pbxManagementService.GetObjectAsync(5);
            </code>
            </example>
            <seealso cref="M:o2g.IPbxManagement.GetObjectAsync(System.Int32,System.String,System.String,System.String)"/>
        </member>
        <member name="M:o2g.IPbxManagement.GetObjectAsync(System.Int32,System.String,System.String,System.String)">
            <summary>
            Get the object specified by its instance definition and its instance id.
            </summary>
            <param name="nodeId">The OmniPCX Enterprise node id.</param>
            <param name="objectInstanceDefinition">The object instance definition.</param>
            <param name="objectId">The object instance id.</param>
            <param name="attributes">The object attributes to request.</param>
            <returns>
            A <see cref="T:o2g.Types.ManagementNS.PbxObject"/> that represents the requested object.
            </returns>
            <remarks>
            If <c>attributes</c> is not <see langword="null"/>, this method return the list of the specified attributes and the list of 
            sub-object paths of the current object. 
            <para>
            The <c>attributes</c> value is a comma separated object attribute name list: <c>"Station_Type,Directory_Number,..."</c>
            </para>
            </remarks>
            <example>
            <code>
                PbxObject obj = await pbxManagementService.GetObjectAsync(5, "Subscriber", "36530", "Station_Type,Directory_Number");
            </code>
            </example>
            <seealso cref="M:o2g.IPbxManagement.GetObjectAsync(System.Int32,System.String,System.String,System.Collections.Generic.List{o2g.Types.ManagementNS.PbxAttribute})"/>
        </member>
        <member name="M:o2g.IPbxManagement.GetObjectAsync(System.Int32,System.String,System.String,System.Collections.Generic.List{o2g.Types.ManagementNS.PbxAttribute})">
            <summary>
            Get the object specified by its instance definition and its instance id.
            </summary>
            <param name="nodeId">The OmniPCX Enterprise node id.</param>
            <param name="objectInstanceDefinition">The object instance definition.</param>
            <param name="objectId">The object instance id.</param>
            <param name="attributes">The list of attributes that will be returned.</param>
            <returns>
            A <see cref="T:o2g.Types.ManagementNS.PbxObject"/> that represents the requested object.
            </returns>
            <remarks>
            This method return the list of the specified attributes and the list of sub-object paths of the current object. 
            </remarks>
            <seealso cref="M:o2g.IPbxManagement.GetObjectAsync(System.Int32,System.String,System.String,System.String)"/>
        </member>
        <member name="M:o2g.IPbxManagement.GetObjectAsync(System.Int32,System.String,System.String,System.String[])">
            <summary>
            Get the object specified by its instance definition and its instance id.
            </summary>
            <param name="nodeId">The OmniPCX Enterprise node id.</param>
            <param name="objectInstanceDefinition">The object instance definition.</param>
            <param name="objectId">The object instance id.</param>
            <param name="attributes">The list of attributes that will be returned.</param>
            <returns>
            A <see cref="T:o2g.Types.ManagementNS.PbxObject"/> that represents the requested object.
            </returns>
            <remarks>
            This method return the list of the specified attributes and the list of sub-object paths of the current object. 
            </remarks>
            <seealso cref="M:o2g.IPbxManagement.GetObjectAsync(System.Int32,System.String,System.String,System.String)"/>
        </member>
        <member name="M:o2g.IPbxManagement.GetObjectInstancesAsync(System.Int32,System.String,o2g.Types.ManagementNS.Filter)">
            <summary>
            Query the list of object instances that match the specified filter.
            </summary>
            <param name="nodeId">The OmniPCX Enterprise node id.</param>
            <param name="objectInstanceDefinition">The object instance definition.</param>
            <param name="filter">The <see cref="T:o2g.Types.ManagementNS.Filter"/> object that represents a filter on the object attribute.</param>
            <returns>
            A list of <see langword="string"/> that represents the instance of the found objects, or <see langword="null"/> in case of error or 
            if no instance match the specified filter.
            </returns>
            <example>
            <code>
                Filter filter = Filter.Create("StationType", AttributeFilter.Equals, "ANALOG");
                List&lt;string> objectInstances = await pbxManagementService.GetObjectInstancesAsync(5, "Subscriber", filter);
            </code>
            </example>
            <seealso cref="M:o2g.IPbxManagement.GetObjectInstancesAsync(System.Int32,System.String,System.String)"/>
        </member>
        <member name="M:o2g.IPbxManagement.GetObjectInstancesAsync(System.Int32,System.String,System.String)">
            <summary>
            Query the list of object instances that match the specified filter.
            </summary>
            <param name="nodeId">The OmniPCX Enterprise node id.</param>
            <param name="objectInstanceDefinition">The object instance definition.</param>
            <param name="filter">The filter on the object attribute or null to return all the instances of the specified object.</param>
            <returns>
            A list of <see langword="string"/> that represents the instance of the found object, or <see langword="null"/> in case of error or 
            if no instance match the specified filter.
            </returns>
            <seealso cref="M:o2g.IPbxManagement.GetObjectInstancesAsync(System.Int32,System.String,o2g.Types.ManagementNS.Filter)"/>
        </member>
        <member name="M:o2g.IPbxManagement.SetObjectAsync(System.Int32,System.String,System.String,System.Collections.Generic.List{o2g.Types.ManagementNS.PbxAttribute})">
            <summary>
            Change one or several attribute values of the specified object.
            </summary>
            <param name="nodeId">The OmniPCX Enterprise node id.</param>
            <param name="objectInstanceDefinition">The object instance definition.</param>
            <param name="objectId">The object instance id.</param>
            <param name="attributes">The list of <see cref="T:o2g.Types.ManagementNS.PbxAttribute"/> to change.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            If an update on the same object has been performed by other administrator since last operation a conflict error
            occurs and a GET operation must be done to allow the update, it avoids change done by other to be cancelled.
            </remarks>
            <example>
            <code>
                List&lt;PbxAttribute> attrs = new();
                attrs.Add(PbxAttribute.Create("Station_Type", "ANALOG"));
                
                if (! await pbxManagementService.SetObjectAsync(5, "Subscriber", "23100", attrs))
                {
                    Console.WriteLine("Error");
                }
                
            </code>
            </example>
        </member>
        <member name="M:o2g.IPbxManagement.DeleteObjectAsync(System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            Delete the specified instance of object.
            </summary>
            <param name="nodeId">The OmniPCX Enterprise node id.</param>
            <param name="objectInstanceDefinition">The object instance definition.</param>
            <param name="objectId">The object instance id.</param>
            <param name="forceDelete">Use the "<c>FORCED_DELETE</c>" action to delete the object.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            The "<c>FORCED_DELETE</c>" action is not available for all object. Check the availability in the <see cref="T:o2g.Types.ManagementNS.Model"/> corresponding to this object.
            This option can be used for exemple to delete a <c>Subscriber</c> having voice mails in his mail box.
            </remarks>
        </member>
        <member name="M:o2g.IPbxManagement.CreateObjectAsync(System.Int32,System.String,System.Collections.Generic.List{o2g.Types.ManagementNS.PbxAttribute})">
            <summary>
            Create a new object with the specified list of attributes
            </summary>
            <param name="nodeId">The OmniPCX Enterprise node id.</param>
            <param name="objectInstanceDefinition">The object instance definition.</param>
            <param name="attributes">The attributes.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="T:o2g.IPhoneSetProgramming">
            <summary>
            <c>IPhoneSetProgramming</c> service allows a user to manage its device states: lock/campon/programmable keys.
            Using this service requires having a <b>API_PHONESETPROG</b> license.
            </summary>
        </member>
        <member name="M:o2g.IPhoneSetProgramming.GetDevicesAsync(System.String)">
            <summary>
            Get the device of the specified user.
            </summary>
            <param name="loginName">The user login name</param>
            <returns>
            A list of <see cref="T:o2g.Types.UsersNS.Device"/> that represents the user's devices.
            </returns>
        </member>
        <member name="M:o2g.IPhoneSetProgramming.GetDeviceAsync(System.String,System.String)">
            <summary>
            Return the specified device.
            </summary>
            <param name="loginName">The user login name.</param>
            <param name="deviceId">The device phone number.</param>
            <returns>
            A <see cref="T:o2g.Types.UsersNS.Device"/> that represents the device with the specified number in case of success, of <see langword="null"/> in case of error of if
            the user does not have a device with this number.
            </returns>
        </member>
        <member name="M:o2g.IPhoneSetProgramming.GetProgrammableKeysAsync(System.String,System.String)">
            <summary>
            Get the programmable keys of the specified device.
            </summary>
            <param name="loginName">The user login name.</param>
            <param name="deviceId">The device phone number.</param>
            <returns>
            A list of <see cref="T:o2g.Types.PhoneSetProgrammableNS.ProgrammableKey"/> that represents this device programmable keys in case of success, or a <see langword="null"/> value in case of error.
            </returns>
        </member>
        <member name="M:o2g.IPhoneSetProgramming.GetProgrammedKeysAsync(System.String,System.String)">
            <summary>
            Get the already programmed keys associated to the specified device.
            </summary>
            <param name="loginName">The user login name.</param>
            <param name="deviceId">The device phone number.</param>
            <returns>
            A list of <see cref="T:o2g.Types.PhoneSetProgrammableNS.ProgrammableKey"/> that represents this device already programmed keys in case of success, or a <see langword="null"/> value in case of error.
            </returns>
        </member>
        <member name="M:o2g.IPhoneSetProgramming.SetProgrammableKeyAsync(System.String,System.String,o2g.Types.PhoneSetProgrammableNS.ProgrammableKey)">
            <summary>
            Set the programmable keys of the specified device.
            </summary>
            <param name="loginName">The user login name.</param>
            <param name="deviceId">The device phone number.</param>
            <param name="key">The programmable key.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            The key position must be configured in the <c>key</c> object.
            </remarks>
        </member>
        <member name="M:o2g.IPhoneSetProgramming.DeleteProgrammableKeyAsync(System.String,System.String,System.Int32)">
            <summary>
            Delete the programmable keys of the specified device.
            </summary>
            <param name="loginName">The user login name.</param>
            <param name="deviceId">The device phone number.</param>
            <param name="position">The programmable key position.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
        </member>
        <member name="M:o2g.IPhoneSetProgramming.GetSoftKeys(System.String,System.String)">
            <summary>
            Get the softkeys of the specified device.
            </summary>
            <param name="loginName">The user login name.</param>
            <param name="deviceId">The device phone number.</param>
            <returns>
            A list of <see cref="T:o2g.Types.PhoneSetProgrammableNS.SoftKey"/> that represents this device softkeys in case of success, or a <see langword="null"/> value in case of error.
            </returns>
        </member>
        <member name="M:o2g.IPhoneSetProgramming.SetSoftKeyAsync(System.String,System.String,o2g.Types.PhoneSetProgrammableNS.SoftKey)">
            <summary>
            Set the softkeys of the specified device.
            </summary>
            <param name="loginName">The user login name.</param>
            <param name="deviceId">The device phone number.</param>
            <param name="key">The softkey.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            The key position must be configured in the <c>key</c> object.
            </remarks>
        </member>
        <member name="M:o2g.IPhoneSetProgramming.DeleteSoftKeyAsync(System.String,System.String,System.Int32)">
            <summary>
            Delete the softkeys of the specified device.
            </summary>
            <param name="loginName">The user login name.</param>
            <param name="deviceId">The device phone number.</param>
            <param name="position">The softkey position.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
        </member>
        <member name="M:o2g.IPhoneSetProgramming.LockDeviceAsync(System.String,System.String)">
            <summary>
            Lock the specified device.
            </summary>
            <param name="loginName">The user login name.</param>
            <param name="deviceId">The device phone number.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            This method does nothing and return <see langword="true"/> if the the device is already locked.
            </remarks>
            <seealso cref="M:o2g.IPhoneSetProgramming.GetDynamicStateAsync(System.String,System.String)"/>
        </member>
        <member name="M:o2g.IPhoneSetProgramming.UnLockDeviceAsync(System.String,System.String)">
            <summary>
            UnLock the specified device.
            </summary>
            <param name="loginName">The user login name.</param>
            <param name="deviceId">The device phone number.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            This method does nothing and return <see langword="true"/> if the the device is already unlocked.
            </remarks>
            <seealso cref="M:o2g.IPhoneSetProgramming.GetDynamicStateAsync(System.String,System.String)"/>
        </member>
        <member name="M:o2g.IPhoneSetProgramming.EnableCamponAsync(System.String,System.String)">
            <summary>
            Enable the camp on for specified device.
            </summary>
            <param name="loginName">The user login name.</param>
            <param name="deviceId">The device phone number.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            This method does nothing and return <see langword="true"/> f the the camp on is already enabled.
            </remarks>
            <seealso cref="M:o2g.IPhoneSetProgramming.GetDynamicStateAsync(System.String,System.String)"/>
        </member>
        <member name="M:o2g.IPhoneSetProgramming.DisableCamponAsync(System.String,System.String)">
            <summary>
            Disable the camp on for specified device.
            </summary>
            <param name="loginName">The user login name.</param>
            <param name="deviceId">The device phone number.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            This method does nothing and return <see langword="true"/> if the the camp on is already disabled.
            </remarks>
            <seealso cref="M:o2g.IPhoneSetProgramming.GetDynamicStateAsync(System.String,System.String)"/>
        </member>
        <member name="M:o2g.IPhoneSetProgramming.GetPinCodeAsync(System.String,System.String)">
            <summary>
            Return the PIN code associated to this device.
            </summary>
            <param name="loginName">The user login name.</param>
            <param name="deviceId">The device phone number.</param>
            <returns>
            A <see cref="T:o2g.Types.PhoneSetProgrammableNS.Pin"/> object that represents the PIN code.
            </returns>
        </member>
        <member name="M:o2g.IPhoneSetProgramming.SetPinCodeAsync(System.String,System.String,o2g.Types.PhoneSetProgrammableNS.Pin)">
            <summary>
            Set the PIN code for this device.
            </summary>
            <param name="loginName">The user login name.</param>
            <param name="deviceId">The device phone number.</param>
            <param name="code">The PIN code.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
        </member>
        <member name="M:o2g.IPhoneSetProgramming.GetDynamicStateAsync(System.String,System.String)">
            <summary>
            Return the device dynamic state.
            </summary>
            <param name="loginName">The user login name.</param>
            <param name="deviceId">The device phone number.</param>
            <returns>
            A <see cref="T:o2g.Types.PhoneSetProgrammableNS.DynamicState"/> object that represent the device dynamic state.
            </returns>
            <seealso cref="M:o2g.IPhoneSetProgramming.EnableCamponAsync(System.String,System.String)"/>
            <seealso cref="M:o2g.IPhoneSetProgramming.LockDeviceAsync(System.String,System.String)"/>
        </member>
        <member name="M:o2g.IPhoneSetProgramming.SetAssociateAsync(System.String,System.String,System.String)">
            <summary>
            Set the associate phone number.
            </summary>
            <param name="loginName">The user login name.</param>
            <param name="deviceId">The device phone number.</param>
            <param name="associate">The associate number.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <seealso cref="M:o2g.IPhoneSetProgramming.GetDynamicStateAsync(System.String,System.String)"/>
        </member>
        <member name="M:o2g.IPhoneSetProgramming.ActivateRemoteExtensionAsync(System.String,System.String)">
            <summary>
            Activate the associated remote extension device.
            </summary>
            <param name="loginName">The user login name.</param>
            <param name="deviceId">The remote extension phone number.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <seealso cref="M:o2g.IRouting.ActivateRemoteExtensionAsync(System.String)"/>
        </member>
        <member name="M:o2g.IPhoneSetProgramming.DeactivateRemoteExtensionAsync(System.String,System.String)">
            <summary>
            Deactivate the associated remote extension device.
            </summary>
            <param name="loginName">The user login name.</param>
            <param name="deviceId">The remote extension phone number.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <seealso cref="M:o2g.IRouting.DeactivateRemoteExtensionAsync(System.String)"/>
        </member>
        <member name="T:o2g.IRouting">
            <summary>
            The <c>IRouting</c> service allows a user to manage forward, overflow, Do Not Disturb and activation of his remote extension device (if any).
            Using this service requires having a <b>TELEPHONY_ADVANCED</b> license.
            </summary>
            <remarks>
            <para>
            <h3>Forward:</h3>
            A forward can be activated on the voice mail or on any number as far as this number is authorized by the 
            OmniPCX Enterprise numbering policy. Use one of the methods:
            <see cref="M:o2g.IRouting.ForwardOnNumberAsync(System.String,o2g.Types.RoutingNS.Forward.ForwardCondition,System.String)"/> or <see cref="M:o2g.IRouting.ForwardOnVoiceMailAsync(o2g.Types.RoutingNS.Forward.ForwardCondition,System.String)"/> to activate a forward.
            </para>
            <para>
            A <see cref="P:o2g.Types.RoutingNS.Forward.Condition"/> can be associated to the forward:
            <list type="table">
            <listheader>
            <term>Condition</term><description>Description</description>
            </listheader>
            <item><term>Immediate</term><description>Incoming calls are immediately forwarded on the target.</description></item>
            <item><term>Busy</term><description>Incoming calls are forwarded on the target if the user is busy.</description></item>
            <item><term>NoAnswer</term><description>Incoming calls are forwarded on the target if the user does not answer the call.</description></item>
            <item><term>BusyOrNoAnswer</term><description>One of the two last conditions.</description></item>
            </list>
            </para>
            <para>
            <h3>Overflow:</h3>
            An overflow can be activated on the voice mail (if any). Use the methods:
            <see cref="M:o2g.IRouting.OverflowOnVoiceMailAsync(o2g.Types.RoutingNS.Overflow.OverflowCondition,System.String)"/> to activate an overflow.
            </para>
            <para>
            A <see cref="P:o2g.Types.RoutingNS.Overflow.Condition"/> can be associated to the overflow:
            <list type="table">
            <listheader>
            <term>Condition</term><description>Description</description>
            </listheader>
            <item><term>Busy</term><description>Incoming calls are redirected on the target if the user is busy.</description></item>
            <item><term>NoAnswer</term><description>Incoming calls are redirected on the target if the user does not answer the call.</description></item>
            <item><term>BusyOrNoAnswer</term><description>One of the two last conditions.</description></item>
            </list>
            </para>
            <para>
            <h3>Do Not Disturb:</h3>
            When the Do Not Disturb (DND) is activated, the user does not receive any call. The DND is activated using method <see cref="M:o2g.IRouting.ActivateDndAsync(System.String)"/>.
            </para>
            <para>
            <h3>Remote extension activation:</h3>
            When a remote extension is not activated, it does not ring on incoming call. Use the method <see cref="M:o2g.IRouting.ActivateRemoteExtensionAsync(System.String)"/> to activate the remote extension.
            </para>
            </remarks>
        </member>
        <member name="E:o2g.IRouting.RoutingStateChanged">
            <summary>
            <c>RoutingStateChanged</c> event is raised for each routing modification.
            </summary>
        </member>
        <member name="M:o2g.IRouting.GetCapabilitiesAsync(System.String)">
            <summary>
            Allows to know what the specified user is allowed to do with <c>IRouting</c> services.
            </summary>
            <param name="loginName">The user login name.</param>
            <returns>A <see cref="T:o2g.Types.RoutingNS.RoutingCapabilities"/> in case of success; <see langword="null"/> otherwise.</returns>
            <remarks>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
        </member>
        <member name="M:o2g.IRouting.ActivateRemoteExtensionAsync(System.String)">
            <summary>
            Activate the routing on the specified user's remote extension device.
            <para>
            When the remote extension is activated, it rings on incoming call on the user 
            company phone. When it is deactivated, it never rings, but it can be used to 
            place an outgoing call.
            </para>
            </summary>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            <para>
            This method does nothing and return <see langword="true"/> if the remote extension is already activated.
            </para>
            <para>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.IRouting.DeactivateRemoteExtensionAsync(System.String)">
            <summary>
            Deactivate the routing on the specified user's remote extension device.
            <para>
            When the remote extension is activated, it rings on incoming call on the user 
            company phone. When it is deactivated, it never rings, but it can be used to 
            place an outgoing call.
            </para>
            </summary>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
        </member>
        <member name="M:o2g.IRouting.GetDndStateAsync(System.String)">
            <summary>
            Get the Do Not Disturb state of the specified user.
            </summary>
            <param name="loginName">The user login name.</param>
            <returns>
            A <see cref="T:o2g.Types.RoutingNS.DndState"/> object that represents the Do Not Disturb state.
            </returns>
            <remarks>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
        </member>
        <member name="M:o2g.IRouting.ActivateDndAsync(System.String)">
            <summary>
            Activate the Do Not Disturb for the specified user.
            </summary>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            <para>
            This method does nothing and return <see langword="true"/> if the Do Not Disturb is already activated.
            </para>
            <para>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.IRouting.CancelDndAsync(System.String)">
            <summary>
            Cancel the Do Not Disturb for the specified user.
            </summary>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            <para>
            This method does nothing and return <see langword="true"/> if the Do Not Disturb is not activated.
            </para>
            <para>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.IRouting.GetForwardAsync(System.String)">
            <summary>
            Get the forward state of the specified user.
            </summary>
            <param name="loginName">The user login name.</param>
            <returns>
            A <see cref="T:o2g.Types.RoutingNS.Forward"/> object that represents the forward state.
            </returns>
            <remarks>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
        </member>
        <member name="M:o2g.IRouting.CancelForwardAsync(System.String)">
            <summary>
            Cancel the forward for the specified user.
            </summary>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            <para>
            This method does nothing and return <see langword="true"/> if there is no forward activated.
            </para>
            <para>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.IRouting.ForwardOnVoiceMailAsync(o2g.Types.RoutingNS.Forward.ForwardCondition,System.String)">
            <summary>
            Activate a forward on the user voicemail with the specified condition.
            </summary>
            <param name="condition">The forward condition.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            <para>
            If a forward was already activated, it is replaced by the new forward.
            </para>
            <para>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.IRouting.ForwardOnNumberAsync(System.String,o2g.Types.RoutingNS.Forward.ForwardCondition,System.String)">
            <summary>
            Activate a forward on the specified number with the specified condition, for the specifed user.
            </summary>
            <param name="number">The phone number on which the forward is activated.</param>
            <param name="condition">The forward condition.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            <para>
            If a forward was already activated, it is replaced by the new forward.
            </para>
            <para>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.IRouting.CancelOverflowAsync(System.String)">
            <summary>
            Cancel the overflow for the specified user.
            </summary>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            <para>
            This method does nothing and return <see langword="true"/> if there is no overflow activated.
            </para>
            <para>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.IRouting.GetOverflowAsync(System.String)">
            <summary>
            Get the overflow state of the specified user.
            </summary>
            <param name="loginName">The user login name.</param>
            <returns>
            A <see cref="T:o2g.Types.RoutingNS.Overflow"/> object that represents the overflow state.
            </returns>
            <remarks>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
        </member>
        <member name="M:o2g.IRouting.OverflowOnVoiceMailAsync(o2g.Types.RoutingNS.Overflow.OverflowCondition,System.String)">
            <summary>
            Activate an overflow on the user voicemail with the specified condition.
            </summary>
            <param name="condition">The overflow condition.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            <para>
            If an overflow was already activated, it is replaced by the new forward.
            </para>
            <para>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.IRouting.GetRoutingStateAsync(System.String)">
            <summary>
            Get the global routing state of the specified user.
            </summary>
            <param name="loginName">The user login name.</param>
            <returns>
            A <see cref="T:o2g.Types.RoutingNS.RoutingState"/> object that represents the user routing state.
            </returns>
            <remarks>
            If the session has been opened for a user, the <c>loginName</c> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
        </member>
        <member name="M:o2g.IRouting.RequestSnapshotAsync(System.String)">
            <summary>
            Ask a snapshot event to receive an <see cref="T:o2g.Events.Routing.OnRoutingStateChangedEvent"/> event notification.
            </summary>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise</returns>
            <remarks>
            <para>
            The event <see cref="T:o2g.Events.Routing.OnRoutingStateChangedEvent"/> will contain the dynamic forward, overflow, do not disturb an remote extension activation status.
            If a second request is asked since the previous one is still in progress, it has no effect.
            </para>
            <para>
            If an administrator invokes <c>RequestSnapshotAsync</c> with <c>loginName = null</c>, the snapshot event request is done for all the users.
            The event processing can be long depending on the number of users.
            </para>
            </remarks>
        </member>
        <member name="T:o2g.ITelephony">
            <summary>
            The <c>ITelephony</c> service allows a user or an administrator to manage OmniPCX Enterprise calls.
            Using this service requires having a <b>TELEPHONY_ADVANCED</b> license.
            </summary>
        </member>
        <member name="E:o2g.ITelephony.CallCreated">
            <summary>
            Occurs when a new call is created.
            </summary>
        </member>
        <member name="E:o2g.ITelephony.CallModified">
            <summary>
            Occurs when an existing call is modified.
            </summary>
        </member>
        <member name="E:o2g.ITelephony.CallRemoved">
            <summary>
            Occurs when a call has been removed.
            </summary>
        </member>
        <member name="E:o2g.ITelephony.UserStateModified">
            <summary>
            Occurs when a user's state has been modified.
            </summary>
        </member>
        <member name="E:o2g.ITelephony.TelephonyState">
            <summary>
            Occurs in response to a snapshot request.
            </summary>
            <seealso cref="M:o2g.ITelephony.RequestSnapshotAsync(System.String)"/>
        </member>
        <member name="E:o2g.ITelephony.DeviceStateModified">
            <summary>
            Occurs when a device's state has been modified.
            </summary>
        </member>
        <member name="E:o2g.ITelephony.DynamicStateChanged">
            <summary>
            Occurs when a user's dynamic state change.
            </summary>
        </member>
        <member name="M:o2g.ITelephony.BasicMakeCallAsync(System.String,System.String,System.Boolean)">
            <summary>
            Initiates a call to another user, from the specified device. This method is a basic make call, it doesn't require any license.
            </summary>
            <param name="deviceId">Device phone number used by the usr to initiate the call. If the session is opened by a user, the device phone number must be one of the user.</param>
            <param name="callee">Called phone number.</param>
            <param name="autoAnswer">Automatic answer on make call. If this parameter is set to <c>false</c> the user's device (deviceId) is called before placing the call to callee, else callee is called immediately.</param>
            <returns><see langword="true"/> on success ; else <see langword="false"/>.</returns>
        </member>
        <member name="M:o2g.ITelephony.BasicAnswerCallAsync(System.String)">
            <summary>
            Answer to an ringing incoming call. This method is a basic answer call, it doesn't require any license.
            </summary>
            <param name="deviceId">The ringing device phone number.</param>
            <returns><see langword="true"/> on success ; else <see langword="false"/>.</returns>
        </member>
        <member name="M:o2g.ITelephony.BasicDropMeAsync(System.String)">
            <summary>
            Release the call. 
            </summary>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            If the call is a single call, it is released; if it is a conference, the call carries on without the user.
            </para>
            <para>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.ITelephony.GetCallsAsync(System.String)">
            <summary>
            Get calls in progress for this session.
            </summary>
            <param name="loginName">The user login name.</param>
            <returns>A list of <see cref="T:o2g.Types.TelephonyNS.PbxCall"/> that represents calls in progress.</returns>
            <remarks>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
        </member>
        <member name="M:o2g.ITelephony.GetCallAsync(System.String,System.String)">
            <summary>
            Get a call from the specified reference.
            </summary>
            <param name="callRef">The call reference that identify the requested call.</param>
            <param name="loginName">The user login name.</param>
            <returns>A <see cref="T:o2g.Types.TelephonyNS.PbxCall"/> object that represents the call.</returns>
            <remarks>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
        </member>
        <member name="M:o2g.ITelephony.MakeCallAsync(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Initiates a new call to another user (the callee), using the specified deviceId.
            </summary>
            <param name="deviceId">The device phone number from which the call is placed. If the session is opened by a user, the device phone number must be one of the user.</param>
            <param name="callee">Called phone number.</param>
            <param name="autoAnswer">Automatic answer on make call. If this parameter is set to <see langword="false"/> the device <paramref name="deviceId"/> is called before calling the callee, else callee is called immediately.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            Use the <c>MakeCallAsync</c> service to initiated a call from one of the devices of the logged user. First, the call server initiates a call on the user <paramref name="deviceId"/>. Then when the call is answered the call server starts the call to the <paramref name="callee"/>.
            an <see cref="T:o2g.Events.Telephony.OnCallCreatedEvent"/> is raised.
            </para>
            <para>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
            <seealso cref="T:o2g.Events.Telephony.OnCallCreatedEvent"/><seealso cref="T:o2g.Events.Telephony.OnCallModifiedEvent"/>
            
        </member>
        <member name="M:o2g.ITelephony.MakeCallAsync(System.String,System.String,System.Boolean,System.Boolean,System.String,System.String,System.String)">
            <summary>
            Initiates a new call to another user (the callee), using the specified deviceId and options.
            </summary>
            <param name="deviceId">The device phone number from which the call is placed. If the session is opened by a user, the device phone number must be one of the user.</param>
            <param name="callee">Called phone number.</param>
            <param name="autoAnswer">Automatic answer on make call. If this parameter is set to <see langword="false"/> the device <paramref name="deviceId"/> is called before calling the callee, else callee is called immediately.</param>
            <param name="inhibitProgressTone">Allows to inhibit the progress tone on the current external call.</param>
            <param name="associatedData">Correlator data to add to the call.</param>
            <param name="callingNumber">Calling number to present to the public network.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            Use the <c>MakeCallAsync</c> service to initiated a call from one of the devices of the logged user. First, the call server initiates a call on the user <paramref name="deviceId"/>. Then when the call is answered the call server starts the call to the <paramref name="callee"/>.
            an <see cref="T:o2g.Events.Telephony.OnCallCreatedEvent"/> is raised.
            </para>
            <para>
            If <c>inhibitProgressTone</c> is <see langword="true"/>, progress tone is inhibited on an outbound call.
            </para>
            <para>
            The <c>callingNumber</c> is used on an outbound call to  to present another calling number on the public network call in order to hide the real calling extension number.
            </para>
            <para>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
            <seealso cref="T:o2g.Events.Telephony.OnCallCreatedEvent"/><seealso cref="T:o2g.Events.Telephony.OnCallModifiedEvent"/>
        </member>
        <member name="M:o2g.ITelephony.MakeCallAsync(System.String,System.String,System.Boolean,System.Boolean,System.Byte[],System.String,System.String)">
            <summary>
            Initiates a new call to another user (the callee), using the specified deviceId and options.
            </summary>
            <param name="deviceId">The device phone number from which the call is placed. If the session is opened by a user, the device phone number must be one of the user.</param>
            <param name="callee">Called phone number.</param>
            <param name="autoAnswer">Automatic answer on make call. If this parameter is set to <see langword="false"/> the device <paramref name="deviceId"/> is called before calling the callee, else callee is called immediately.</param>
            <param name="inhibitProgressTone">Allows to inhibit the progress tone on the current external call.</param>
            <param name="associatedData">The byte array data associated to the call.</param>
            <param name="callingNumber">Calling number to present to the public network.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            Use the <c>MakeCallAsync</c> service to initiated a call from one of the devices of the logged user. First, the call server initiates a call on the user <paramref name="deviceId"/>. Then when the call is answered the call server starts the call to the <paramref name="callee"/>.
            an <see cref="T:o2g.Events.Telephony.OnCallCreatedEvent"/> is raised.
            </para>
            <para>
            If <c>inhibitProgressTone</c> is <see langword="true"/>, progress tone is inhibited on an outbound call.
            </para>
            <para>
            The <c>callingNumber</c> is used on an outbound call to  to present another calling number on the public network call in order to hide the real calling extension number.
            </para>
            <para>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
            <seealso cref="T:o2g.Events.Telephony.OnCallCreatedEvent"/><seealso cref="T:o2g.Events.Telephony.OnCallModifiedEvent"/>
        </member>
        <member name="M:o2g.ITelephony.MakePrivateCallAsync(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initiates a new private call to another user (the callee), using a pin code and an optional secret code.
            </summary>
            <param name="deviceId">The device phone number from which the call is placed. If the session is opened by a user, the device phone number must be one of the user.</param>
            <param name="callee">Called phone number.</param>
            <param name="pin">The PIN code to identify the caller.</param>
            <param name="secretCode">The optional secret code used to confirm the PIN code.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            The private call is a service which allows a user to specify that the external call made is personal and not professional.The charging for this
            type of call can then be given specific processing.
            </para>
            <para>
            Use the <c>MakePrivateCallAsync</c> service to initiated a private call from one of the devices of the logged user. First, the call server initiates a 
            call on the user <paramref name="deviceId"/>. Then when the call is answered the call server starts the call to the <paramref name="callee"/>.
            an <see cref="T:o2g.Events.Telephony.OnCallCreatedEvent"/> is raised.
            </para>
            <para>
            The private call requires the user enters a PIN code (Personal Identification Number). 
            </para>
            <para>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
            <seealso cref="T:o2g.Events.Telephony.OnCallCreatedEvent"/><seealso cref="T:o2g.Events.Telephony.OnCallModifiedEvent"/>
            <seealso cref="M:o2g.IPhoneSetProgramming.GetPinCodeAsync(System.String,System.String)"/>
        </member>
        <member name="M:o2g.ITelephony.MakeBusinessCallAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Initiates a new business call to another user (the callee), using the specified business code.
            </summary>
            <param name="deviceId">The device phone number from which the call is placed. If the session is opened by a user, the device phone number must be one of the user.</param>
            <param name="callee">Called phone number.</param>
            <param name="businessCode">The cost center on which the call will be charged.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            Use the <c>MakeBusinessCallAsync</c> service to initiated a business call from one of the devices of the logged user. First, the call server initiates a 
            call on the user <paramref name="deviceId"/>. Then when the call is answered the call server starts the call to the <paramref name="callee"/>.
            an <see cref="T:o2g.Events.Telephony.OnCallCreatedEvent"/> is raised.
            </para>
            <para>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
            <seealso cref="T:o2g.Events.Telephony.OnCallCreatedEvent"/><seealso cref="T:o2g.Events.Telephony.OnCallModifiedEvent"/>
        </member>
        <member name="M:o2g.ITelephony.MakeSupervisorCallAsync(System.String,System.Boolean,System.String)">
            <summary>
            Initiates a call from a CCD agent to a supervisor.
            </summary>
            <param name="deviceId">The device phone number from which the call is placed. If the session is opened by a user, the device phone number must be one of the user.</param>
            <param name="autoAnswer">Automatic answer on make call. If this parameter is set to <see langword="false"/> the device <paramref name="deviceId"/> is called before calling the callee, else callee is called immediately.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            Use the <c>MakeSupervisorCallAsync</c> service to initiated a call from an agent to a supervisor. First, the call server initiates a 
            call on the agent <paramref name="deviceId"/>. Then, when the call is answered the call server calls the supervisor.
            an <see cref="T:o2g.Events.Telephony.OnCallCreatedEvent"/> is raised.
            </para>
            <para>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.ITelephony.MakePilotOrRSISupervisedTransferCallAsync(System.String,System.String,System.String,System.Collections.Generic.List{o2g.Types.TelephonyNS.CallNS.AcdNS.AcrSkill},System.String)">
            <summary>
            Initiates an enquiry call from a CCD agent to a pilot or a RSI point.
            </summary>
            <param name="deviceId">The device phone number from which the call is placed. If the session is opened by a user, the device phone number must be one of the user.</param>
            <param name="pilot">Called CCD pilot or RSI point number.</param>
            <param name="associatedData">Correlator data to add to the call.</param>
            <param name="callProfile">The call profile associated to this call.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            Use the <c>MakePilotOrRSISupervisedTransferCallAsync</c> service to initiated an enquiry call to a CCD pilot or an RSI point from a CCD operator. 
            </para>
            <para>
            The CCD pilot or the RSI point performs a call distribution to select an agent that will be alerted by this call. The <paramref name="callProfile"/> is mandatory
            in case of "Advanced Call Routing" call distribution strategy.
            </para>
            <para>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.ITelephony.MakePilotOrRSISupervisedTransferCallAsync(System.String,System.String,System.Byte[],System.Collections.Generic.List{o2g.Types.TelephonyNS.CallNS.AcdNS.AcrSkill},System.String)">
            <summary>
            Initiates an enquiry call from a CCD agent to a pilot or a RSI point.
            </summary>
            <param name="deviceId">The device phone number from which the call is placed. If the session is opened by a user, the device phone number must be one of the user.</param>
            <param name="pilot">Called CCD pilot or RSI point number.</param>
            <param name="associatedData">The byte array data associated to the call.</param>
            <param name="callProfile">The call profile associated to this call.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            Use the <c>MakePilotOrRSISupervisedTransferCallAsync</c> service to initiated an enquiry call to a CCD pilot or an RSI point from a CCD operator. 
            </para>
            <para>
            The CCD pilot or the RSI point performs a call distribution to select an agent that will be alerted by this call. The <paramref name="callProfile"/> is mandatory
            in case of "Advanced Call Routing" call distribution strategy.
            </para>
            <para>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.ITelephony.MakePilotOrRSICallAsync(System.String,System.String,System.Boolean,System.String,System.Collections.Generic.List{o2g.Types.TelephonyNS.CallNS.AcdNS.AcrSkill},System.String)">
            <summary>
            Initiates an local call to a CCD pilot or a RSI point.
            </summary>
            <param name="deviceId">The device phone number from which the call is placed. If the session is opened by a user, the device phone number must be one of the user.</param>
            <param name="pilot">Called CCD pilot or RSI point number.</param>
            <param name="autoAnswer">Automatic answer on make call. If this parameter is set to <see langword="false"/> the device <paramref name="deviceId"/> is called before calling the callee, else callee is called immediately.</param>
            <param name="associatedData">Correlator data to add to the call.</param>
            <param name="callProfile">The call profile associated to this call.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            Use the <c>MakePilotOrRSICallAsync</c> service to initiated a local call to a CCD pilot or an RSI point. 
            </para>
            <para>
            The CCD pilot or the RSI point performs a call distribution to select an agent that will be alerted by this call. The <paramref name="callProfile"/> is mandatory
            in case of "Advanced Call Routing" call distribution strategy.
            </para>
            <para>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.ITelephony.MakePilotOrRSICallAsync(System.String,System.String,System.Boolean,System.Byte[],System.Collections.Generic.List{o2g.Types.TelephonyNS.CallNS.AcdNS.AcrSkill},System.String)">
            <summary>
            Initiates an local call to a CCD pilot or a RSI point.
            </summary>
            <param name="deviceId">The device phone number from which the call is placed. If the session is opened by a user, the device phone number must be one of the user.</param>
            <param name="pilot">Called CCD pilot or RSI point number.</param>
            <param name="autoAnswer">Automatic answer on make call. If this parameter is set to <see langword="false"/> the device <paramref name="deviceId"/> is called before calling the callee, else callee is called immediately.</param>
            <param name="associatedData">The byte array data associated to the call.</param>
            <param name="callProfile">The call profile associated to this call.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            Use the <c>MakePilotOrRSICallAsync</c> service to initiated a local call to a CCD pilot or an RSI point. 
            </para>
            <para>
            The CCD pilot or the RSI point performs a call distribution to select an agent that will be alerted by this call. The <paramref name="callProfile"/> is mandatory
            in case of "Advanced Call Routing" call distribution strategy.
            </para>
            <para>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.ITelephony.AlternateAsync(System.String,System.String)">
            <summary>
            Puts on hold the specified active call and retrieve a call that has been previously put in hold.
            </summary>
            <param name="callRef">The active call reference.</param>
            <param name="deviceId">The device phone number for which the operation is invoked.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:o2g.ITelephony.AnswerAsync(System.String,System.String)">
            <summary>
            Responds to an incoming ringing call.
            </summary>
            <param name="callRef">The incomming call reference.</param>
            <param name="deviceId">The device phone number for which the operation is invoked.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:o2g.ITelephony.AttachDataAsync(System.String,System.String,System.String)">
            <summary>
            Associates data to the specified established call. 
            </summary>
            <param name="callRef">The call reference.</param>
            <param name="deviceId">The device phone number for which the operation is invoked.</param>
            <param name="associatedData">The data associated to the call.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            Associates data can be encoded as clear string or binary encoded string. The associated data has a 32 bytes length.
            </remarks>
        </member>
        <member name="M:o2g.ITelephony.AttachDataAsync(System.String,System.String,System.Byte[])">
            <summary>
            Associates data to the specified established call. 
            </summary>
            <param name="callRef">The call reference.</param>
            <param name="deviceId">The device phone number for which the operation is invoked.</param>
            <param name="associatedData">The byte array data associated to the call.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            Associates data can be encoded as clear string or binary encoded string. The associated data has a 32 bytes length.
            </remarks>
        </member>
        <member name="M:o2g.ITelephony.BlindTransferAsync(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Transfers the active call to another user, without keeping control on this call.
            </summary>
            <param name="callRef">The call reference.</param>
            <param name="transferTo">The phone number to which the call is transfered.</param>
            <param name="anonymous">Anonymous transfer.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            If <c>anonymous</c> is <see langword="true"/>, the call is transfered as anonymous; otherwise, the identity is provided.
            </para>
            <para>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
            
        </member>
        <member name="M:o2g.ITelephony.CallbackAsync(System.String,System.String)">
            <summary>
            Request a callback on the call specified by the call reference for the specified user.
            </summary>
            <param name="callRef">The call reference.</param>
            <param name="loginName">The user login name.</param>
            <returns>
            <see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
        </member>
        <member name="M:o2g.ITelephony.GetDeviceLegsAsync(System.String,System.String)">
            <summary>
            Get the legs associated to this call.
            </summary>
            <param name="callRef">The call reference.</param>
            <param name="loginName">The user login name.</param>
            <returns>
            A list of <see cref="T:o2g.Types.TelephonyNS.CallNS.Leg"/> that represents the legs associated with this call in case of success; <see langword="null"/> otherwise.
            </returns>
            <remarks>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
        </member>
        <member name="M:o2g.ITelephony.GetDeviceLegAsync(System.String,System.String,System.String)">
            <summary>
            Get the specified leg form the specified this call.
            </summary>
            <param name="callRef">The call reference.</param>
            <param name="legId">The leg identifier.</param>
            <param name="loginName">The user login name.</param>
            <returns>
            A <see cref="T:o2g.Types.TelephonyNS.CallNS.Leg"/> that represents the leg with the given identifier in case of success; 
            <see langword="null"/> in case of error or if there is no such leg associated to this call..
            </returns>
            <remarks>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
            <seealso cref="M:o2g.ITelephony.GetDeviceLegsAsync(System.String,System.String)"/>
        </member>
        <member name="M:o2g.ITelephony.DropmeAsync(System.String,System.String)">
            <summary>
            Exits from the call specified by its reference.
            </summary>
            <param name="callRef">The call reference.</param>
            <param name="loginName">The user login name.</param>
            <returns>
            <see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            If the call is a single call, it is released; if it is a conference, the call continue without the user.
            </para>
            <para>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.ITelephony.HoldAsync(System.String,System.String,System.String)">
            <summary>
            Put on hold the call specified by its reference, on the specified device.
            </summary>
            <param name="callRef">The call reference.</param>
            <param name="deviceId">The device phone number from which the call put on hold. If the session is opened by a user, the device phone number must be one of the user.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
            
        </member>
        <member name="M:o2g.ITelephony.MergeAsync(System.String,System.String,System.String)">
            <summary>
            Make a 3-party conference with a specified active call and the specified held call.
            </summary>
            <param name="callRef">The call reference.</param>
            <param name="heldCallRef">The held call reference.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
            
        </member>
        <member name="M:o2g.ITelephony.OverflowToVoiceMailAsync(System.String,System.String)">
            <summary>
            Redirects an outgoing ringing call specified by its reference to the voice mail of the called user.
            </summary>
            <param name="callRef">The call reference.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
            
        </member>
        <member name="M:o2g.ITelephony.GetStateAsync(System.String)">
            <summary>
            Redirects an outgoing ringing call specified by its reference to the voice mail of the called user.
            </summary>
            <param name="loginName">The user login name.</param>
            <returns>
            A <see cref="T:o2g.Types.TelephonyNS.TelephonicState"/> object that represents the telephonic state of the user in case of success; 
            <see langword="null"/> otherwise.
            </returns>
            <remarks>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
            <see cref="M:o2g.ITelephony.RequestSnapshotAsync(System.String)"/>
            
        </member>
        <member name="M:o2g.ITelephony.ParkAsync(System.String,System.String,System.String)">
            <summary>
            Park the specified active call to a target device.
            </summary>
            <param name="callRef">The call reference.</param>
            <param name="parkTo">The target device extension number.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            If <c>parkTo</c> is not provided, the call is parked on the current device.
            </para>
            <para>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
            <seealso cref="M:o2g.ITelephony.UnParkAsync(System.String,System.String)"/>
        </member>
        <member name="M:o2g.ITelephony.GetParticipantsAsync(System.String,System.String)">
            <summary>
            Get the list of participants in this call.
            </summary>
            <param name="callRef">The call reference.</param>
            <param name="loginName">The user login name.</param>
            <returns>
            A list of <see cref="T:o2g.Types.TelephonyNS.CallNS.Participant"/> object that represents the participants of this call, or <see langword="null"/> in case
            of error or if there is no such paricipant associatde to this call.
            </returns>
            <remarks>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
        </member>
        <member name="M:o2g.ITelephony.GetParticipantAsync(System.String,System.String,System.String)">
            <summary>
            Get the specified participant from this call.
            </summary>
            <param name="callRef">The call reference.</param>
            <param name="participantId">The participant identifier.</param>
            <param name="loginName">The user login name.</param>
            <returns>
            A <see cref="T:o2g.Types.TelephonyNS.CallNS.Participant"/> object that represents the requested participant, or <see langword="null"/> in case
            of error or if there is no such paricipant associatde to this call.
            </returns>
            <remarks>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
        </member>
        <member name="M:o2g.ITelephony.DropParticipantAsync(System.String,System.String,System.String)">
            <summary>
            Drop the specified participant from the call.
            </summary>
            <param name="callRef">The call reference.</param>
            <param name="participantId">The participant identifier.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            If the call is a single call, it is released; if it is a conference, the call continues without the participant.
            </para>
            <para>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
            
        </member>
        <member name="M:o2g.ITelephony.ReconnectAsync(System.String,System.String,System.String,System.String)">
            <summary>
            Release the current call (active or ringing) to retrieve a previously put in hold call (cancel a consultation call).
            </summary>
            <param name="callRef">The call reference.</param>
            <param name="deviceId">The device phone number for which the operation is done. If the session is opened by a user, the device phone number must be one of the user.</param>
            <param name="enquiryCallRef">The reference of the enquiry call to cancel.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
        </member>
        <member name="M:o2g.ITelephony.RecordingAsync(System.String,o2g.Types.TelephonyNS.RecordingAction,System.String)">
            <summary>
            Starts, stops, pauses or resumes the recording of a the specified call.
            </summary>
            <param name="callRef">The call reference.</param>
            <param name="action">The recording action.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
        </member>
        <member name="M:o2g.ITelephony.RedirectAsync(System.String,System.String,System.Boolean,System.String)">
            <summary>
            Redirects an incoming ringing call to another user or number, instead of responding to it.
            </summary>
            <param name="callRef">The call reference.</param>
            <param name="redirectTo">Phone number of the redirection, or <c>"VOICEMAIL"</c></param>
            <param name="anonymous">Anonymous transfer.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            If <c>anonymous</c> is <see langword="true"/>, the call is redirected as anonymous; otherwise, the identity is provided.
            </para>
            <para>
            If <c>redirectTo</c> is equal to <c>"VOICEMAIL"</c>, the incoming ringing call is redirected the call to the user voice mail.
            </para>
            <para>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.ITelephony.RetrieveAsync(System.String,System.String,System.String)">
            <summary>
            Retrieves a call that has been previously put in hold.
            </summary>
            <param name="callRef">The call reference.</param>
            <param name="deviceId">The device phone number for which the operation is done. If the session is opened by a user, the device phone number must be one of the user.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
        </member>
        <member name="M:o2g.ITelephony.SendDtmfAsync(System.String,System.String,System.String)">
            <summary>
            Send DTMF codes on the specified active call.
            </summary>
            <param name="callRef">The call reference.</param>
            <param name="deviceId">The device phone number for which the operation is done. If the session is opened by a user, the device phone number must be one of the user.</param>
            <param name="number">the DTMF codes to send.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:o2g.ITelephony.SendAccountInfoAsync(System.String,System.String,System.String)">
            <summary>
            Send the transaction code for the specified call, on the specified device.
            </summary>
            <param name="callRef">The call reference.</param>
            <param name="deviceId">The device phone number for which the operation is done. If the session is opened by a user, the device phone number must be one of the user.</param>
            <param name="accountInfo">the transaction code.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            This operation is used by a CCD agent to send the transaction code at the end of the call. 
            The string value MUST complain with the transaction code accepted by OmniPcx Ennterprise(that is numerical value only)
            </remarks>
        </member>
        <member name="M:o2g.ITelephony.TransferAsync(System.String,System.String,System.String)">
            <summary>
            Transfers a specified active call to a specified held call.
            </summary>
            <param name="callRef">The call reference.</param>
            <param name="heldCallRef">The reference of the held call.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
        </member>
        <member name="M:o2g.ITelephony.DeskSharingLogOnAsync(System.String,System.String)">
            <summary>
            Log the specified user on a specified desk sharing set.
            </summary>
            <param name="dssDeviceNumber">The desk sharing set phone number.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            The user must be configured as a desk sharing user.
            </para>
            <para>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
            <seealso cref="M:o2g.ITelephony.DeskSharingLogOffAsync(System.String)"/>
        </member>
        <member name="M:o2g.ITelephony.DeskSharingLogOffAsync(System.String)">
            <summary>
            Log off the specified user from the desk sharing set.
            </summary>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            The user must be configured as a desk sharing user.
            </para>
            <para>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
            <seealso cref="M:o2g.ITelephony.DeskSharingLogOnAsync(System.String,System.String)"/>
        </member>
        <member name="M:o2g.ITelephony.GetDevicesStateAsync(System.String)">
            <summary>
            Return the state of the user's devices.
            </summary>
            <param name="loginName">The user login name.</param>
            <returns>
            A list of <see cref="T:o2g.Types.TelephonyNS.DeviceNS.DeviceState"/> that represents the state of the user's devices in 
            case of success, or <see langword="null"/> otherwise.
            </returns>
            <remarks>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
        </member>
        <member name="M:o2g.ITelephony.GetDeviceStateAsync(System.String,System.String)">
            <summary>
            Return the state of the specified user's device.
            </summary>
            <param name="deviceId">The device phone number.</param>
            <param name="loginName">The user login name.</param>
            <returns>
            A <see cref="T:o2g.Types.TelephonyNS.DeviceNS.DeviceState"/> that represents the state of requested device in case of success, or <see langword="null"/>
            in case of error or if the device doesn't belong to the user.
            </returns>
            <remarks>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
            <seealso cref="M:o2g.ITelephony.GetDevicesStateAsync(System.String)"/>
        </member>
        <member name="M:o2g.ITelephony.PickUpAsync(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Picks up the specified incoming call to another user.
            </summary>
            <param name="deviceId">The device phone number from which the pickup is done. If the session is opened by a user, the device phone number must be one of the user.</param>
            <param name="otherCallRef">Reference of the call to pickup (on the remote user).</param>
            <param name="otherPhoneNumber">The phone number on which the call is ringing.</param>
            <param name="autoAnswer">Automatic answer the call after the pickup. </param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
        </member>
        <member name="M:o2g.ITelephony.IntrusionAsync(System.String)">
            <summary>
            Intrusion in the active call of a called user.
            </summary>
            <param name="deviceId">The device phone number.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            No parameter is required to invoke the intrusion: it only depends on the current capability intrusion of the current device. 
            It is based on the fact that the current device must be in releasing state while calling a user which is in busy call with another user, 
            the current device has the intrusion capability and the 2 users engaged in the call have the capability to allow intrusion.
            </para>
            <para>Available from O2G 2.4</para>
            </remarks>
        </member>
        <member name="M:o2g.ITelephony.UnParkAsync(System.String,System.String)">
            <summary>
            UnPark a call from a target device.
            </summary>
            <param name="deviceId">the device from where the unpark request is requested.</param>
            <param name="heldCallRef">Reference of the parked call.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <seealso cref="M:o2g.ITelephony.ParkAsync(System.String,System.String,System.String)"/>
        </member>
        <member name="M:o2g.ITelephony.GetHuntingGroupStatusAsync(System.String)">
            <summary>
            Retrieve the user hunting group status.
            </summary>
            <param name="loginName">The user login name.</param>
            <returns>
            A <see cref="T:o2g.Types.TelephonyNS.HuntingGroupStatus"/> that represents the status of the user in case of 
            success; <see langword="null"/> otherwise.
            </returns>
            <remarks>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
            <seealso cref="E:o2g.ITelephony.DynamicStateChanged"/>
        </member>
        <member name="M:o2g.ITelephony.HuntingGroupLogOnAsync(System.String)">
            <summary>
            Log on the specified user in his current hunting group.
            </summary>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            This method does nothing and return <see langword="true"/> if the user is already logged in his hunting group.
            </para>
            <para>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
            <seealso cref="M:o2g.ITelephony.GetHuntingGroupStatusAsync(System.String)"/>
            <seealso cref="M:o2g.ITelephony.HuntingGroupLogOffAsync(System.String)"/>
            <seealso cref="E:o2g.ITelephony.DynamicStateChanged"/>
        </member>
        <member name="M:o2g.ITelephony.HuntingGroupLogOffAsync(System.String)">
            <summary>
            Log off the specified user from his current hunting group.
            </summary>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            This method does nothing and return <see langword="true"/> if the user is already logged off from his hunting group.
            </para>
            <para>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
            <seealso cref="M:o2g.ITelephony.GetHuntingGroupStatusAsync(System.String)"/>
            <seealso cref="M:o2g.ITelephony.HuntingGroupLogOnAsync(System.String)"/>
            <seealso cref="E:o2g.ITelephony.DynamicStateChanged"/>
        </member>
        <member name="M:o2g.ITelephony.AddHuntingGroupMemberAsync(System.String,System.String)">
            <summary>
            Set the specified user as member of an existing hunting group.
            </summary>
            <param name="hgNumber">The hunting group number.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            This method does nothing and return <see langword="true"/> if the user is already member of the hunting group.
            </para>
            <para>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
            <seealso cref="M:o2g.ITelephony.GetHuntingGroupStatusAsync(System.String)"/>
            <seealso cref="M:o2g.ITelephony.DeleteHuntingGroupMemberAsync(System.String,System.String)"/>
        </member>
        <member name="M:o2g.ITelephony.DeleteHuntingGroupMemberAsync(System.String,System.String)">
            <summary>
            Remove the specified user from an existing hunting group.
            </summary>
            <param name="hgNumber">The hunting group number.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            This method does nothing and return <see langword="true"/> if the user is not member of the hunting group.
            </para>
            <para>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
            <seealso cref="M:o2g.ITelephony.GetHuntingGroupStatusAsync(System.String)"/>
            <seealso cref="M:o2g.ITelephony.AddHuntingGroupMemberAsync(System.String,System.String)"/>
        </member>
        <member name="M:o2g.ITelephony.QueryHuntingGroupsAsync(System.String)">
            <summary>
            Query the list of hunting groups existing on the OmniPcx Enterprise node the specified user belong to.
            </summary>
            <param name="loginName">The user login name.</param>
            <returns>
            A <see cref="T:o2g.Types.TelephonyNS.HuntingGroups"/> object that gives the list of existing hunting group on the specified node.
            </returns>
            <remarks>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
            <seealso cref="M:o2g.ITelephony.GetHuntingGroupStatusAsync(System.String)"/>
            <seealso cref="M:o2g.ITelephony.AddHuntingGroupMemberAsync(System.String,System.String)"/>
            <seealso cref="M:o2g.ITelephony.DeleteHuntingGroupMemberAsync(System.String,System.String)"/>
        </member>
        <member name="M:o2g.ITelephony.GetCallbacksAsync(System.String)">
            <summary>
            Get the list of callback requests.
            </summary>
            <param name="loginName">The user login name.</param>
            <returns>
            A list of <see cref="T:o2g.Types.TelephonyNS.Callback"/> that represents the callback requests in case of success;
            <see langword="null"/> in case of error or if there is no callback request.
            </returns>
            <remarks>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
        </member>
        <member name="M:o2g.ITelephony.DeleteCallbacksAsync(System.String)">
            <summary>
            Delete all callback requests.
            </summary>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
            <seealso cref="M:o2g.ITelephony.GetCallbacksAsync(System.String)"/>
        </member>
        <member name="M:o2g.ITelephony.GetMiniMessageAsync(System.String)">
            <summary>
            Returns the current new message.
            </summary>
            <param name="loginName">The user login name.</param>
            <returns>
            A <see cref="T:o2g.Types.TelephonyNS.MiniMessage"/> object that represents the message receive by the user.
            </returns>
            <remarks>
            <para>
            As soon as a message is read, it is erased from OXE and cannot be read again. The messages 
            are retrieved in Last In First Out mode.
            </para>
            <para>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </para>
            </remarks>
            <seealso cref="M:o2g.ITelephony.SendMiniMessageAsync(System.String,System.String,System.String)"/>
        </member>
        <member name="M:o2g.ITelephony.SendMiniMessageAsync(System.String,System.String,System.String)">
            <summary>
            Send the specified mini message to the specified recipient.
            </summary>
            <param name="recipient">The message destinator.</param>
            <param name="message">The message to send.</param>
            <param name="loginName">The user login name.</param>
            <returns>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            </returns>
            <remarks>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
            <seealso cref="M:o2g.ITelephony.GetMiniMessageAsync(System.String)"/>
        </member>
        <member name="M:o2g.ITelephony.RequestCallbackAsync(System.String,System.String)">
            <summary>
            Requests for call back from an idle device.
            </summary>
            <param name="callee">Callee phone number of the called party for which a call back is requested.</param>
            <param name="loginName">The user login name.</param>
            <returns>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            </returns>
            <remarks>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
            <seealso cref="M:o2g.ITelephony.GetCallAsync(System.String,System.String)"/>
            <seealso cref="M:o2g.ITelephony.DeleteCallbacksAsync(System.String)"/>
        </member>
        <member name="M:o2g.ITelephony.ReleaseCallAsync(System.String,System.String)">
            <summary>
            Release the specified call.
            </summary>
            <param name="callRef">The call reference.</param>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            If the session has been opened for a user, the <paramref name="loginName"/> parameter is ignored, 
            but it is mandatory if the session has been opened by an administrator.
            </remarks>
        </member>
        <member name="M:o2g.ITelephony.RequestSnapshotAsync(System.String)">
            <summary>
            Ask a snapshot event to receive an <see cref="T:o2g.Events.Telephony.OnTelephonyStateEvent"/> event notification.
            </summary>
            <param name="loginName">The user login name.</param>
            <returns><see langword="true"/> in case of success; <see langword="false"/> otherwise.</returns>
            <remarks>
            <para>
            The event <see cref="T:o2g.Events.Telephony.OnTelephonyStateEvent"/> will contain the <see cref="T:o2g.Types.TelephonyNS.TelephonicState"/> (calls[] and  deviceCapabilities[]).
            If a second request is asked since the previous one is still in progress, it has no effect.
            </para>
            <para>
            If an administrator invokes <c>RequestSnapshotAsync</c> with <c>loginName = null</c>, the snapshot event request is done for all the users.
            The event processing can be long depending on the number of users.
            </para>
            </remarks>
            <seealso cref="M:o2g.ITelephony.GetStateAsync(System.String)"/>
            <seealso cref="E:o2g.ITelephony.TelephonyState"/>
        </member>
        <member name="T:o2g.IUsers">
            <summary>
            The <c>IUsers</c> service allows:
            <list type="bullet">
            <item>An administrator to retrieve the list of O2G users.</item>
            <item>A user to get information on another user account.</item>
            <item>A user to change its password or get some parameters like supported language.</item>
            </list>
            <c>IUsers</c> service is available from a connected application, it doesn't require any specific license on the O2G server.
            </summary>
            <example>
            <code>
            // Get the user service from an opened session
            IUsers usersService = myApplication.Users.
            </code>
            </example>
            <seealso cref="T:o2g.O2G.Application"/>
        </member>
        <member name="E:o2g.IUsers.UserInfoChanged">
            <summary>
            <c>UserInfoChanged</c> event is raised on any change on the user's data.
            </summary>
        </member>
        <member name="E:o2g.IUsers.UserCreated">
            <summary>
            <c>UserCreated</c> event is raised on creation of an user.
            </summary>
            <remarks>
            This event can only be receive by an administrator.
            </remarks>
        </member>
        <member name="E:o2g.IUsers.UserDeleted">
            <summary>
            <c>UserCreated</c> event is raised when user is deleted.
            </summary>
            <remarks>
            This event can only be receive by an administrator.
            </remarks>
        </member>
        <member name="M:o2g.IUsers.GetLoginsAsync(System.String[],System.Boolean)">
            <summary>
            Retrieve a list of users login from the connected OXEs. 
            </summary>
            <param name="nodeIds">Specify a list of OXE nodes Id in which the query is done. This parameter is only valid for an administrator session.</param>
            <param name="onlyACD">Allows to select only the ACD operators (agents or supervisors) during the query. This parameter is only valid for an administrator session.</param>
            <returns>The list of users identified by their login. If <c>GetLogins</c> is used by a user session, it return only the user's login</returns>
        </member>
        <member name="M:o2g.IUsers.GetByLoginNameAsync(System.String)">
            <summary>
            Returns an <c>User</c> object that represents the account information for the specified user.
            </summary>
            <param name="loginName">Login name of the user to retrieve the account information.</param>
            <returns>An <c>User</c> that represent the user account information.</returns>
        </member>
        <member name="M:o2g.IUsers.GetByCompanyPhoneAsync(System.String)">
            <summary>
            Returns an <c>User</c> object that represents the account information of the user with the specified company phone.
            </summary>
            <param name="companyPhone">Company phone of the user to retrieve the account informations.</param>
            <returns>An <c>User</c> that represent the user account information.</returns>
        </member>
        <member name="M:o2g.IUsers.GetSupportedLanguagesAsync(System.String)">
            <summary>
            Return an <c>UserSupportedLanguages</c> that represents the user supported languages.
            </summary>
            <param name="loginName">Login name of the user to retrieve the account information.</param>
            <returns>An <c>UserSupportedLanguages</c> that represents the user supported languages.</returns>
        </member>
        <member name="M:o2g.IUsers.GetPreferencesAsync(System.String)">
            <summary>
            Return an <c>UserPreferences</c> that represents the user's preferences.
            </summary>
            <param name="loginName">Login name of the user to retrieve the account information.</param>
            <returns>An <c>UserPreferences</c> that represents the user's preferences.</returns>
        </member>
        <member name="M:o2g.IUsers.ChangePasswordAsync(System.String,System.String,System.String)">
            <summary>
            Change the password of the user or the administrator that have opened the session
            </summary>
            <param name="loginName">Login name of the user to retrieve the account information.</param>
            <param name="oldPassword">The old password to change</param>
            <param name="newPassword">The new password</param>
            <returns><see langword="true"/> on success ; else <see langword="false"/>.</returns>
        </member>
        <member name="T:o2g.O2G">
            <summary>
            <c>O2G</c> is the basic class an application must use create an O2G application. 
            </summary>
            <remarks>
            <c>O2G</c> class is a singleton class used to bootstrap the SDK and create an <see cref="T:o2g.O2G.Application"/> application.
            </remarks>
            <example>
            <code>
                // Create an application
                O2G.Application myApp = new("MyApplication");
                
                // Set the O2G host
                myApp.SetHost(new()
                {
                    PrivateAddress = "o2g-vl30.aledsppublic.com",
                    PublicAddress = "o2g-vl30.aledspprivate.com"
                });
            </code>
            </example>
        </member>
        <member name="P:o2g.O2G.ApiVersion">
            <summary>
            Represent the API version. By default this value is <c>"1.0"</c>. 
            </summary>
            <value>
            A <see langword="string"/> value that represents the O2G API version.
            </value>
            <remarks>
            This value can be changed at startup to specify using another version of the REST API. 
            </remarks>
        </member>
        <member name="P:o2g.O2G.SdkVersion">
            <summary>
            Return the version of this sdk.
            </summary>
            <value>
            A <see langword="string"/> value that represents the SDK version.
            </value>
        </member>
        <member name="T:o2g.O2G.Application">
            <summary>
            Class Application represents an O2G application.
            <para>
            A typical O2G application is built by creating an O2G.Application instance and then 
            call the <see cref="M:o2g.O2G.Application.LoginAsync(System.String,System.String)"/> method.
            Then, if required, the application subscribes a set of events.
            </para>
            </summary>
            <example>
            <code>
                
                O2G.Application myApplication = new("ApplicationName");
                
                try
                {
                    await myApplication.LoginAsync(myLoginName, myPassword);
                    
                    // Create subscription
                    Subscription subscription = Subscription.Builder
                                                    .AddRoutingEvents()         // Add routing service events
                                                    .AddTelephonyEvents()       // Add telephony service events
                                                    .AddEventSummaryEvents()    // Add event summary events
                                                    .Build();                   // Build the subscription
                    
                    // Add an event handler on the ChannelInformation event.
                    myApplication.ChannelInformation += (source, ev) =>
                    {
                        // Called when the event channel is established
                        Console.WriteLine("Eventing channel is established.");
                        
                        // Use the routing service
                        IRouting routingService = myApplication.RoutingService;
                        await routingService.ForwardOnVoiceMailAsync(Forward.ForwardCondition.Immediate);
                        
                        ...
                    };
            
                    // Suscribe to events using the built subscription
                    await myApplication.SubscribeAsync(subscription);
                    
                    ...
                }
                catch (O2GAuthenticateException e)
                {
                    Console.WriteLine("Unable to authenticate the user.");
                }
            
            </code>
            </example>
        </member>
        <member name="E:o2g.O2G.Application.ChannelInformation">
            <summary>
            <c>EventSummaryUpdated</c> event is raised each time the user's counters have changed..
            </summary>
        </member>
        <member name="P:o2g.O2G.Application.ApplicationName">
            <summary>
            Return the application name.
            </summary>
            <value>
            A <see langword="string"/> value that represents the application name.
            </value>
            <remarks>
            The application name is given when the <see cref="T:o2g.O2G.Application"/> is created. It is used for statistics on the O2G server.
            </remarks>
        </member>
        <member name="P:o2g.O2G.Application.LoginName">
            <summary>
            Return the login name of the connected user.
            </summary>
            <value>
            A <see langword="string"/> value that represents the user login name.
            </value>
        </member>
        <member name="M:o2g.O2G.Application.#ctor(System.String)">
            <summary>
            Create a new O2G application with the specified name.
            </summary>
            <param name="applicationName">The applicationName is an identifier for logging and statistic purpose</param>
        </member>
        <member name="M:o2g.O2G.Application.SetHost(o2g.Types.Host,o2g.Types.Host)">
            <summary>
            Set the O2G <see cref="T:o2g.Types.Host"/> on which the application wants to connect to.
            </summary>
            <param name="host1">The main O2G <see cref="T:o2g.Types.Host">Host</see></param>
            <param name="host2">The secondary O2G <see cref="T:o2g.Types.Host">Host</see></param>
        </member>
        <member name="M:o2g.O2G.Application.LoginAsync(System.String,System.String)">
            <summary>
            Connect the application to the O2G service endpoint, using the specified login and password to authenticate the user.
            </summary>
            <param name="loginName">The user login name</param>
            <param name="password">The user password</param>
        </member>
        <member name="M:o2g.O2G.Application.SubscribeAsync(o2g.Subscription)">
            <summary>
            Subscribe to events from the O2G server. The requested events are specified using a <see cref="T:o2g.Subscription"/> object.
            </summary>
            <param name="subscription">The <see cref="T:o2g.Subscription"/> describing the events to receive.</param>
        </member>
        <member name="M:o2g.O2G.Application.ShutdownAsync">
            <summary>
            Terminate the application. Dispose all used ressources.
            </summary>
        </member>
        <member name="P:o2g.O2G.Application.MaintenanceService">
            <summary>
            Return the maintenance service.
            </summary>
            <value>
            A <see cref="T:o2g.IMaintenance"/> object that provides maintenance services.
            </value>
        </member>
        <member name="P:o2g.O2G.Application.RoutingService">
            <summary>
            Return the routing service.
            </summary>
            <value>
            A <see cref="T:o2g.IRouting"/> object that provides routing services.
            </value>
        </member>
        <member name="P:o2g.O2G.Application.TelephonyService">
            <summary>
            Return the telephony service.
            </summary>
            <value>
            A <see cref="T:o2g.ITelephony"/> object that provides telephony services.
            </value>
        </member>
        <member name="P:o2g.O2G.Application.EventSummaryService">
            <summary>
            Return the event summary service.
            </summary>
            <value>
            A <see cref="T:o2g.IEventSummary"/> object that provides event summary services.
            </value>
        </member>
        <member name="P:o2g.O2G.Application.CallCenterRsiService">
            <summary>
            Return the cal center rsi service.
            </summary>
            <value>
            A <see cref="T:o2g.ICallCenterRsi"/> object that provides call center ris services.
            </value>
        </member>
        <member name="P:o2g.O2G.Application.MessagingService">
            <summary>
            Return the messaging service.
            </summary>
            <value>
            A <see cref="T:o2g.IMessaging"/> object that provides messaging services.
            </value>
        </member>
        <member name="P:o2g.O2G.Application.UsersService">
            <summary>
            Return the users service.
            </summary>
            <value>
            A <see cref="T:o2g.IUsers"/> object that provides users services.
            </value>
        </member>
        <member name="P:o2g.O2G.Application.PbxManagementService">
            <summary>
            Return the pbx management service.
            </summary>
            <value>
            A <see cref="T:o2g.IPbxManagement"/> object that provides pbx management services.
            </value>
        </member>
        <member name="P:o2g.O2G.Application.AnalyticsService">
            <summary>
            Return the analytics service.
            </summary>
            <value>
            A <see cref="T:o2g.IAnalytics"/> object that provides analytics services.
            </value>
        </member>
        <member name="P:o2g.O2G.Application.CommunicationLogService">
            <summary>
            Return the communication log service.
            </summary>
            <value>
            A <see cref="T:o2g.ICommunicationLog"/> object that provides communication log services.
            </value>
        </member>
        <member name="P:o2g.O2G.Application.PhoneSetProgrammingService">
            <summary>
            Return the phone set programming service.
            </summary>
            <value>
            A <see cref="T:o2g.IPhoneSetProgramming"/> object that provides phone set programming services.
            </value>
        </member>
        <member name="P:o2g.O2G.Application.CallCenterAgentService">
            <summary>
            Return the call center agent service.
            </summary>
            <value>
            A <see cref="T:o2g.ICallCenterAgent"/> object that provides call center agent services.
            </value>
        </member>
        <member name="T:o2g.O2GAuthenticationException">
            <summary>
            <c>O2GAuthenticationException</c> is throwns when the user on administrator authentication failed. 
            </summary>
            <see cref="M:o2g.O2G.Application.LoginAsync(System.String,System.String)"/>
        </member>
        <member name="M:o2g.O2GAuthenticationException.#ctor">
            <summary>
            Create a new instance of the <see cref="T:o2g.O2GAuthenticationException"/> class.
            </summary>
        </member>
        <member name="M:o2g.O2GAuthenticationException.#ctor(System.String)">
            <summary>
            Create a new instance of the <see cref="T:o2g.O2GAuthenticationException"/> class with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:o2g.O2GAuthenticationException.#ctor(System.String,System.Exception)">
            <summary>
            Create a new instance of the <see cref="T:o2g.O2GException"/> class with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="inner">The exception that is the cause of the current exception, or a <see langword="null"/> reference if no inner exception is specified.</param>
        </member>
        <member name="T:o2g.O2GException">
            <summary>
            <c>O2GException</c> specifies information about a generic O2G SDK exception.
            </summary>
        </member>
        <member name="M:o2g.O2GException.#ctor">
            <summary>
            Create a new instance of the <see cref="T:o2g.O2GException"/> class.
            </summary>
        </member>
        <member name="M:o2g.O2GException.#ctor(System.String)">
            <summary>
            Create a new instance of the <see cref="T:o2g.O2GException"/> class with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:o2g.O2GException.#ctor(System.String,System.Exception)">
            <summary>
            Create a new instance of the <see cref="T:o2g.O2GException"/> class with a specified error message and a 
            reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="inner">The exception that is the cause of the current exception, or a <see langword="null"/> reference if no inner exception is specified.</param>
        </member>
        <member name="T:o2g.OnEvent">
            <summary>
            This delegate represent the default delegate that can be used to receive event.
            </summary>
            <param name="o2gEvent"></param>
        </member>
        <member name="T:o2g.Subscription">
            <summary>
            <c>Subscription</c> represents a subscription request used to subscribe events from the O2G Server.
            <para>
            The application builds a subscription using the <see cref="P:o2g.Subscription.Builder"/> object. This object provides a builder pattern that eases
            the creation of a subscription.
            </para>
            </summary>
            <example>
            To create a subscription, uses the methods provided by the <c>Builder</c> object.
            <code>
                    Subscription subscription = Subscription.Builder
                                                    .AddRoutingEvents()         // Add routing service events
                                                    .AddTelephonyEvents()       // Add telephony service events
                                                    .AddEventSummaryEvents()    // Add event summary events
                                                    .SetTimeout(10)             // Set the chunk connection timeout
                                                    .Build();                   // Build the subscription
            </code>
            </example>
            <seealso cref="M:o2g.O2G.Application.SubscribeAsync(o2g.Subscription)"/>
        </member>
        <member name="T:o2g.Subscription.EventFilter">
            <summary>
            <c>EventFilter</c> represents a filter used to subscribe to O2G events.
            </summary>
        </member>
        <member name="M:o2g.Subscription.EventFilter.Add(System.String[],o2g.Events.EventPackage)">
            <summary>
            Add the specified eventPackage to the subscription.
            </summary>
            <param name="ids">The id to filter on.</param>
            <param name="eventPackage">The event package.</param>
            <returns>
            The <see cref="T:o2g.Subscription.EventFilter"/> this event package has been added to.
            </returns>
        </member>
        <member name="M:o2g.Subscription.EventFilter.Add(o2g.Events.EventPackage)">
            <summary>
            Add the specified eventPackage to the subscription.
            </summary>
            <param name="eventPackage">The event package.</param>
            <returns>
            The <see cref="T:o2g.Subscription.EventFilter"/> this event package has been added to.
            </returns>
        </member>
        <member name="P:o2g.Subscription.Version">
            <summary>
            Return the version of the events to subscribe to.
            </summary>
            <value>
            A <see langword="string"/> value that represents the events version.
            </value>
            <remarks>
            By default the event version is "1.0".
            </remarks>
        </member>
        <member name="P:o2g.Subscription.EventHandler">
            <summary>
            Return the eventHandler that will be used to handle events.
            </summary>
            <value>
            A <see cref="T:o2g.OnEvent"/> object that represents the event handler for this subscription.
            </value>
        </member>
        <member name="P:o2g.Subscription.Timeout">
            <summary>
            Return the default lifetime of the event channel.
            </summary>
            <value>
            A <see langword="int"/> value that represents the events channel lifetime in minute.
            </value>
            <remarks>
            <para>
            When chunk eventing is used, the server closes the connection in case of no activity after the timeout. In this case, the event channel
            is automatically re-established.
            </para>
            <para>
            Allowed values are 2 minutes and 60 minutes, with an exception for the value 0.
            For this special case, the lifetime of the notification channel is not maintained by the given timeout, 
            but depends on the lifetime of the user's session. A KeepAlive event is sent by the server to maintain the connection. 
            </para>
            </remarks>
        </member>
        <member name="P:o2g.Subscription.Filter">
            <summary>
            Return the filter associated to this subscription.
            </summary>
            <value>
            A <see cref="T:o2g.Subscription.EventFilter"/> object that represents the event filter for this subscription.
            </value>
        </member>
        <member name="P:o2g.Subscription.Builder">
            <summary>
            Return a subscription builder.
            </summary>
            <value>
            A <see cref="T:o2g.Subscription.IBuilder"/> object used to build a subscription.
            </value>
            <remarks>
            The <c>IBuilder</c> object implements a builder pattern to easily build a subscription.
            </remarks>
        </member>
        <member name="T:o2g.Subscription.IBuilder">
            <summary>
            The <c>IBuilder</c> interface provides methods to easily build a subscription.
            </summary>
        </member>
        <member name="M:o2g.Subscription.IBuilder.AddRoutingEvents(System.String[])">
            <summary>
            Add the routing events to this subscription.
            </summary>
            <param name="ids">The Ids to filter events on.</param>
            <returns>
            The <see cref="T:o2g.Subscription.IBuilder"/> object to chain the build.
            </returns>
            <remarks>
            <para>
            The following event associated to the <see cref="T:o2g.IRouting"/> service is added to the subscription:
            <list type="bullet">
            <item><description><see cref="T:o2g.Events.Routing.OnRoutingStateChangedEvent"/></description></item>
            </list>
            </para>
            <para>
            Subscribing to the routing event requires having a <b>TELEPHONY_ADVANCED</b> license.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.Subscription.IBuilder.AddCallCenterRsiEvents(System.String[])">
            <summary>
            Add the rsi events to this subscription.
            </summary>
            <param name="ids">The Ids to filter events on.</param>
            <returns>
            The <see cref="T:o2g.Subscription.IBuilder"/> object to chain the build.
            </returns>
            <remarks>
            <para>
            The following event associated to the <see cref="T:o2g.ICallCenterRsi"/> service is added to the subscription:
            <list type="bullet">
            <item><description><see cref="T:o2g.Events.CallCenterRsi.OnDigitCollectedEvent"/></description></item>
            <item><description><see cref="T:o2g.Events.CallCenterRsi.OnRouteEndEvent"/></description></item>
            <item><description><see cref="T:o2g.Events.CallCenterRsi.OnRouteRequestEvent"/></description></item>
            <item><description><see cref="T:o2g.Events.CallCenterRsi.OnToneGeneratedStartEvent"/></description></item>
            <item><description><see cref="T:o2g.Events.CallCenterRsi.OnToneGeneratedStopEvent"/></description></item>
            </list>
            </para>
            <para>
            Subscribing to the rsi events requires having a <b>CONTACTCENTER_RSI</b> license.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.Subscription.IBuilder.AddTelephonyEvents(System.String[])">
            <summary>
            Add the telephony events to this subscription.
            </summary>
            <param name="ids">The Ids to filter events on.</param>
            <returns>
            The <see cref="T:o2g.Subscription.IBuilder"/> object to chain the build.
            </returns>
            <remarks>
            <para>
            The following events associated to the <see cref="T:o2g.ITelephony"/> service are added to the subscription:
            <list type="bullet">
            <item><description><see cref="T:o2g.Events.Telephony.OnTelephonyStateEvent"/></description></item>
            <item><description><see cref="T:o2g.Events.Telephony.OnCallCreatedEvent"/></description></item>
            <item><description><see cref="T:o2g.Events.Telephony.OnCallModifiedEvent"/></description></item>
            <item><description><see cref="T:o2g.Events.Telephony.OnCallRemovedEvent"/></description></item>
            <item><description><see cref="T:o2g.Events.Telephony.OnDeviceStateModifiedEvent"/></description></item>
            <item><description><see cref="T:o2g.Events.Telephony.OnDynamicStateChangedEvent"/></description></item>
            </list>
            </para>
            <para>
            Subscribing to the telephony events requires having a <b>TELEPHONY_ADVANCED</b> license.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.Subscription.IBuilder.AddEventSummaryEvents(System.String[])">
            <summary>
            Add the event summary events to this subscription.
            </summary>
            <param name="ids">The Ids to filter events on.</param>
            <returns>
            The <see cref="T:o2g.Subscription.IBuilder"/> object to chain the build.
            </returns>
            <remarks>
            <para>
            The following event associated to the <see cref="T:o2g.IEventSummary"/> service is added to the subscription:
            <list type="bullet">
            <item><description><see cref="T:o2g.Events.EventSummary.OnEventSummaryUpdatedEvent"/></description></item>
            </list>
            </para>
            <para>
            Subscribing to the event summary events requires having a <b>TELEPHONY_ADVANCED</b> license.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.Subscription.IBuilder.AddCommunicationLogEvents(System.String[])">
            <summary>
            Add the communication log events to this subscription.
            </summary>
            <param name="ids">The Ids to filter events on.</param>
            <returns>
            The <see cref="T:o2g.Subscription.IBuilder"/> object to chain the build.
            </returns>
            <remarks>
            <para>
            The following events associated to the <see cref="T:o2g.ICommunicationLog"/> service are added to the subscription:
            <list type="bullet">
            <item><description><see cref="T:o2g.Events.CommunicationLog.OnComRecordCreatedEvent"/></description></item>
            <item><description><see cref="T:o2g.Events.CommunicationLog.OnComRecordModifiedEvent"/></description></item>
            <item><description><see cref="T:o2g.Events.CommunicationLog.OnComRecordsDeletedEvent"/></description></item>
            <item><description><see cref="T:o2g.Events.CommunicationLog.OnComRecordsAckEvent"/></description></item>
            <item><description><see cref="T:o2g.Events.CommunicationLog.OnComRecordsUnAckEvent"/></description></item>
            </list>
            </para>
            <para>
            Subscribing to the communication log events requires having a <b>TELEPHONY_ADVANCED</b> license.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.Subscription.IBuilder.AddCallCenterAgentEvents(System.String[])">
            <summary>
            Add the call center agent events to this subscription.
            </summary>
            <param name="ids">The Ids to filter events on.</param>
            <returns>
            The <see cref="T:o2g.Subscription.IBuilder"/> object to chain the build.
            </returns>
            <remarks>
            <para>
            The following events associated to the <see cref="T:o2g.ICallCenterAgent"/> service are added to the subscription:
            <list type="bullet">
            <item><description><see cref="T:o2g.Events.CallCenterAgent.OnAgentStateChangedEvent"/></description></item>
            </list>
            </para>
            <para>
            Subscribing to the call center agent events requires having a <b>CONTACTCENTER_AGENT</b> license.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.Subscription.IBuilder.AddPbxManagementEvents">
            <summary>
            Add the pbx management events to this subscription.
            </summary>
            <returns>
            The <see cref="T:o2g.Subscription.IBuilder"/> object to chain the build.
            </returns>
            <remarks>
            <para>
            The following events associated to the <see cref="T:o2g.IPbxManagement"/> service are added to the subscription:
            <list type="bullet">
            <item><description><see cref="T:o2g.Events.Management.OnPbxObjectInstanceCreatedEvent"/></description></item>
            <item><description><see cref="T:o2g.Events.Management.OnPbxObjectInstanceDeletedEvent"/></description></item>
            <item><description><see cref="T:o2g.Events.Management.OnPbxObjectInstanceModifiedEvent"/></description></item>
            </list>
            </para>
            <para>
            Subscribing to the call center agent events requires having a <b>MANAGEMENT</b> license.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.Subscription.IBuilder.AddMaintenanceEvents">
            <summary>
            Add the maintenance events to this subscription.
            </summary>
            <returns>
            The <see cref="T:o2g.Subscription.IBuilder"/> object to chain the build.
            </returns>
            <remarks>
            <para>
            The following events associated to the <see cref="T:o2g.IMaintenance"/> service are added to the subscription:
            <list type="bullet">
            <item><description><see cref="T:o2g.Events.Maintenance.OnCtiLinkDownEvent"/></description></item>
            <item><description><see cref="T:o2g.Events.Maintenance.OnCtiLinkUpEvent"/></description></item>
            <item><description><see cref="T:o2g.Events.Maintenance.OnPbxLoadedEvent"/></description></item>
            </list>
            </para>
            <para>
            Subscribing to the maintenance events does not require any license.
            </para>
            </remarks>
        </member>
        <member name="M:o2g.Subscription.IBuilder.SetVersion(System.String)">
            <summary>
            Set the required event version. By default, the version "1.0" is used.
            </summary>
            <param name="version">The event version</param>
            <returns>
            The <see cref="T:o2g.Subscription.IBuilder"/> object to chain the build.
            </returns>
            <seealso cref="P:o2g.Subscription.Version"/>
        </member>
        <member name="M:o2g.Subscription.IBuilder.SetTimeout(System.Int32)">
            <summary>
            Set lifetime of the event channel.
            </summary>
            <param name="timeout">The lifetime of the event channel in minutes</param>
            <returns>
            The <see cref="T:o2g.Subscription.IBuilder"/> object to chain the build.
            </returns>
            <seealso cref="P:o2g.Subscription.Timeout"/>
        </member>
        <member name="M:o2g.Subscription.IBuilder.SetEventHandler(o2g.OnEvent)">
            <summary>
            Set eventHandler that will be used to handle events.
            </summary>
            <param name="eventHandler">The eve</param>
            <returns>
            The <see cref="T:o2g.Subscription.IBuilder"/> object to chain the build.
            </returns>
            <seealso cref="!:Subscription.OnEvent"/>
        </member>
        <member name="M:o2g.Subscription.IBuilder.Build">
            <summary>
            Build a Subscription
            </summary>
            <returns>
            A <see cref="T:o2g.Subscription"/> object that represents the subscription built by this builder.
            </returns>
        </member>
        <member name="T:o2g.Types.AnalyticsNS.CallType">
            <summary>
            <c>CallType</c> represents the possible call type in a charging ticket.
            </summary>
            <seealso cref="T:o2g.Types.AnalyticsNS.Charging"/>
        </member>
        <member name="F:o2g.Types.AnalyticsNS.CallType.PublicNetworkCall">
            <summary>
            A public network call.
            </summary>
        </member>
        <member name="F:o2g.Types.AnalyticsNS.CallType.PublicNetworkCallThroughPrivateNetwork">
            <summary>
            A public network call through a private network.
            </summary>
        </member>
        <member name="F:o2g.Types.AnalyticsNS.CallType.PrivateNetworkCall">
            <summary>
            A private network call.
            </summary>
        </member>
        <member name="F:o2g.Types.AnalyticsNS.CallType.LocalNetworkCall">
            <summary>
            A local network call.
            </summary>
        </member>
        <member name="F:o2g.Types.AnalyticsNS.CallType.PublicNetworkIncomingCall">
            <summary>
            An incoming call from the public network.
            </summary>
        </member>
        <member name="F:o2g.Types.AnalyticsNS.CallType.PublicNetworkIncomingCallThroughPrivateNetwork">
            <summary>
            An incoming call from the public network through the private network.
            </summary>
        </member>
        <member name="F:o2g.Types.AnalyticsNS.CallType.PrivateNetworkOutgoingCallToPublicNetwork">
            <summary>
            An outgoing call from private network to the public network.
            </summary>
        </member>
        <member name="F:o2g.Types.AnalyticsNS.CallType.PrivateNetworkOutgoingCallToPrivateNetwork">
            <summary>
            An outgoing call from private network to the private network.
            </summary>
        </member>
        <member name="F:o2g.Types.AnalyticsNS.CallType.PublicNetworkIncomingCallToPrivateNetwork">
            <summary>
            An incoming call from the public network to the private network.
            </summary>
        </member>
        <member name="F:o2g.Types.AnalyticsNS.CallType.PrivateNetworkIncomingCallToPrivateNetwork">
            <summary>
            An incoming call from the private network to the private network.
            </summary>
        </member>
        <member name="F:o2g.Types.AnalyticsNS.CallType.PublicOrPrivateNetworkOutgoingCallThroughPrivateNetwork">
            <summary>
            An outgoing call through to the private network.
            </summary>
        </member>
        <member name="F:o2g.Types.AnalyticsNS.CallType.PublicOrPrivateNetworkIncomingCallThroughPrivateNetwork">
            <summary>
            An incoming call through to the private network.
            </summary>
        </member>
        <member name="F:o2g.Types.AnalyticsNS.CallType.PrivateNetworkIncomingCall">
            <summary>
            An incoming call from private network.
            </summary>
        </member>
        <member name="F:o2g.Types.AnalyticsNS.CallType.LocalNode">
            <summary>
            A local call.
            </summary>
        </member>
        <member name="F:o2g.Types.AnalyticsNS.CallType.LocalTransit">
            <summary>
            A call in transit on this node
            </summary>
        </member>
        <member name="F:o2g.Types.AnalyticsNS.CallType.Unspecified">
            <summary>
            Not specified call type.
            </summary>
        </member>
        <member name="T:o2g.Types.AnalyticsNS.Charging">
            <summary>
            <c>Charging</c> represents a charging digest information.
            </summary>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.Charging.Caller">
            <summary>
            Return the caller phone number.
            </summary>
            <value>
            A <see langword="string"/> value that represents the caller phone number.
            </value>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.Charging.Name">
            <summary>
            Return the caller name.
            </summary>
            <value>
            A <see langword="string"/> value that represents the caller name.
            </value>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.Charging.Called">
            <summary>
            Return the called phone number.
            </summary>
            <value>
            A <see langword="string"/> value that represents the called phone number.
            </value>
            <remarks>
            This information is provided only if the query has been done with the <c>all</c> option.
            </remarks>
            <seealso cref="M:o2g.IAnalytics.GetChargingsAsync(System.Int32,System.Collections.Generic.List{o2g.Types.AnalyticsNS.ChargingFile},System.Nullable{System.Int32},System.Boolean)"/>
            <seealso cref="M:o2g.IAnalytics.GetChargingsAsync(System.Int32,o2g.Types.AnalyticsNS.TimeRange,System.Nullable{System.Int32},System.Boolean)"/>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.Charging.InitialDialedNumber">
            <summary>
            Return the initial dialed number.
            </summary>
            <value>
            A <see langword="string"/> value that represents the initial dialed number.
            </value>
            <remarks>
            This information is provided only if the query has been done with the <c>all</c> option.
            </remarks>
            <seealso cref="M:o2g.IAnalytics.GetChargingsAsync(System.Int32,System.Collections.Generic.List{o2g.Types.AnalyticsNS.ChargingFile},System.Nullable{System.Int32},System.Boolean)"/>
            <seealso cref="M:o2g.IAnalytics.GetChargingsAsync(System.Int32,o2g.Types.AnalyticsNS.TimeRange,System.Nullable{System.Int32},System.Boolean)"/>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.Charging.CallNumber">
            <summary>
            Return the number of charged calls.
            </summary>
            <value>
            A <see langword="int"/> value that represents the number of charged calls.
            </value>
            <remarks>
            This information is provided only if the query has been done with the <c>all</c> option.
            </remarks>
            <seealso cref="M:o2g.IAnalytics.GetChargingsAsync(System.Int32,System.Collections.Generic.List{o2g.Types.AnalyticsNS.ChargingFile},System.Nullable{System.Int32},System.Boolean)"/>
            <seealso cref="M:o2g.IAnalytics.GetChargingsAsync(System.Int32,o2g.Types.AnalyticsNS.TimeRange,System.Nullable{System.Int32},System.Boolean)"/>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.Charging.ChargingUnits">
            <summary>
            Return the number of charged units.
            </summary>
            <value>
            A <see langword="int"/> value that represents the number of charged units.
            </value>
            <remarks>
            This information is provided only if the query has been done with the <c>all</c> option.
            </remarks>
            <seealso cref="M:o2g.IAnalytics.GetChargingsAsync(System.Int32,System.Collections.Generic.List{o2g.Types.AnalyticsNS.ChargingFile},System.Nullable{System.Int32},System.Boolean)"/>
            <seealso cref="M:o2g.IAnalytics.GetChargingsAsync(System.Int32,o2g.Types.AnalyticsNS.TimeRange,System.Nullable{System.Int32},System.Boolean)"/>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.Charging.Cost">
            <summary>
            Return the call charging cost.
            </summary>
            <value>
            A <see langword="float"/> value that represents the call charging cost.
            </value>
            <remarks>
            This information is provided only if the query has been done with the <c>all</c> option.
            </remarks>
            <seealso cref="M:o2g.IAnalytics.GetChargingsAsync(System.Int32,System.Collections.Generic.List{o2g.Types.AnalyticsNS.ChargingFile},System.Nullable{System.Int32},System.Boolean)"/>
            <seealso cref="M:o2g.IAnalytics.GetChargingsAsync(System.Int32,o2g.Types.AnalyticsNS.TimeRange,System.Nullable{System.Int32},System.Boolean)"/>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.Charging.StartDate">
            <summary>
            Return the call start date.
            </summary>
            <value>
            A <see cref="T:System.DateTime"/> value that represents the call start date.
            </value>
            <remarks>
            This information is provided only if the query has been done with the <c>all</c> option.
            </remarks>
            <seealso cref="M:o2g.IAnalytics.GetChargingsAsync(System.Int32,System.Collections.Generic.List{o2g.Types.AnalyticsNS.ChargingFile},System.Nullable{System.Int32},System.Boolean)"/>
            <seealso cref="M:o2g.IAnalytics.GetChargingsAsync(System.Int32,o2g.Types.AnalyticsNS.TimeRange,System.Nullable{System.Int32},System.Boolean)"/>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.Charging.Duration">
            <summary>
            Return the call duration.
            </summary>
            <value>
            A <see langword="int"/> value that represents total duration of the charged calls.
            </value>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.Charging.CallType">
            <summary>
            Return the call type.
            </summary>
            <value>
            A <see cref="T:o2g.Types.AnalyticsNS.CallType"/> value that represents the call type.
            </value>
            <remarks>
            This information is provided only if the query has been done with the <c>all</c> option.
            </remarks>
            <seealso cref="M:o2g.IAnalytics.GetChargingsAsync(System.Int32,System.Collections.Generic.List{o2g.Types.AnalyticsNS.ChargingFile},System.Nullable{System.Int32},System.Boolean)"/>
            <seealso cref="M:o2g.IAnalytics.GetChargingsAsync(System.Int32,o2g.Types.AnalyticsNS.TimeRange,System.Nullable{System.Int32},System.Boolean)"/>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.Charging.EffectiveCallDuration">
            <summary>
            Return the effective call duration.
            </summary>
            <value>
            A <see langword="int"/> value that represents the effective call duration.
            </value>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.Charging.ActingExtensionNumberNode">
            <summary>
            Return the acting extension node number.
            </summary>
            <value>
            A <see langword="int"/> value that represents the acting extension node number.
            </value>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.Charging.InternalFacilities">
            <summary>
            Return the internal facilities.
            </summary>
            <value>
            A List of <see cref="T:o2g.Types.AnalyticsNS.TelFacility"/> value that represents the internal factilities.
            </value>
            <remarks>
            This information is provided only if the query has been done with the <c>all</c> option.
            </remarks>
            <seealso cref="M:o2g.IAnalytics.GetChargingsAsync(System.Int32,System.Collections.Generic.List{o2g.Types.AnalyticsNS.ChargingFile},System.Nullable{System.Int32},System.Boolean)"/>
            <seealso cref="M:o2g.IAnalytics.GetChargingsAsync(System.Int32,o2g.Types.AnalyticsNS.TimeRange,System.Nullable{System.Int32},System.Boolean)"/>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.Charging.ExternalFacilities">
            <summary>
            Return the external facilities.
            </summary>
            <value>
            A List of <see cref="T:o2g.Types.AnalyticsNS.TelFacility"/> value that represents the external factilities.
            </value>
            <remarks>
            This information is provided only if the query has been done with the <c>all</c> option.
            </remarks>
            <seealso cref="M:o2g.IAnalytics.GetChargingsAsync(System.Int32,System.Collections.Generic.List{o2g.Types.AnalyticsNS.ChargingFile},System.Nullable{System.Int32},System.Boolean)"/>
            <seealso cref="M:o2g.IAnalytics.GetChargingsAsync(System.Int32,o2g.Types.AnalyticsNS.TimeRange,System.Nullable{System.Int32},System.Boolean)"/>
        </member>
        <member name="T:o2g.Types.AnalyticsNS.ChargingFile">
            <summary>
            <c>ChargingFile</c> class represent a chaging file on OmniPCX Enterprise.
            </summary>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.ChargingFile.Name">
            <summary>
            Return the file name.
            </summary>
            <value>
            A <see langword="string"/> value that represents the file name.
            </value>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.ChargingFile.Timestamp">
            <summary>
            Return this file timestamp.
            </summary>
            <value>
            A <see cref="T:System.DateTime"/> value that represents the timestamp of this file.
            </value>
        </member>
        <member name="T:o2g.Types.AnalyticsNS.ChargingResult">
            <summary>
            <c>ChargingResult</c> class represents the result of a query to the OmniPCX Enterprise.
            </summary>
            <seealso cref="M:o2g.IAnalytics.GetChargingsAsync(System.Int32,System.Collections.Generic.List{o2g.Types.AnalyticsNS.ChargingFile},System.Nullable{System.Int32},System.Boolean)"/>
            <seealso cref="M:o2g.IAnalytics.GetChargingsAsync(System.Int32,o2g.Types.AnalyticsNS.TimeRange,System.Nullable{System.Int32},System.Boolean)"/>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.ChargingResult.Chargings">
            <summary>
            Return the list of charging elements.
            </summary>
            <value>
            A list of <see cref="T:o2g.Types.AnalyticsNS.Charging"/> that represents the charging information.
            </value>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.ChargingResult.Range">
            <summary>
            Return the range that has been specified to query this result.
            </summary>
            <value>
            A <see cref="P:o2g.Types.AnalyticsNS.ChargingResult.Range"/> object that represents the range used to query this result, or null if the range was not specified.
            </value>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.ChargingResult.ChargingFileCount">
            <summary>
            Return the number of analysed charging files in the OmniPCX Enterprise.
            </summary>
            <value>
            A <see langword="int"/> value that represents the number of analysed charging files.
            </value>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.ChargingResult.TotalTicketCount">
            <summary>
            Return the total number of analysed tickets.
            </summary>
            <value>
            A <see langword="int"/> value that represents the total number of analysed tickets.
            </value>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.ChargingResult.ValuableTicketCount">
            <summary>
            Return the total number of valuable tickets.
            </summary>
            <value>
            A <see langword="int"/> value that represents the total number of valuable tickets; tickets with a non zero cost.
            </value>
        </member>
        <member name="T:o2g.Types.AnalyticsNS.Incident">
            <summary>
            <c>Incident</c> class represents an incident on an OmniPCX Enterprise node.
            </summary>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.Incident.Id">
            <summary>
            Return this incident Id.
            </summary>
            <value>
            An <see langword="int"/> value that is this incident identifier.
            </value>
            <remarks>
            Please refer to the OmniPCX Enterprise documentation for detail on the incidents.
            </remarks>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.Incident.Date">
            <summary>
            Return the date this incident occurs.
            </summary>
            <value>
            A <see cref="T:System.DateTime"/> value that is the date and hour this incident occurs.
            </value>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.Incident.Severity">
            <summary>
            Return the severity of this incident.
            </summary>
            <value>
            An <see langword="int"/> value that is this incident severity.
            </value>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.Incident.Description">
            <summary>
            Return a textual description of this incident.
            </summary>
            <value>
            An <see langword="string"/> value that provides description of the incident.
            </value>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.Incident.NbOccurs">
            <summary>
            Return the number of occurences of this incident.
            </summary>
            <value>
            An <see langword="int"/> value that is the number of occurences of this incident.
            </value>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.Incident.Node">
            <summary>
            Return the OmniPCX Enterprise node on which this incident has been raised.
            </summary>
            <value>
            An <see langword="int"/> value that is the OmniPCX Enterprise node number.
            </value>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.Incident.Main">
            <summary>
            Return whether this incident has been raised on teh main OmniPCX Enterprise call server.
            </summary>
            <value>
            <see langword="true"/> if the incident has been raised on the main call server; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.Incident.Rack">
            <summary>
            Return the rack related to this incident.
            </summary>
            <value>
            An <see langword="string"/> value that provides information on the rack.
            </value>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.Incident.Board">
            <summary>
            Return the board related to this incident.
            </summary>
            <value>
            An <see langword="string"/> value that provides information on the board.
            </value>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.Incident.Equipment">
            <summary>
            Return the equipment related to this incident.
            </summary>
            <value>
            An <see langword="string"/> value that provides information on the equipment.
            </value>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.Incident.Termination">
            <summary>
            Return the termination related to this incident.
            </summary>
            <value>
            An <see langword="string"/> value that provides information on the termination.
            </value>
        </member>
        <member name="T:o2g.Types.AnalyticsNS.TelFacility">
            <summary>
            <c>TelFacility</c> represents the telephony facilities
            </summary>
        </member>
        <member name="T:o2g.Types.AnalyticsNS.TimeRange">
            <summary>
            <c>TimeRange</c> represents an interval between two dates. It is used to filter analytics requests
            </summary>
            <see cref="M:o2g.IAnalytics.GetChargingsAsync(System.Int32,o2g.Types.AnalyticsNS.TimeRange,System.Nullable{System.Int32},System.Boolean)"/>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.TimeRange.from">
            <summary>
            Return the "from" date.
            </summary>
            <value>
            The <see cref="T:System.DateTime"/> object that represents the "from" date of this range.
            </value>
        </member>
        <member name="P:o2g.Types.AnalyticsNS.TimeRange.to">
            <summary>
            Return the "to" date.
            </summary>
            <value>
            The <see cref="T:System.DateTime"/> object that represents the "to" date of this range.
            </value>
        </member>
        <member name="M:o2g.Types.AnalyticsNS.TimeRange.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Construct a new <c>TimeRange</c>, with the specified "from" date and "to" date.
            </summary>
            <param name="from">The "from" date.</param>
            <param name="to">The "to" date.</param>
        </member>
        <member name="M:o2g.Types.AnalyticsNS.TimeRange.#ctor(System.DateTime,System.Int32)">
            <summary>
            Construct a new <c>TimeRange</c> with the specified "from" date and a specified number of days.
            </summary>
            <param name="from">The "from" date.</param>
            <param name="days">The number of days in this range.</param>
        </member>
        <member name="T:o2g.Types.CallCenterAgentNS.AgentGroups">
            <summary>
            <c>AgentGroups</c> represents the group configuration of a CCD operator. 
            The list of groups the operator is attaching in and the preferred group.
            </summary>
        </member>
        <member name="P:o2g.Types.CallCenterAgentNS.AgentGroups.Preferred">
            <summary>
            Return the preferred agent group.
            </summary>
            <value>
            A <see langword="string"/> value that represents the preferred agent group in which the CCD operator logs in, 
            or a <see langword="null"/> if there is no preferred group.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterAgentNS.AgentGroups.Groups">
            <summary>
            Return the list of agent groups the operator is attaching in.
            </summary>
            <value>
            A list of <see langword="string"/> that represents the agent groups the operator is attaching in.
            </value>
        </member>
        <member name="T:o2g.Types.CallCenterAgentNS.AgentSkill">
            <summary>
            <c>AgentSkill</c> class represents a CCD operator skill. Skills are use by the "Advanced Call Routing" 
            call distribution strategy.
            </summary>
        </member>
        <member name="P:o2g.Types.CallCenterAgentNS.AgentSkill.Number">
            <summary>
            Return the skill number. A unique identifier.
            </summary>
            <value>
            An <see langword="int"/> value that is the unique identifier of the skill.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterAgentNS.AgentSkill.Level">
            <summary>
            Return the skill level.
            </summary>
            <value>
            An <see langword="int"/> value that represents the skill level.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterAgentNS.AgentSkill.Active">
            <summary>
            Return whether the skill is active.
            </summary>
            <value>
            <see langword="true"/> if the skill is active; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="T:o2g.Types.CallCenterAgentNS.AgentSkillSet">
            <summary>
            <c>AgentSkillSet</c> class represents a set of skills for a CCD operator.
            </summary>
        </member>
        <member name="P:o2g.Types.CallCenterAgentNS.AgentSkillSet.Item(System.Int32)">
            <summary>
            Return the skill with the specified number.
            </summary>
            <param name="number">The skill number.</param>
            <value>
            The <see cref="T:o2g.Types.CallCenterAgentNS.AgentSkill"/> object or <see langword="null"/> if there is no skill with the specified number.
            </value>
        </member>
        <member name="M:o2g.Types.CallCenterAgentNS.AgentSkillSet.Contains(System.Int32)">
            <summary>
            Determines whether the the specified skill exist in this skill set.
            </summary>
            <param name="number">The skill number to search.</param>
            <returns>
            <see langword="true"/> if the specified skill exists; <see langword="false"/> otherwise
            </returns>
        </member>
        <member name="P:o2g.Types.CallCenterAgentNS.AgentSkillSet.Numbers">
            <summary>
            Return the list of the skill numbers.
            </summary>
            <value>
            A list of <see langword="int"/> that represents the skill numbers.
            </value>
        </member>
        <member name="M:o2g.Types.CallCenterAgentNS.AgentSkillSet.AsList">
            <summary>
            Return the list of skills.
            </summary>
            <returns>
            A list of <see cref="T:o2g.Types.CallCenterAgentNS.AgentSkill"/> that represents the skills of the operator.
            </returns>
        </member>
        <member name="T:o2g.Types.CallCenterAgentNS.IntrusionMode">
            <summary>
            <c>IntrusionMode</c> represents the possible intrusion mode.
            </summary>
            <remarks>
            A supervisor can intrude in an established CCD call. The intrusion depends on the <c>IntrusionMode</c>.
            </remarks>
            <seealso cref="M:o2g.ICallCenterAgent.RequestIntrusionAsync(System.String,o2g.Types.CallCenterAgentNS.IntrusionMode,System.String)"/>
        </member>
        <member name="F:o2g.Types.CallCenterAgentNS.IntrusionMode.Normal">
            <summary>
            The supervisor can talk to both the agent and the remote customer.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterAgentNS.IntrusionMode.Restricted">
            <summary>
            The supervisor can only talk to the agent but listen to the remote customer.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterAgentNS.IntrusionMode.Discrete">
            <summary>
            The supervisor only listens to the conversation between agent and customer.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterAgentNS.IntrusionMode.Unknown">
            <summary>
            Unknown intrusion mode
            </summary>
        </member>
        <member name="T:o2g.Types.CallCenterAgentNS.OperatorConfiguration">
            <summary>
            <c>Configuration</c> class represents a CCD operator configuration.
            </summary>
        </member>
        <member name="P:o2g.Types.CallCenterAgentNS.OperatorConfiguration.Type">
            <summary>
            Return the type of CCD operator, agent or supervisor.
            </summary>
            <value>
            A <see cref="T:o2g.Types.CallCenterAgentNS.OperatorType"/> that represents the type of CCD operator.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterAgentNS.OperatorConfiguration.Proacd">
            <summary>
            Return the associated pro-acd station.
            </summary>
            <value>
            A <see langword="string"/> value that represents the associated pro-acd station extension number, or 
            <see langword="null"/> if this operator has no associated pro-acd station.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterAgentNS.OperatorConfiguration.Groups">
            <summary>
            Return the agents groups the operator is attached in and the preferred agent group if any.
            </summary>
            <value>
            A <see cref="T:o2g.Types.CallCenterAgentNS.AgentGroups"/> object that represents the agents groups the operator is 
            attached in and the preferred agent group if any.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterAgentNS.OperatorConfiguration.Skills">
            <summary>
            Return the operator skills.
            </summary>
            <value>
            A <see cref="T:o2g.Types.CallCenterAgentNS.AgentSkillSet"/> object that represents the operator skills.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterAgentNS.OperatorConfiguration.SelfAssign">
            <summary>
            Return whether the operator is allowed to choose his agent group.
            </summary>
            <value>
            <see langword="true"/> if the operator can choose his agent group; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterAgentNS.OperatorConfiguration.Headset">
            <summary>
            Return whether the operator has the headset feature configured.
            </summary>
            <value>
            <see langword="true"/> if the operator has the headset feature configured; <see langword="false"/> otherwise.
            </value>
            <remarks>
            The headset feature allows a CCD operator to answer calls using a headset.
            </remarks>
            <seealso cref="M:o2g.ICallCenterAgent.LogonOperatorAsync(System.String,System.String,System.Boolean,System.String)"/>
        </member>
        <member name="P:o2g.Types.CallCenterAgentNS.OperatorConfiguration.Help">
            <summary>
            Return whether the operator can request help from a supervisor.
            </summary>
            <value>
            <see langword="true"/> if the operator can request help; <see langword="false"/> otherwise.
            </value>
            <seealso cref="M:o2g.ICallCenterAgent.RequestSupervisorHelpAsync(System.String)"/>
        </member>
        <member name="P:o2g.Types.CallCenterAgentNS.OperatorConfiguration.Multiline">
            <summary>
            Return whether the operator is multiline.
            </summary>
            <value>
            <see langword="true"/> if the operator is multiline; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="T:o2g.Types.CallCenterAgentNS.OperatorState">
            <summary>
            <c>OperatorState</c> represents the state of a CCD operator. 
            </summary>
        </member>
        <member name="T:o2g.Types.CallCenterAgentNS.OperatorState.OperatorMainState">
            <summary>
            <c>OperatorMainState</c> represents the login, logoff status of a CCD operator.
            </summary>
            <seealso cref="M:o2g.ICallCenterAgent.LogonOperatorAsync(System.String,System.String,System.Boolean,System.String)"/>
            <seealso cref="M:o2g.ICallCenterAgent.LogoffOperatorAsync(System.String)"/>
        </member>
        <member name="F:o2g.Types.CallCenterAgentNS.OperatorState.OperatorMainState.Unknown">
            <summary>
            The O2G server is unable to get the operator main state.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterAgentNS.OperatorState.OperatorMainState.Logon">
            <summary>
            The operator is logged on a pro-acd set.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterAgentNS.OperatorState.OperatorMainState.Logoff">
            <summary>
            The operator is logged off.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterAgentNS.OperatorState.OperatorMainState.Error">
            <summary>
            Error status.
            </summary>
        </member>
        <member name="T:o2g.Types.CallCenterAgentNS.OperatorState.OperatorDynamicState">
            <summary>
            <c>AgentDynamicState</c> represents the CCD operator dynamic state.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterAgentNS.OperatorState.OperatorDynamicState.Ready">
            <summary>
            The operator is ready.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterAgentNS.OperatorState.OperatorDynamicState.OutOfProcessingGroup">
            <summary>
            The operator is logged but out of an agent group.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterAgentNS.OperatorState.OperatorDynamicState.Busy">
            <summary>
            The operator is busy.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterAgentNS.OperatorState.OperatorDynamicState.TransactionCodeInput">
            <summary>
            The operator is in the transaction code phase.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterAgentNS.OperatorState.OperatorDynamicState.Wrapup">
            <summary>
            The operator is in the automatic wrapup phase.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterAgentNS.OperatorState.OperatorDynamicState.Pause">
            <summary>
            The operator is in pause.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterAgentNS.OperatorState.OperatorDynamicState.Withdraw">
            <summary>
            The operator is in withdraw from the call distribution.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterAgentNS.OperatorState.OperatorDynamicState.WrapupIm">
            <summary>
            The operator is in withdraw from the call distribution because he is treating an IM.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterAgentNS.OperatorState.OperatorDynamicState.WrapupEmail">
            <summary>
            The operator is in withdraw from the call distribution because he is treating an email.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterAgentNS.OperatorState.OperatorDynamicState.WrapupEmailInterruptible">
            <summary>
            The operator is in withdraw from the call distribution because he is treating an email, 
            nevertheless, a CCD call can be distributed on this operator.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterAgentNS.OperatorState.OperatorDynamicState.WrapupOutbound">
            <summary>
            The operator is in wrapup after an outbound call.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterAgentNS.OperatorState.OperatorDynamicState.WrapupCallback">
            <summary>
            The operator is in wrapup after a callback call.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterAgentNS.OperatorState.OperatorDynamicState.Unknown">
            <summary>
            Unknown operator dynamic state.
            </summary>
        </member>
        <member name="P:o2g.Types.CallCenterAgentNS.OperatorState.MainState">
            <summary>
            Return the operator main state.
            </summary>
            <value>
            A <see cref="T:o2g.Types.CallCenterAgentNS.OperatorState.OperatorMainState"/> object that represents this operator main state.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterAgentNS.OperatorState.SubState">
            <summary>
            Return the operator dynamic state.
            </summary>
            <value>
            A <see cref="T:o2g.Types.CallCenterAgentNS.OperatorState.OperatorDynamicState"/> object that represent the operator dynamic state, or a <see langword="null"/>
            value if the operator is logged off.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterAgentNS.OperatorState.ProAcdDeviceNumber">
            <summary>
            Return the pro-acd this operator is logged on.
            </summary>
            <value>
            A <see langword="string"/> value that represents the pro-acd set extension number if the operator is logged on, or 
            a <see langword="null"/> value if the operator is logged off.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterAgentNS.OperatorState.PgNumber">
            <summary>
            Return the agent group this operator is logged in.
            </summary>
            <value>
            A <see langword="string"/> value that represents the agent group this operator is logged in, or
            a <see langword="null"/> value if the operator is not entered in an agent group.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterAgentNS.OperatorState.WithdrawReason">
            <summary>
            Return the withdraw reason.
            </summary>
            <value>
            An <see langword="int"/> value that represents the withdraw reason index in the withdraw reasons managed
            in an agent group, or a <see langword="null"/> value if the operator in not in withdraw state.
            </value>
            <seealso cref="M:o2g.ICallCenterAgent.GetWithdrawReasonsAsync(System.String,System.String)"/>
        </member>
        <member name="P:o2g.Types.CallCenterAgentNS.OperatorState.Withdraw">
            <summary>
            Return whether the operator is in withdraw state.
            </summary>
            <value>
            <see langword="true"/> if the operator is in withdraw state; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="T:o2g.Types.CallCenterAgentNS.OperatorType">
            <summary>
            <c>OperatorType</c> represents the CCD operator, either Agent or Supervisor.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterAgentNS.OperatorType.Agent">
            <summary>
            CCD Agent
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterAgentNS.OperatorType.Supervisor">
            <summary>
            CCD Supervisor
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterAgentNS.OperatorType.Unknown">
            <summary>
            Unknown operator type.
            </summary>
        </member>
        <member name="T:o2g.Types.CallCenterAgentNS.WithdrawReason">
            <summary>
            <c>WithdrawReason</c> represents a reason why an agent is in withdraw state.
            This reason is udes by CCD for statistic purpose.
            </summary>
            <seealso cref="M:o2g.ICallCenterAgent.GetWithdrawReasonsAsync(System.String,System.String)"/>
        </member>
        <member name="P:o2g.Types.CallCenterAgentNS.WithdrawReason.Index">
            <summary>
            Return the index of this withdraw reason.
            </summary>
            <value>
            An <see langword="string"/> value that represents the index of this reason in the agent processing  it is defined in.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterAgentNS.WithdrawReason.Label">
            <summary>
            Return the label of this withdraw reason.
            </summary>
            <value>
            A <see langword="string"/> value that represents the withdraw reason.
            </value>
        </member>
        <member name="T:o2g.Types.CallCenterRsiNS.AdditionalDigitCollectionCriteria">
            <summary>
            <c>AdditionalDigitCollectionCriteria</c> class is used to provide advanced digit collection criteria.
            </summary>
        </member>
        <member name="P:o2g.Types.CallCenterRsiNS.AdditionalDigitCollectionCriteria.AbortDigits">
            <summary>
            Return the set of digits used to consider that digits collection is aborted. 
            </summary>
            <value>
            A <see langword="string"/> value that represent the abort digits.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterRsiNS.AdditionalDigitCollectionCriteria.IgnoreDigits">
            <summary>
            Return the digits ignored during the collection.
            </summary>
            <value>
            A <see langword="string"/> value that represent the ignored digits.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterRsiNS.AdditionalDigitCollectionCriteria.BackspaceDigits">
            <summary>
            Return the digits used to deleted the collected digit from the collection.
            </summary>
            <value>
            A <see langword="string"/> value that represent the delete digits.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterRsiNS.AdditionalDigitCollectionCriteria.TermDigits">
            <summary>
            Return the digits used to validate the collection. If the flushChar ECMA3 standard parameter is present, 
            the termDigits parameter is ignored by the OmniPCX Enterprise.
            </summary>
            <value>
            A <see langword="string"/> value that represent the termination digits.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterRsiNS.AdditionalDigitCollectionCriteria.ResetDigits">
            <summary>
            Return the digits used by caller to restart the collection.
            </summary>
            <value>
            A <see langword="string"/> value that represent the reset digits.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterRsiNS.AdditionalDigitCollectionCriteria.StartTimeout">
            <summary>
            Return the number of seconds waiting for DTMF inputs from caller.
            </summary>
            <value>
            A <see langword="int"/> value that represent the timeout in seconds.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterRsiNS.AdditionalDigitCollectionCriteria.DigitTimeout">
            <summary>
            Return the number of seconds to wait between DTMF inputs.
            </summary>
            <value>
            A <see langword="int"/> value that represent the time between 2 dtmf in seconds.
            </value>
        </member>
        <member name="T:o2g.Types.CallCenterRsiNS.DataCollected">
            <summary>
            <c>DataCollected</c> represents a collection of tones.
            DTMF tones are generated by parties on a call by pressing the dialpad digits 0 through 9 and * and # during the call.
            </summary>
        </member>
        <member name="T:o2g.Types.CallCenterRsiNS.DataCollected.CollectionCause">
            <summary>
            <c>CollectionCause</c> represents the reason why the digits collection ended.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterRsiNS.DataCollected.CollectionCause.FlushcharReceived">
            <summary>
            A specific tone specified in the retrieval criteria is received.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterRsiNS.DataCollected.CollectionCause.CharCountReached">
            <summary>
            The number of tones specified in the retrieval criteria is received.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterRsiNS.DataCollected.CollectionCause.Timeout">
            <summary>
            The timeout specified in the retrieval criteria has elapsed.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterRsiNS.DataCollected.CollectionCause.SfTerminated">
            <summary>
            An error occurs.
            </summary>
        </member>
        <member name="P:o2g.Types.CallCenterRsiNS.DataCollected.CollCrid">
            <summary>
            The collection digit identifier.
            </summary>
            <value>
            A <see langword="string"/> that represents the digits collection identifier.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterRsiNS.DataCollected.Digits">
            <summary>
            Return the collected digits.
            </summary>
            <value>
            A <see langword="string"/> that represents the collected digits".
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterRsiNS.DataCollected.Cause">
            <summary>
            Return the cause of the digit collection termination.
            </summary>
            <value>
            A <see cref="T:o2g.Types.CallCenterRsiNS.DataCollected.CollectionCause"/> value that represents the reason of the digit collection termination.
            </value>
        </member>
        <member name="T:o2g.Types.CallCenterRsiNS.RouteRequest">
            <summary>
            <c>RouteRequest</c> represents a routing request done from a RSI point to the listening application.
            </summary>
        </member>
        <member name="P:o2g.Types.CallCenterRsiNS.RouteRequest.RouteCrid">
            <summary>
            Return the routing session identifier.
            </summary>
            <value>
            A <see langword="string"/> value thats represents the unique identifier of this route request.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterRsiNS.RouteRequest.Caller">
            <summary>
            Returne the caller number.
            </summary>
            <value>
            A <see langword="string"/> value thats represents the number of the caller who made the call.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterRsiNS.RouteRequest.CallingName">
            <summary>
            Return the calling name.
            </summary>
            <value>
            A <see langword="string"/> value thats represents the name of the caller who made the call.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterRsiNS.RouteRequest.CallerType">
            <summary>
            Return whether the call is internal or external.
            </summary>
            <value>
            A <see cref="T:o2g.Types.CallCenterRsiNS.RoutingCallerType"/> that represents the call origin.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterRsiNS.RouteRequest.Called">
            <summary>
            Return the called number.
            </summary>
            <value>
            A <see langword="string"/> value thats represents the called number.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterRsiNS.RouteRequest.RoutedCallRef">
            <summary>
            Return the call reference of the call for which the route request is made.
            </summary>
            <value>
            A <see langword="string"/> value that represents the call reference.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterRsiNS.RouteRequest.NbOverflows">
            <summary>
            Return the number of overflows.
            </summary>
            <value>
            An <see langword="int"/> value that represents the maximum number of route requests that can be done before considering an error.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterRsiNS.RouteRequest.Reason">
            <summary>
            Return the reason associated to this request.
            </summary>
            <value>
            A <see cref="T:o2g.Types.CallCenterRsiNS.RoutingReason"/> value that represents the reason associated the route request.
            </value>
        </member>
        <member name="T:o2g.Types.CallCenterRsiNS.RouteSession">
            <summary>
            <c>RouteSession</c> represents a route request session between a RSI point and an application.
            <para>
            A route session is initiated by a RSI point by sending a <see cref="T:o2g.Events.CallCenterRsi.OnRouteRequestEvent"/>. The application selects a route and answer using <see cref="M:o2g.ICallCenterRsi.RouteSelectAsync(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})"/>.
            </para>
            </summary>
            <see cref="T:o2g.Events.CallCenterRsi.OnRouteRequestEvent"/>
            <see cref="M:o2g.ICallCenterRsi.RouteSelectAsync(System.String,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean})"/>
        </member>
        <member name="P:o2g.Types.CallCenterRsiNS.RouteSession.RouteCrid">
            <summary>
            Return the routing session unique identifier.
            </summary>
            <value>
            A <see langword="string"/> value that identify the route request session.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterRsiNS.RouteSession.Caller">
            <summary>
            Returne the caller number.
            </summary>
            <value>
            A <see langword="string"/> value thats represents the number of the caller who made the call.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterRsiNS.RouteSession.Called">
            <summary>
            Return the called number.
            </summary>
            <value>
            A <see langword="string"/> value thats represents the called number.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterRsiNS.RouteSession.RoutedCallRef">
            <summary>
            Return the call reference of the call who which teh route request is made.
            </summary>
            <value>
            A <see langword="string"/> value that represents the call reference.
            </value>
        </member>
        <member name="T:o2g.Types.CallCenterRsiNS.RoutingCallerType">
            <summary>
            <c>RoutingCallerType</c> represents the call origin of a route request.
            </summary>
            <seealso cref="T:o2g.Types.CallCenterRsiNS.RouteRequest"/>
        </member>
        <member name="F:o2g.Types.CallCenterRsiNS.RoutingCallerType.Internal">
            <summary>
            The call is internal.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterRsiNS.RoutingCallerType.External">
            <summary>
            The call is external.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterRsiNS.RoutingCallerType.Unknown">
            <summary>
            The call origin is unknown.
            </summary>
        </member>
        <member name="T:o2g.Types.CallCenterRsiNS.RoutingReason">
            <summary>
            <c>RoutingReason</c> represents the possible reason associated to a route request.
            </summary>
            <seealso cref="T:o2g.Types.CallCenterRsiNS.RouteRequest"/>
        </member>
        <member name="F:o2g.Types.CallCenterRsiNS.RoutingReason.Initial">
            <summary>
            First route request.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterRsiNS.RoutingReason.NoAnswer">
            <summary>
            The call is rerouted because of no answer from initial route.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterRsiNS.RoutingReason.Busy">
            <summary>
            The call is rerouted because of busy initial route.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterRsiNS.RoutingReason.NotObainable">
            <summary>
            The call is rerouted because of not obtainable initial route.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterRsiNS.RoutingReason.Unknown">
            <summary>
            Unknown reason.
            </summary>
        </member>
        <member name="T:o2g.Types.CallCenterRsiNS.RsiPoint">
            <summary>
            <c>RsiPoint</c> represents a RSI point. When a call is receive by a RSI routing point, a <see cref="T:o2g.Events.CallCenterRsi.OnRouteRequestEvent"/> is send to the 
            application.
            </summary>
        </member>
        <member name="P:o2g.Types.CallCenterRsiNS.RsiPoint.Number">
            <summary>
            The RSI point extension number.
            </summary>
            <value>
            A <see langword="string"/> that represents the RSI point extension number.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterRsiNS.RsiPoint.Name">
            <summary>
            The RSI point extension name.
            </summary>
            <value>
            A <see langword="string"/> that represents the RSI point extension name.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterRsiNS.RsiPoint.Node">
            <summary>
            The OmniPcxEnterprise node on which this RSI point is configured.
            </summary>
            <value>
            A <see langword="int"/> that represents the OmniPcxEnterprise node.
            </value>
        </member>
        <member name="P:o2g.Types.CallCenterRsiNS.RsiPoint.Registered">
            <summary>
            Return whether this RSI point is registered.
            </summary>
            <value>
            <see langword="true"/> if the RSI point is registered; <see langword="false"/> otherwise.
            </value>
            <remarks>
            When the RSI point is registered, it can receive call and send route requests.
            </remarks>
        </member>
        <member name="T:o2g.Types.CallCenterRsiNS.Tones">
            <summary>
            <c>Tones</c> represents tones that can be generated.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterRsiNS.Tones.Busy">
            <summary>
            The busy tone.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterRsiNS.Tones.Ringback">
            <summary>
            The ring back tone.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterRsiNS.Tones.Silence">
            <summary>
            The silent tone.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterRsiNS.Tones.Music">
            <summary>
            The music tone.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterRsiNS.Tones.Announcement">
            <summary>
            The annoucement tone.
            </summary>
        </member>
        <member name="F:o2g.Types.CallCenterRsiNS.Tones.Unknown">
            <summary>
            Unknown tone.
            </summary>
        </member>
        <member name="T:o2g.Types.CommonNS.PartyInfo">
            <summary>
            Represents a party involved in a call.
            </summary>
        </member>
        <member name="T:o2g.Types.CommonNS.PartyInfo.ParticipantType">
            <summary>
            Represents a type of participant to a call. A participant is identified by its <see cref="T:o2g.Types.CommonNS.PartyInfo.ParticipantType.MainType"/> type, and by an optional <c>SubType</c>.
            </summary>
        </member>
        <member name="T:o2g.Types.CommonNS.PartyInfo.ParticipantType.MainType">
            <summary>
            <c>MainType</c> Represents the main type a participant can be.
            </summary>
        </member>
        <member name="F:o2g.Types.CommonNS.PartyInfo.ParticipantType.MainType.User">
            <summary>
            The participant is a user of the system.
            </summary>
        </member>
        <member name="F:o2g.Types.CommonNS.PartyInfo.ParticipantType.MainType.Device">
            <summary>
            The participant is a device of the system.
            </summary>
        </member>
        <member name="F:o2g.Types.CommonNS.PartyInfo.ParticipantType.MainType.Service">
            <summary>
            The participant is a service of the system. For exemple the voice mail.
            </summary>
        </member>
        <member name="F:o2g.Types.CommonNS.PartyInfo.ParticipantType.MainType.External">
            <summary>
            The participant is not a user of the system.
            </summary>
        </member>
        <member name="F:o2g.Types.CommonNS.PartyInfo.ParticipantType.MainType.Unknown">
            <summary>
            The participant type has not been identified.
            </summary>
        </member>
        <member name="P:o2g.Types.CommonNS.PartyInfo.ParticipantType.Main">
            <summary>
            The main type of the participant.
            </summary>
            <value>
            A <see cref="T:o2g.Types.CommonNS.PartyInfo.ParticipantType.MainType"/> enum that is this participant main type.
            </value>
        </member>
        <member name="P:o2g.Types.CommonNS.PartyInfo.ParticipantType.SubType">
            <summary>
            The SubType gives a supplementary information.
            </summary>
            <value>
            A <see langword="string"/> that gives this participant sub-type. It can be "pbx", "public", "pre-off-hook", telephony-services", "voicemail", "voice-homepage", "voice-it", "sip".
            </value>
        </member>
        <member name="T:o2g.Types.CommonNS.PartyInfo.Identifier">
            <summary>
            Represent the information used to uniquely identify a participant.
            </summary>
        </member>
        <member name="P:o2g.Types.CommonNS.PartyInfo.Identifier.LoginName">
            <summary>
            The participant login name.
            </summary>
            <value>
            A <see langword="string"/> that is this the login name of this participant.
            </value>
        </member>
        <member name="P:o2g.Types.CommonNS.PartyInfo.Identifier.PhoneNumber">
            <summary>
            The participant phone number.
            </summary>
            <value>
            A <see langword="string"/> that is the main phone number of this participant.
            </value>
        </member>
        <member name="P:o2g.Types.CommonNS.PartyInfo.Id">
            <summary>
            This property is the identifier of this party.
            </summary>
            <value>
            A <see cref="T:o2g.Types.CommonNS.PartyInfo.Identifier"/> that gives the unique identity of this participant.
            </value>
        </member>
        <member name="P:o2g.Types.CommonNS.PartyInfo.FirstName">
            <summary>
            This property gives the party first name.
            </summary>
            <value>
            A <see langword="string"/> that is the party first name.
            </value>
        </member>
        <member name="P:o2g.Types.CommonNS.PartyInfo.LastName">
            <summary>
            This property gives the party last name.
            </summary>
            <value>
            A <see langword="string"/> that is the party last name.
            </value>
        </member>
        <member name="P:o2g.Types.CommonNS.PartyInfo.DisplayName">
            <summary>
            The party display name. 
            </summary>
            <value>
            A <see langword="string"/> that is the party display name. If <see cref="P:o2g.Types.CommonNS.PartyInfo.FirstName"/> and <see cref="P:o2g.Types.CommonNS.PartyInfo.LastName"/> are filled, the <c>DisplayName</c> is <see langword="null"/>.
            </value>
        </member>
        <member name="P:o2g.Types.CommonNS.PartyInfo.Type">
            <summary>
            The party type.
            </summary>
            <value>
            A <see cref="T:o2g.Types.CommonNS.PartyInfo.ParticipantType"/> enum value thats is this party participant type.
            </value>
        </member>
        <member name="T:o2g.Types.CommunicationLogNS.ComRecord">
            <summary>
            <c>ComRecord</c> class represents a communication record, that is an history call ticket stored by the O2G server for each conversation.
            </summary>
        </member>
        <member name="P:o2g.Types.CommunicationLogNS.ComRecord.Id">
            <summary>
            Return the identifier of the com record.
            </summary>
            <value>
            A <see langword="long"/> value that uniquely identify this com record.
            </value>
        </member>
        <member name="P:o2g.Types.CommunicationLogNS.ComRecord.CallRef">
            <summary>
            Return the call reference associated to this com record.
            </summary>
            <value>
            A <see langword="string"/> value that is the identifier of the call at the origin of this com record.
            </value>
            <seealso cref="P:o2g.Types.TelephonyNS.PbxCall.CallRef"/>
        </member>
        <member name="P:o2g.Types.CommunicationLogNS.ComRecord.Acknowledged">
            <summary>
            Return whether this com record represents a non aknowledged missed call.
            </summary>
            <value>
            <see langword="true"/> if the com record is related to an unanswered call not acknowledged; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.CommunicationLogNS.ComRecord.Participants">
            <summary>
            The list of participants associated to this call.
            </summary>
            <value>
            A list of <see cref="T:o2g.Types.CommunicationLogNS.ComRecordParticipant"/>. A <c>Participant</c> represents the other party in this call.
            </value>
        </member>
        <member name="P:o2g.Types.CommunicationLogNS.ComRecord.Begin">
            <summary>
            Return the date the call has began.
            </summary>
            <value>
            A <see cref="T:System.DateTime"/> value that represents the date the call has began.
            </value>
        </member>
        <member name="P:o2g.Types.CommunicationLogNS.ComRecord.End">
            <summary>
            Return the date the call has ended.
            </summary>
            <value>
            A <see cref="T:System.DateTime"/> value that represents the date the call has ended.
            </value>
        </member>
        <member name="T:o2g.Types.CommunicationLogNS.ComRecordParticipant">
            <summary>
            <c>ComRecordParticipant</c> represents a participant referenced in a com record.
            </summary>
            <remarks>
            <h3>Record content</h3>
            <para>
            For a <b>simple call</b> (user A calls user B), the call record on each party will contain <u>both the participant A and 
            the participant B</u>: (no guaranty on the order of the participants on 2 successive responses).
            <list type="table">
            <listheader><term>Side</term><description>Com record content</description></listheader>
            <item>
            <term>On A side</term>
            <description>
            <list type="bullet">
            <item><description>Participant A (the owner of the record) with <c>role=Caller</c> and the answered status (whether the call has been answered or not)</description></item>
            <item><description>Participant B : neither the role nor the state is provided</description></item>
            </list>
            </description>
            </item>
            <item>
            <term>On B side</term>
            <description>
            <list type="bullet">
            <item><description>Participant A : neither the role nor the state is provided</description></item>
            <item><description>Participant B (the owner of the record) with <c>role=Callee</c> and the answered status (whether the call has been answered or not)</description></item>
            </list>
            </description>
            </item>
            </list>
            </para>
            
            <para>
            For a <b>re-routed call</b> (user A calls user B, the call is re-routed on user C, caused by overflow, redirection or pickup), 
            the record generated on each side including the user B side (the "victim" of the re-routing) will not contain as participant 
            the user B itself because he was not the last destination of the call:
            <list type="table">
            <listheader><term>Side</term><description>Com record content</description></listheader>
            <item>
            <term>On A side</term>
            <description>
            <list type="bullet">
            <item><description>Participant A : with <c>role=Caller</c>, the answered status, initialCalled=B</description></item>
            <item><description>Participant C</description></item>
            </list>
            </description>
            </item>
            <item>
            <term>On B side</term>
            <description>
            <list type="bullet">
            <item><description>Participant A : neither the role nor the state is provided</description></item>
            <item><description>Participant C with <c>role=Callee</c>, the answered status (whether the call has been answered or not) and initialCalled=B 
            which tells B that he was called by A but the call has been rerouted to C(with a reason) which answered or not to the call</description></item>
            </list>
            </description>
            </item>
            <item>
            <term>On C side</term>
            <description>
            <list type="bullet">
            <item><description>Participant A : neither the role nor the state is provided</description></item>
            <item><description>Participant C with <c>role=Callee</c>, the answered status (whether the call has been answered or not) and initialCalled=B</description></item>
            </list>
            </description>
            </item>
            </list>
            </para>
            <para>
            Furthermore, for a multi-parties call using addParticipant, the already connected users in the call will also received a call record which
            will contain the answered status of the added participant: this information is provided to distinguish the added participants which have 
            really answered and the other which decline the call.
            </para>
            
            <h3>Identification of the participant</h3>
            <para>
            In the comlog notification events, the participant owner is identified only by its loginName (in order to reduce the event call flow), 
            the other participants are identified with their full identity (loginName, phoneNumber).
            </para>
            <para>
            In a <see cref="T:o2g.Types.CommunicationLogNS.QueryResult"/> result:
            <list type="bullet">
            <item><description>
            if no optimization is asked, all the participants are identified with their full identity.
            </description></item>
            <item><description>
            If the <c>optimized</c> parameter is set to <see langword="true"/>, only the first occurence of a participant (owner or other) is identified with its 
            full identity. The following occurences are identified only with the phonenumber.
            </description></item>
            </list>
            </para>
            </remarks>
        </member>
        <member name="P:o2g.Types.CommunicationLogNS.ComRecordParticipant.Role">
            <summary>
            Return whether the participant was the caller party, a called party or a masterconf.
            </summary>
            <value>
            A <see cref="P:o2g.Types.CommunicationLogNS.ComRecordParticipant.Role"/> value that represents the participant role.
            </value>
            <remarks>
            In a conference, a participant can be both a called party and a caller (consultation call plus conference following an incoming call).
            </remarks>
        </member>
        <member name="P:o2g.Types.CommunicationLogNS.ComRecordParticipant.Answered">
            <summary>
            Return whether the participant has really entered in the conversation.
            </summary>
            <value>
            A <see langword="bool"/> value that indicates if the participant has answered the call, or a <see langword="null"/> value 
            if it has been impossible to identify wheter the participant has answered.
            </value>
        </member>
        <member name="P:o2g.Types.CommunicationLogNS.ComRecordParticipant.Identity">
            <summary>
            Return this participant identity.
            </summary>
            <value>
            A <see cref="T:o2g.Types.CommonNS.PartyInfo"/> that is the participant identity.
            </value>
        </member>
        <member name="P:o2g.Types.CommunicationLogNS.ComRecordParticipant.Anonymous">
            <summary>
            Return whether the participant identity is secret.
            </summary>
            <value>
            <see langword="true"/> if the participant is anonymous; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.CommunicationLogNS.ComRecordParticipant.InitialCalled">
            <summary>
            Return the number that has been initially called when this participant has been entered in the call.
            </summary>
            <value>
            A <see cref="T:o2g.Types.CommonNS.PartyInfo"/> that is the initial participant identity.
            </value>
        </member>
        <member name="P:o2g.Types.CommunicationLogNS.ComRecordParticipant.Reason">
            <summary>
            Return the reason why the call has been established, rerouted, terminated.
            </summary>
            <value>
            A <see cref="P:o2g.Types.CommunicationLogNS.ComRecordParticipant.Reason"/> value that represents the reason the call has been established, rerouted, terminated.
            </value>
        </member>
        <member name="T:o2g.Types.CommunicationLogNS.Option">
            <summary>
            The <c>Option</c> enum defines the possible filter option when querying a communication log.
            </summary>
            <remarks>
            It's possible to combine the options
            <code>
                // define an option to filter unanswered outgoing calls
                option = Option.Unanswered | Option.Unacknowledged;
            </code>
            </remarks>
            <seealso cref="M:o2g.ICommunicationLog.GetComRecordsAsync(o2g.Types.CommunicationLogNS.QueryFilter,o2g.Types.CommunicationLogNS.Page,System.Boolean,System.String)"/>
        </member>
        <member name="F:o2g.Types.CommunicationLogNS.Option.None">
            <summary>
            The default value that represents no filtering.
            </summary>
        </member>
        <member name="F:o2g.Types.CommunicationLogNS.Option.Unanswered">
            <summary>
            Use this value to filter unanswered calls.
            </summary>
        </member>
        <member name="F:o2g.Types.CommunicationLogNS.Option.Unacknowledged">
            <summary>
            Use this value to filter unacknowledged calls.
            </summary>
        </member>
        <member name="T:o2g.Types.CommunicationLogNS.Page">
            <summary>
            The <c>Page</c> class allows to define a paging mechanism to query the communication log.
            </summary>
            <see cref="M:o2g.ICommunicationLog.GetComRecordsAsync(o2g.Types.CommunicationLogNS.QueryFilter,o2g.Types.CommunicationLogNS.Page,System.Boolean,System.String)"/>
        </member>
        <member name="M:o2g.Types.CommunicationLogNS.Page.#ctor(System.Int32,System.Int32)">
            <summary>
            Construct a new Page with the specified offset and limit.
            </summary>
            <param name="offset">The offset value.</param>
            <param name="limit">The limit value.</param>
        </member>
        <member name="M:o2g.Types.CommunicationLogNS.Page.Next">
            <summary>
            Move the offset to the next page.
            </summary>
        </member>
        <member name="M:o2g.Types.CommunicationLogNS.Page.Previous">
            <summary>
            Move to the previous page.
            </summary>
        </member>
        <member name="P:o2g.Types.CommunicationLogNS.Page.Offset">
            <summary>
            The offset of the page that is the offset of the first com record.
            </summary>
            <value>
            A positive <see langword="int"/> that is the offset of the first com record.
            </value>
        </member>
        <member name="P:o2g.Types.CommunicationLogNS.Page.Limit">
            <summary>
            The number of record in this page.
            </summary>
            <value>
            A positive <see langword="int"/> that is the maximum com records in this page.
            </value>
        </member>
        <member name="T:o2g.Types.CommunicationLogNS.QueryFilter">
            <summary>
            <c>Query</c> class represents a communication log query filter. 
            It is used to filter records returned by a <see cref="M:o2g.ICommunicationLog.GetComRecordsAsync(o2g.Types.CommunicationLogNS.QueryFilter,o2g.Types.CommunicationLogNS.Page,System.Boolean,System.String)"/> query.
            </summary>
        </member>
        <member name="P:o2g.Types.CommunicationLogNS.QueryFilter.After">
            <summary>
            The optional record start date.
            </summary>
            <value>
            A <see cref="T:System.DateTime"/> object that is the start date from which the query searches for matching the records.
            </value>
            <remarks>
            When used, the query returns the records not older than this date. When omitted the query searches for matching records starting from the oldest.
            </remarks>
        </member>
        <member name="P:o2g.Types.CommunicationLogNS.QueryFilter.Before">
            <summary>
            The optional record end date.
            </summary>
            <value>
            A <see cref="T:System.DateTime"/> object that is the date from which the query stop searching the records.
            </value>
            <remarks>
            When used the query returns the records older than this date. When omitted the query searches for matching records until the newest.
            </remarks>
        </member>
        <member name="P:o2g.Types.CommunicationLogNS.QueryFilter.Options">
            <summary>
            The search options.
            </summary>
            <value>
            A combination of <see cref="T:o2g.Types.CommunicationLogNS.Option"/> to filter the query.
            </value>
            <remarks>
            <c>Options</c> is a combination of values from <see cref="T:o2g.Types.CommunicationLogNS.Option"/> that can be used to filter the query. 
            <list type="table">
            <listheader><term>Value</term><description>Description</description></listheader>
            <item><term><see cref="F:o2g.Types.CommunicationLogNS.Option.Unacknowledged"/></term><description>To return only the unacknowledged records</description></item>
            <item><term><see cref="F:o2g.Types.CommunicationLogNS.Option.Unanswered"/></term><description>To return only the records corresponding to an unanswered call.</description></item>
            </list>
            </remarks>
        </member>
        <member name="P:o2g.Types.CommunicationLogNS.QueryFilter.CallRef">
            <summary>
            The call reference of the call to retrieve.
            </summary>
            <value>
            A <see langword="string"/> that represents the call reference of the call to retrieve.
            </value>
        </member>
        <member name="P:o2g.Types.CommunicationLogNS.QueryFilter.RemotePartyId">
            <summary>
            Filter on the records in which the user is engaged with this remote party.
            </summary>
            <value>
            A <see langword="string"/> that represents the name of the remote party the user is engaged with.
            </value>
        </member>
        <member name="P:o2g.Types.CommunicationLogNS.QueryFilter.Role">
            <summary>
            Filter on the user's role in the communication. 
            </summary>
            <value>
            A <see cref="P:o2g.Types.CommunicationLogNS.QueryFilter.Role"/> value that defines the user's role.
            </value>
        </member>
        <member name="T:o2g.Types.CommunicationLogNS.QueryResult">
            <summary>
            <c>QueryResult</c> class represents the result of a communication log query.
            </summary>
            <remarks>
            The <c>ICommunicationLog</c> service provides a paging mechanism that allows the application to query the result by pages.
            </remarks>
            <seealso cref="M:o2g.ICommunicationLog.GetComRecordsAsync(o2g.Types.CommunicationLogNS.QueryFilter,o2g.Types.CommunicationLogNS.Page,System.Boolean,System.String)"/>
        </member>
        <member name="P:o2g.Types.CommunicationLogNS.QueryResult.Records">
            <summary>
            Get the list of com record returned by the query.
            </summary>
            <value>
            A list of <see cref="T:o2g.Types.CommunicationLogNS.ComRecord"/> that represents the call history.
            </value>
        </member>
        <member name="P:o2g.Types.CommunicationLogNS.QueryResult.Offset">
            <summary>
            Return the offset of the first record which is returned.
            </summary>
            <value>
            The <see langword="int"/> value that is the first record offset.
            </value>
        </member>
        <member name="P:o2g.Types.CommunicationLogNS.QueryResult.Limit">
            <summary>
            Return the number of record returned.
            </summary>
            <value>
            The <see langword="int"/> value that is the number of records returned.
            </value>
        </member>
        <member name="P:o2g.Types.CommunicationLogNS.QueryResult.Count">
            <summary>
            Return the total number of record the query has retrieved.
            </summary>
            <value>
            The <see langword="int"/> value that is the total number of records.
            </value>
        </member>
        <member name="T:o2g.Types.CommunicationLogNS.Reason">
            <summary>
            <c>Reason</c> defines the why reason the communication has been released, established or rerouted.
            </summary>
        </member>
        <member name="F:o2g.Types.CommunicationLogNS.Reason.AllTrunkBusy">
            <summary>
            The call was abandonned because there was no Available trunk.
            </summary>
        </member>
        <member name="F:o2g.Types.CommunicationLogNS.Reason.InvalidNumber">
            <summary>
            The call was refused because the dialed number is not valid.
            </summary>
        </member>
        <member name="F:o2g.Types.CommunicationLogNS.Reason.Abandoned">
            <summary>
            The call was canceled by the caller.
            </summary>
        </member>
        <member name="F:o2g.Types.CommunicationLogNS.Reason.Busy">
            <summary>
            The call failed because the called party is busy.
            </summary>
        </member>
        <member name="F:o2g.Types.CommunicationLogNS.Reason.Conferenced">
            <summary>
            The call was set to be a conference.
            </summary>
        </member>
        <member name="F:o2g.Types.CommunicationLogNS.Reason.Pickup">
            <summary>
            The call was picked up.
            </summary>
        </member>
        <member name="F:o2g.Types.CommunicationLogNS.Reason.Forwarded">
            <summary>
            The call was forwarded to another destination.
            </summary>
        </member>
        <member name="F:o2g.Types.CommunicationLogNS.Reason.Redirected">
            <summary>
            The call was redirected to another destination.
            </summary>
        </member>
        <member name="F:o2g.Types.CommunicationLogNS.Reason.ReleasedOnRedirect">
            <summary>
            The call was released since redirection to another destination fails.
            </summary>
        </member>
        <member name="F:o2g.Types.CommunicationLogNS.Reason.Transferred">
            <summary>
            The call was transferred.
            </summary>
        </member>
        <member name="F:o2g.Types.CommunicationLogNS.Reason.ReleasedOnTransfer">
            <summary>
            The call was released since transfer to another destination fails.
            </summary>
        </member>
        <member name="F:o2g.Types.CommunicationLogNS.Reason.VoiceMail">
            <summary>
            The call ended on voicemail.
            </summary>
        </member>
        <member name="F:o2g.Types.CommunicationLogNS.Reason.Normal">
            <summary>
            The call normally ended.
            </summary>
        </member>
        <member name="F:o2g.Types.CommunicationLogNS.Reason.Unknown">
            <summary>
            The reason is unknown.
            </summary>
        </member>
        <member name="T:o2g.Types.CommunicationLogNS.Role">
            <summary>
            <c>Role</c> defines the roles a participant can have in a com record.
            </summary>
        </member>
        <member name="F:o2g.Types.CommunicationLogNS.Role.Caller">
            <summary>
            The participant is a caller party.
            </summary>
        </member>
        <member name="F:o2g.Types.CommunicationLogNS.Role.Callee">
            <summary>
            The participant is a called party.
            </summary>
        </member>
        <member name="F:o2g.Types.CommunicationLogNS.Role.Unknown">
            <summary>
            The role is unknown.
            </summary>
        </member>
        <member name="P:o2g.Types.Credential.Login">
            <summary>
            The login.
            </summary>
        </member>
        <member name="P:o2g.Types.Credential.Password">
            <summary>
            The password.
            </summary>
        </member>
        <member name="T:o2g.Types.DirectoryNS.AttributeFilter">
            <summary>
            <c>AttributeFilter</c> represents the attributes that can be used to filter a directory search.
            </summary>
            <seealso cref="T:o2g.Types.DirectoryNS.Criteria"/>
        </member>
        <member name="F:o2g.Types.DirectoryNS.AttributeFilter.LastName">
            <summary>
            The last name.
            </summary>
        </member>
        <member name="F:o2g.Types.DirectoryNS.AttributeFilter.FirstName">
            <summary>
            The first name.
            </summary>
        </member>
        <member name="F:o2g.Types.DirectoryNS.AttributeFilter.PhoneNumber">
            <summary>
            The phone number.
            </summary>
        </member>
        <member name="F:o2g.Types.DirectoryNS.AttributeFilter.LoginName">
            <summary>
            The login name.
            </summary>
        </member>
        <member name="T:o2g.Types.DirectoryNS.Criteria">
            <summary>
            <c>Criteria</c> class is used to create a filter criteria for a directory search.
            </summary>
            <example>
            The <c>Criteria</c> class provides static method to build logical combination of simple criteria.
            <code>
                Criteria complex = Criteria.Or(
                                        Criteria.And(
                                            Criteria.Create(AttributeFilter.LastName, OperationFilter.BeginsWith, "Bond"),
                                            Criteria.Create(AttributeFilter.FirstName, OperationFilter.EqualIgnoreCase, "james")
                                        ),
                                        Criteria.Create(AttributeFilter.PhoneNumber, OperationFilter.Contains, "007")
                                   );
            
            </code>
            </example>
        </member>
        <member name="P:o2g.Types.DirectoryNS.Criteria.Operation">
            <summary>
            Return the operation associated to this criteria.
            </summary>
            <value>
            An <see cref="P:o2g.Types.DirectoryNS.Criteria.Operation"/> value that represent the criteria operation.
            </value>
        </member>
        <member name="P:o2g.Types.DirectoryNS.Criteria.Field">
            <summary>
            Return the field associated to this criteria.
            </summary>
            <value>
            The <see langword="string"/> value that is the value associated to the criteria
            </value>
        </member>
        <member name="P:o2g.Types.DirectoryNS.Criteria.Operand">
            <summary>
            Return the operand associated to this criteria. 
            </summary>
        </member>
        <member name="M:o2g.Types.DirectoryNS.Criteria.Create(o2g.Types.DirectoryNS.AttributeFilter,o2g.Types.DirectoryNS.OperationFilter,System.String)">
            <summary>
            Create a simple criteria with an attribute filter an operation and a value
            </summary>
            <param name="field">The attribute filter.</param>
            <param name="operation">The operation.</param>
            <param name="value">The value to test.</param>
            <returns>
            A <see cref="T:o2g.Types.DirectoryNS.Criteria"/> that represents the search criteria.
            </returns>
            <example>
            To create a criteria search based on last name:
            <code>
                Criteria criteria = Criteria.Create(AttributeFilter.LastName, OperationFilter.BeginsWith, "Bond");
            </code>
            
            </example>
        </member>
        <member name="M:o2g.Types.DirectoryNS.Criteria.And(o2g.Types.DirectoryNS.Criteria[])">
            <summary>
            Create a <c>Criteria</c> object thats is the logical <c>And</c> combination of the given criterias.
            </summary>
            <param name="criterias">A list of criterias to combine.</param>
            <returns>
            A <see cref="T:o2g.Types.DirectoryNS.Criteria"/> that represents the logical <c>And</c> combination of the given criterias.
            </returns>
            <example>
            <code>
                Criteria criteria = Criteria.And(
                                        Criteria.Create(AttributeFilter.LastName, OperationFilter.BeginsWith, "Bond"),
                                        Criteria.Create(AttributeFilter.FirstName, OperationFilter.EqualIgnoreCase, "james")
                                    );
            </code>
            
            </example>
        </member>
        <member name="M:o2g.Types.DirectoryNS.Criteria.Or(o2g.Types.DirectoryNS.Criteria[])">
            <summary>
            Create a <c>Criteria</c> object thats is the logical <c>Or</c> combination of the given criterias.
            </summary>
            <param name="criterias">A list of criterias to combine.</param>
            <returns>
            A <see cref="T:o2g.Types.DirectoryNS.Criteria"/> that represents the logical <c>Or</c> combination of the given criterias.
            </returns>
            <example>
            <code>
                Criteria criteria = Criteria.Or(
                                        Criteria.Create(AttributeFilter.LastName, OperationFilter.BeginsWith, "Bond"),
                                        Criteria.Create(AttributeFilter.FirstName, OperationFilter.EqualIgnoreCase, "james")
                                    );
            </code>
            
            </example>
        </member>
        <member name="T:o2g.Types.DirectoryNS.OperationFilter">
            <summary>
            <c>OperationFilter</c> represents the operation that can be used to filter a directory search. 
            </summary>
            <seealso cref="T:o2g.Types.DirectoryNS.Criteria"/>
        </member>
        <member name="F:o2g.Types.DirectoryNS.OperationFilter.EqualIgnoreCase">
            <summary>
            The attribute and the given value are equals (case insensitive).
            </summary>
        </member>
        <member name="F:o2g.Types.DirectoryNS.OperationFilter.BeginsWith">
            <summary>
            The attribute begins with the value.
            </summary>
        </member>
        <member name="F:o2g.Types.DirectoryNS.OperationFilter.Contains">
            <summary>
            The attribute contains the value.
            </summary>
        </member>
        <member name="F:o2g.Types.DirectoryNS.OperationFilter.EndsWith">
            <summary>
            The attribute ends with the value.
            </summary>
        </member>
        <member name="T:o2g.Types.DirectoryNS.SearchResult">
            <summary>
            <c>SearchResult</c> represents the result of a directory search.
            </summary>
        </member>
        <member name="T:o2g.Types.DirectoryNS.SearchResult.Code">
            <summary>
            <c>Code</c> represents the status of a directory search.
            </summary>
            <remarks>
            Each time a call to <see cref="M:o2g.IDirectory.GetResultsAsync(System.String)"/> is done, the returned result code must be tested.
            </remarks>
            <seealso cref="T:o2g.IDirectory"/>
        </member>
        <member name="F:o2g.Types.DirectoryNS.SearchResult.Code.Ok">
            <summary>
            Responses are provided this time. Continue to invoking <see cref="M:o2g.IDirectory.GetResultsAsync(System.String)"/> periodically to get the next results.
            </summary>
        </member>
        <member name="F:o2g.Types.DirectoryNS.SearchResult.Code.Nok">
            <summary>
            No responses receive. Continue to invoking <see cref="M:o2g.IDirectory.GetResultsAsync(System.String)"/> to get more results.
            </summary>
        </member>
        <member name="F:o2g.Types.DirectoryNS.SearchResult.Code.Finish">
            <summary>
            Search is finished. 
            </summary>
        </member>
        <member name="F:o2g.Types.DirectoryNS.SearchResult.Code.Timeout">
            <summary>
            Search is ended for timeout reason.
            </summary>
        </member>
        <member name="F:o2g.Types.DirectoryNS.SearchResult.Code.Unknown">
            <summary>
            Unknown result code.
            </summary>
        </member>
        <member name="T:o2g.Types.DirectoryNS.SearchResult.Results">
            <summary>
            <c>Results</c> represents a set of result from a directory search.
            </summary>
        </member>
        <member name="P:o2g.Types.DirectoryNS.SearchResult.Results.Contacts">
            <summary>
            Return the contact found in a directory search.
            </summary>
            <value>
            A list of <see cref="T:o2g.Types.CommonNS.PartyInfo"/> that represents the contacts matching the directory search filters.
            </value>
        </member>
        <member name="P:o2g.Types.DirectoryNS.SearchResult.ResultCode">
            <summary>
            Return the result code for this search result
            </summary>
            <value>
            A <see cref="T:o2g.Types.DirectoryNS.SearchResult.Code"/> that gives the status and progress of the search request.
            </value>
        </member>
        <member name="P:o2g.Types.DirectoryNS.SearchResult.ResultElements">
            <summary>
            Return the search results
            </summary>
            <value>
            A list of <see cref="T:o2g.Types.DirectoryNS.SearchResult.Results"/> containing the directory search results.
            </value>
        </member>
        <member name="T:o2g.Types.EventSummaryNS.EventSummary">
            <summary>
            <c>EventSummary</c> represents event counters associated to the user. It allows a user to get its new message 
            indicators (missed call, voice mails, callback request, fax).
            </summary>
        </member>
        <member name="P:o2g.Types.EventSummaryNS.EventSummary.MissedCallsNb">
            <summary>
            Return the number of missed calls.
            </summary>
            <value>
            A optional <see langword="int"/> value that gives the number of missed calls.
            </value>
            <remarks>
            <para>
            If this attribute is not specified, it means that the server is not able to provide that information.
            </para>
            <para>
            <b>CAUTION</b>: This attribute doesn't reflect the missed call number managed by the call server itself but is related to the unanswered and non acknowledged
            incoming calls in the history call. Therefore, either only the explicit acknowledgment of these history com records through the communication log API
            service, or a new answered call with the same user will decrease this counter. Moreover, the counter is incremented for each non answered incoming call,
            including successive attempts from the same caller.
            </para>
            </remarks>
        </member>
        <member name="P:o2g.Types.EventSummaryNS.EventSummary.VoiceMessagesNb">
            <summary>
            Return the number of new voice messages.
            </summary>
            <value>
            A optional <see langword="int"/> value that gives the number of new voice messages.
            </value>
            <remarks>
            If this attribute is not specified, it means that the server is not able to provide that information.
            </remarks>
        </member>
        <member name="P:o2g.Types.EventSummaryNS.EventSummary.CallBackRequestsNb">
            <summary>
            Return the number of new callback requests.
            </summary>
            <value>
            A optional <see langword="int"/> value that gives the number of new callback requests.
            </value>
            <remarks>
            If this attribute is not specified, it means that the server is not able to provide that information.
            </remarks>
        </member>
        <member name="P:o2g.Types.EventSummaryNS.EventSummary.FaxNb">
            <summary>
            Return the number of new faxes.
            </summary>
            <value>
            A optional <see langword="int"/> value that gives the number of new faxes.
            </value>
            <remarks>
            If this attribute is not specified, it means that the server is not able to provide that information.
            </remarks>
        </member>
        <member name="P:o2g.Types.EventSummaryNS.EventSummary.NewTextNb">
            <summary>
            Return the number of new text messages.
            </summary>
            <value>
            A optional <see langword="int"/> value that gives the number of new text messages.
            </value>
            <remarks>
            If this attribute is not specified, it means that the server is not able to provide that information.
            </remarks>
        </member>
        <member name="P:o2g.Types.EventSummaryNS.EventSummary.OldTextNb">
            <summary>
            Return the number of old text messages.
            </summary>
            <value>
            A optional <see langword="int"/> value that gives the number of old text messages.
            </value>
            <remarks>
            If this attribute is not specified, it means that the server is not able to provide that information.
            </remarks>
        </member>
        <member name="P:o2g.Types.EventSummaryNS.EventSummary.EventWaiting">
            <summary>
            Return whether an event is waiting.
            </summary>
            <value>
            <see langword="true"/> if an event is waiting; <see langword="false"/> otherwise.
            </value>
            <remarks>
            <para>
            This flags can be used to notify the application that there are new events waiting. 
            </para>
            </remarks>
        </member>
        <member name="T:o2g.Types.Host">
            <summary>
            This class represents an O2G host.
            <para>An O2G host can be reacheable from the local network, or from a wide area network. In this case, enterprise access can be secured by a reverse proxy border element.
            </para>
            <para>
            An O2G host as a private address which is the IP address or the URI used to reach the O2G server on a local network, and a public address which is the IP address or the URI used to reach the O2G server through a reverse proxy.
            </para>
            </summary>
            <remarks>It's possible to have only one address configured, but an exception will be throws if both are <see langword="null"/>.
            </remarks>
        </member>
        <member name="P:o2g.Types.Host.PrivateAddress">
            <summary>
            This property is the private address of this host.
            </summary>
            <value>
            The private IP address of URI, or <see langword="null"/> if the private address is not defined.
            </value>
        </member>
        <member name="P:o2g.Types.Host.PublicAddress">
            <summary>
            This property is the public address of this host.
            </summary>
            <value>
            The public IP address of URI, or <see langword="null"/> if the public address is not defined.
            </value>
        </member>
        <member name="T:o2g.Types.MaintenanceNS.ConfigurationType">
            <summary>
            <c>ConfigurationType</c> represents the possible O2G server configurations. 
            </summary>
        </member>
        <member name="F:o2g.Types.MaintenanceNS.ConfigurationType.PbxManagement">
            <summary>
            O2G Server is configured for management.
            </summary>
            <remarks>
            An O2G server configured for management does not monitor devices on the OmniPCX Enterprise.
            </remarks>
        </member>
        <member name="F:o2g.Types.MaintenanceNS.ConfigurationType.FullServices">
            <summary>
            O2G Server is configured with full services.
            </summary>
        </member>
        <member name="F:o2g.Types.MaintenanceNS.ConfigurationType.Unknown">
            <summary>
            Unknown configuration
            </summary>
        </member>
        <member name="T:o2g.Types.MaintenanceNS.CtiLinkState">
            <summary>
            <c>CtiLinkState</c> represents the differents possible states of the CTI link between OmniPCX Enterprise and O2G server.
            </summary>
        </member>
        <member name="F:o2g.Types.MaintenanceNS.CtiLinkState.ConnectedMain">
            <summary>
            CTI Link is established with the main OmniPCX Enterprise call server.
            </summary>
        </member>
        <member name="F:o2g.Types.MaintenanceNS.CtiLinkState.ConnectedStandby">
            <summary>
            CTI Link is established with the standby OmniPCX Enterprise call server.
            </summary>
        </member>
        <member name="F:o2g.Types.MaintenanceNS.CtiLinkState.Disconnected">
            <summary>
            CTI Link is not established.
            </summary>
        </member>
        <member name="T:o2g.Types.MaintenanceNS.License">
            <summary>
            <c>License</c> class represents an O2G license.
            </summary>
        </member>
        <member name="P:o2g.Types.MaintenanceNS.License.Name">
            <summary>
            Return the license name.
            </summary>
            <value>
            A <see langword="string"/> value that represents the license name.
            </value>
        </member>
        <member name="P:o2g.Types.MaintenanceNS.License.Total">
            <summary>
            Return the number of licenses.
            </summary>
            <value>
            A <see langword="int"/> value that represents the number of licenses.
            </value>
        </member>
        <member name="P:o2g.Types.MaintenanceNS.License.CurrentUsed">
            <summary>
            Return the number of licenses used.
            </summary>
            <value>
            A <see langword="int"/> value that represents the number of licenses used.
            </value>
        </member>
        <member name="P:o2g.Types.MaintenanceNS.License.Expiration">
            <summary>
            Return the license expiration date.
            </summary>
            <value>
            A <see langword="string"/> value that represents the license expiration date.
            </value>
        </member>
        <member name="T:o2g.Types.MaintenanceNS.PbxStatus">
            <summary>
            <c>PbxStatus</c> represents the state of an OmniPCX Enterprise the O2G server is connected on.
            </summary>
        </member>
        <member name="P:o2g.Types.MaintenanceNS.PbxStatus.Name">
            <summary>
            Return the name of the OmniPCX Enterprise node.
            </summary>
            <value>
            A <see langword="string"/> value thats is the name of the OmniPCX Enterprise node.
            </value>
        </member>
        <member name="P:o2g.Types.MaintenanceNS.PbxStatus.NodeId">
            <summary>
            Return the OmniPCX Enterprise node id.
            </summary>
            <value>
            An <see langword="int"/> value thats is the OmniPCX Enterprise node number.
            </value>
        </member>
        <member name="P:o2g.Types.MaintenanceNS.PbxStatus.MainAddress">
            <summary>
            Return the OmniPCX Enterprise node main address.
            </summary>
            <value>
            A <see cref="T:o2g.Types.MaintenanceNS.ServerAddress"/> object that represents the OmniPCX Enterprise node main address.
            </value>
        </member>
        <member name="P:o2g.Types.MaintenanceNS.PbxStatus.SecondaryAddress">
            <summary>
            Return the OmniPCX Enterprise node secondary address.
            </summary>
            <value>
            A <see cref="T:o2g.Types.MaintenanceNS.ServerAddress"/> object that represents the OmniPCX Enterprise node secondary address, or a 
            <see langword="null"/> value if the OmniPCX Enterprise node is not duplicated.
            </value>
        </member>
        <member name="P:o2g.Types.MaintenanceNS.PbxStatus.Version">
            <summary>
            Return the version of the OmniPCX Enterprise node.
            </summary>
            <value>
            A <see langword="string"/> value thats is the version of the OmniPCX Enterprise node.
            </value>
        </member>
        <member name="P:o2g.Types.MaintenanceNS.PbxStatus.Connected">
            <summary>
            Return whether the O2G server is connected to this OmniPCX Enterprise node.
            </summary>
            <value>
            <see langword="true"/> if the O2G server is connected to this OmniPCX Enterprise node; <see langword="true"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.MaintenanceNS.PbxStatus.Loaded">
            <summary>
            Return whether the O2G server has loaded all this OmniPCX Enterprise node's users.
            </summary>
            <value>
            <see langword="true"/> if the O2G server has loaded all this OmniPCX Enterprise node's users; <see langword="true"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.MaintenanceNS.PbxStatus.CtiLinkState">
            <summary>
            Return the state of the CSTA link between the O2Gserver and this OmniPCX Enterprise node.
            </summary>
            <value>
            A <see cref="P:o2g.Types.MaintenanceNS.PbxStatus.CtiLinkState"/> value that represents the CSTA link status.
            </value>
        </member>
        <member name="P:o2g.Types.MaintenanceNS.PbxStatus.Secured">
            <summary>
            Return whether the OmniPCX Enterprise node is secured.
            </summary>
            <value>
            <see langword="true"/> if the OmniPCX Enterprise node is secured; <see langword="true"/> otherwise.
            </value>
            <remarks>
            If the OmniPCX Enterprise node is secured, the connection with the O2G server is done using SSH.
            </remarks>
        </member>
        <member name="P:o2g.Types.MaintenanceNS.PbxStatus.MonitoredUserNumber">
            <summary>
            Return the number of monitored users on this OmniPCX Enterprise node.
            </summary>
            <value>
            An <see langword="int"/> value thats is the number of monitored users on this OmniPCX Enterprise node.
            </value>
        </member>
        <member name="T:o2g.Types.MaintenanceNS.ServerAddress">
            <summary>
            <c>ServerAddress</c> class defines an OmniPCX Enterprise address.
            </summary>
        </member>
        <member name="P:o2g.Types.MaintenanceNS.ServerAddress.Fqdn">
            <summary>
            Return this OmniPCX Enterprise FQDN.
            </summary>
            <value>
            A <see langword="string"/> value that is the FQDN (Fully Qualified Domain Name) of this OmniPCX Enterprise node.
            </value>
        </member>
        <member name="P:o2g.Types.MaintenanceNS.ServerAddress.Ip">
            <summary>
            Return this OmniPCX Enterprise IP address.
            </summary>
            <value>
            A <see langword="string"/> value that is the IPv4 address of this OmniPCX Enterprise node.
            </value>
        </member>
        <member name="T:o2g.Types.MaintenanceNS.SystemStatus">
            <summary>
            <c>SystemStatus</c> class provide a full status of the O2G server and its connections.
            </summary>
            <seealso cref="M:o2g.IMaintenance.GetSystemStatusAsync"/>
        </member>
        <member name="P:o2g.Types.MaintenanceNS.SystemStatus.LogicalAddress">
            <summary>
            Return this O2G server logical address.
            </summary>
            <value>
            A <see cref="T:o2g.Types.MaintenanceNS.ServerAddress"/> that represents the O2G server logical address.
            </value>
        </member>
        <member name="P:o2g.Types.MaintenanceNS.SystemStatus.StartDate">
            <summary>
            Return the start date of the O2G server.
            </summary>
            <value>
            A <see langword="DateTime"/> object that represents the O2G server start date.
            </value>
        </member>
        <member name="P:o2g.Types.MaintenanceNS.SystemStatus.HaMode">
            <summary>
            Return whether this O2G is deployed in high availability mode.
            </summary>
            <value>
            <see langword="true"/> if the O2G is in HA mode; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.MaintenanceNS.SystemStatus.Primary">
            <summary>
            Return the FQDN of the currently active O2G server when it is configured in HA mode.
            </summary>
            <value>
            The FQDN of the current active O2G server in case of HA configuration.
            </value>
        </member>
        <member name="P:o2g.Types.MaintenanceNS.SystemStatus.PrimaryVersion">
            <summary>
            Return the version of the current active O2G server when it is configured in HA mode.
            </summary>
            <value>
            The version of the active O2G server.
            </value>
        </member>
        <member name="P:o2g.Types.MaintenanceNS.SystemStatus.Secondary">
            <summary>
            Return the FQDN of the backup O2G server when it is configured in HA mode.
            </summary>
            <value>
            The FQDN of the backup O2G server in case of HA configuration.
            </value>
        </member>
        <member name="P:o2g.Types.MaintenanceNS.SystemStatus.SecondaryVersion">
            <summary>
            Return the version of the backup O2G server when it is configured in HA mode.
            </summary>
            <value>
            The version of the backup O2G server.
            </value>
        </member>
        <member name="P:o2g.Types.MaintenanceNS.SystemStatus.Pbxs">
            <summary>
            Return the list of Pbx connected to this O2G server
            </summary>
            <value>
            A list of <see cref="T:o2g.Types.MaintenanceNS.PbxStatus"/> that represents the connected Pbx and their connection status.
            </value>
        </member>
        <member name="P:o2g.Types.MaintenanceNS.SystemStatus.Licenses">
            <summary>
            Return the licenses.
            </summary>
            <value>
            A list of <see cref="T:o2g.Types.MaintenanceNS.License"/> object that represents the status of the O2G server licenses.
            </value>
        </member>
        <member name="P:o2g.Types.MaintenanceNS.SystemStatus.ConfigurationType">
            <summary>
            Return the O2G server configuration type.
            </summary>
            <value>
            The <see cref="P:o2g.Types.MaintenanceNS.SystemStatus.ConfigurationType"/> that corresponds to the O2G server configuration.
            </value>
        </member>
        <member name="T:o2g.Types.ManagementNS.AttributeType">
            <summary>
            <c>AttributeType</c> represents the possible type of an attribute.
            </summary>
        </member>
        <member name="F:o2g.Types.ManagementNS.AttributeType.Enumerated">
            <summary>
            An enumerated value.
            </summary>
        </member>
        <member name="F:o2g.Types.ManagementNS.AttributeType.OctetString">
            <summary>
            An octet string value.
            </summary>
        </member>
        <member name="F:o2g.Types.ManagementNS.AttributeType.Sequence">
            <summary>
            A sequence.
            </summary>
        </member>
        <member name="F:o2g.Types.ManagementNS.AttributeType.Integer">
            <summary>
            An integer value.
            </summary>
        </member>
        <member name="F:o2g.Types.ManagementNS.AttributeType.Boolean">
            <summary>
            A boolean value.
            </summary>
        </member>
        <member name="F:o2g.Types.ManagementNS.AttributeType.Set">
            <summary>
            A Set.
            </summary>
        </member>
        <member name="F:o2g.Types.ManagementNS.AttributeType.ByteString">
            <summary>
            A byte string value.
            </summary>
        </member>
        <member name="T:o2g.Types.ManagementNS.AttributeFilter">
            <summary>
            <c>AttributeFilter</c> represents the possible operation to apply to an attribute to build a filter.
            </summary>
            <seealso cref="T:o2g.Types.ManagementNS.Filter"/>
        </member>
        <member name="F:o2g.Types.ManagementNS.AttributeFilter.Equals">
            <summary>
            The attribute is equal to the value.
            </summary>
        </member>
        <member name="F:o2g.Types.ManagementNS.AttributeFilter.StartsWith">
            <summary>
            The attribute starts with the value.
            </summary>
        </member>
        <member name="F:o2g.Types.ManagementNS.AttributeFilter.EndsWith">
            <summary>
            The attributes ends with the value.
            </summary>
        </member>
        <member name="F:o2g.Types.ManagementNS.AttributeFilter.NotEquals">
            <summary>
            The attribute is not equals to the value.
            </summary>
        </member>
        <member name="F:o2g.Types.ManagementNS.AttributeFilter.GreatherThanOrEquals">
            <summary>
            The attribute is greather than or equals to the value.
            </summary>
        </member>
        <member name="F:o2g.Types.ManagementNS.AttributeFilter.LessThanOrEquals">
            <summary>
            The attribute is Less than or equals to the value.
            </summary>
        </member>
        <member name="T:o2g.Types.ManagementNS.Filter">
            <summary>
            <c>Filter</c> class represents a filter that can be used to query OmniPCX Enterprise Object instances.
            </summary>
            <example>
            The <c>Filter</c> class provides static method to build logical combination of simple filters.
            <code>
                Filter complex = Filter.And(
                                        Filter.Or(
                                            Filter.Create("Station_Type", AttributeFilter.Equals, "ANALOG"),
                                            Filter.Create("Station_Type", AttributeFilter.Equals, "ALE-300")
                                        ),
                                        Filter.Create("Directory_Name", OperationFilter.StartsWith, "f")
                                   );
            
            </code>
            </example>
        </member>
        <member name="P:o2g.Types.ManagementNS.Filter.Value">
            <summary>
            Return the value this filter apply
            </summary>
            <value>
            A <see langword="string"/> containing the value of this filter.
            </value>
        </member>
        <member name="M:o2g.Types.ManagementNS.Filter.Create(o2g.Types.ManagementNS.PbxAttribute,o2g.Types.ManagementNS.AttributeFilter,System.String)">
            <summary>
            Create a new filter with the specified attribute, operation and value.
            </summary>
            <param name="attribute">The attribute</param>
            <param name="operation">The operation.</param>
            <param name="value">The value to test.</param>
            <returns>
            The created <see cref="T:o2g.Types.ManagementNS.Filter"/> object.
            </returns>
            <seealso cref="M:o2g.Types.ManagementNS.Filter.Create(System.String,o2g.Types.ManagementNS.AttributeFilter,System.String)"/>
        </member>
        <member name="M:o2g.Types.ManagementNS.Filter.Create(System.String,o2g.Types.ManagementNS.AttributeFilter,System.String)">
            <summary>
            Create a new filter with the specified attribute name, operation and value.
            </summary>
            <param name="attrName">The attribute name.</param>
            <param name="operation">The operation.</param>
            <param name="value">The value to test.</param>
            <returns>
            The created <see cref="T:o2g.Types.ManagementNS.Filter"/> object.
            </returns>
            <example>
            <code>
                Filter aFilter = Filter.Create("Station_Type", AttributeFilter.Equals, "ANALOG");
            </code>
            </example>
        </member>
        <member name="M:o2g.Types.ManagementNS.Filter.And(o2g.Types.ManagementNS.Filter,o2g.Types.ManagementNS.Filter,o2g.Types.ManagementNS.Filter[])">
            <summary>
            Combine a set of filter with a logical And. 
            </summary>
            <param name="filter1">The first filter.</param>
            <param name="filter2">The second filter.</param>
            <param name="otherFilters">Other optional filters</param>
            <returns>
            A new <see cref="T:o2g.Types.ManagementNS.Filter"/> object that represents the logical And combination of the givern filters.
            </returns>
            <example>
            <code>
                Filter aFilter = Filter.And(
                                        Filter.Create("Station_Type", AttributeFilter.Equals, "ANALOG"),
                                        Filter.Create("Directory_Name", AttributeFilter.StartsWith, "B"));
            </code>
            </example>
        </member>
        <member name="M:o2g.Types.ManagementNS.Filter.Or(o2g.Types.ManagementNS.Filter,o2g.Types.ManagementNS.Filter,o2g.Types.ManagementNS.Filter[])">
            <summary>
            Combine a set of filter with a logical Or. 
            </summary>
            <param name="filter1">The first filter.</param>
            <param name="filter2">The second filter.</param>
            <param name="otherFilters">Other optional filters</param>
            <returns>
            A new <see cref="T:o2g.Types.ManagementNS.Filter"/> object that represents the logical Or combination of the givern filters.
            </returns>
            <example>
            <code>
                Filter aFilter = Filter.Or(
                                        Filter.Create("Station_Type", AttributeFilter.Equals, "ANALOG"),
                                        Filter.Create("Directory_Name", AttributeFilter.StartsWith, "B"));
            </code>
            </example>
        </member>
        <member name="T:o2g.Types.ManagementNS.Model">
            <summary>
            <c>Model</c> represents an object model.
            <para>
            It provides the detail of object attributes: 
            whether the attribute is mandatory/optional in the object creation, what range of value is authorized, what are the possible 
            enumeration value.
            </para>
            </summary>
        </member>
        <member name="P:o2g.Types.ManagementNS.Model.Attributes">
            <summary>
            Return the attributes of this object model
            </summary>
            <value>
            A <see cref="T:o2g.Utility.StringMap`1"/> object that represents the attributes of this object model.
            </value>
        </member>
        <member name="P:o2g.Types.ManagementNS.Model.Child">
            <summary>
            Return the child object models of this object model
            </summary>
            <value>
            A <see cref="T:o2g.Utility.StringMap`1"/> object that represents the child object models of this object model.
            </value>
        </member>
        <member name="P:o2g.Types.ManagementNS.Model.Name">
            <summary>
            Return the object name this <c>ObjectModel</c> describes.
            </summary>
            <value>
            The <see langword="string"/> value of the object name.
            </value>
        </member>
        <member name="P:o2g.Types.ManagementNS.Model.Hidden">
            <summary>
            Return wheter this object is hidden.
            </summary>
            <value>
            <see langword="true"/> if the object is hidden; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.ManagementNS.Model.Create">
            <summary>
            Return wheter this object can be created.
            </summary>
            <value>
            <see langword="true"/> if the object can be created; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.ManagementNS.Model.Delete">
            <summary>
            Return wheter this object can be deleted.
            </summary>
            <value>
            <see langword="true"/> if the object can be deleted; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.ManagementNS.Model.Set">
            <summary>
            Return wheter this object can be updated.
            </summary>
            <value>
            <see langword="true"/> if the object can be updated; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.ManagementNS.Model.Get">
            <summary>
            Return wheter this object can be read.
            </summary>
            <value>
            <see langword="true"/> if the object can be read; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.ManagementNS.Model.OtherActions">
            <summary>
            Return the list of other possible actions on this object.
            </summary>
            <value>
            A list of <see langword="string"/> that represents the other possible actions.
            </value>
        </member>
        <member name="M:o2g.Types.ManagementNS.Model.Find(System.Collections.Generic.List{System.String})">
            <summary>
            Find the model for the specified object.
            </summary>
            <param name="objectDefinition">The requested object definition</param>
            <returns>
            A <see cref="T:o2g.Types.ManagementNS.Model"/> object that represents the object model, or <see langword="null"/> if there is no such object in the model.
            </returns>
        </member>
        <member name="M:o2g.Types.ManagementNS.Model.GetMandatoryAttributes">
            <summary>
            Return the list of mandatory attributes.
            </summary>
            <returns>
            A list of <see cref="T:o2g.Types.ManagementNS.ModelAttribute"/> that represents the mandatory attributes for this object model.
            </returns>
        </member>
        <member name="T:o2g.Types.ManagementNS.OctetStringLength">
            <summary>
            <c>OctetStringLength</c> object represents a length constraint for an OctetString object.
            </summary>
        </member>
        <member name="P:o2g.Types.ManagementNS.OctetStringLength.Min">
            <summary>
            Return the minimal length.
            </summary>
            <value>
            An <see langword="int"/> value that represents the string minimal length.
            </value>
        </member>
        <member name="P:o2g.Types.ManagementNS.OctetStringLength.Max">
            <summary>
            Return the maximum length.
            </summary>
            <value>
            An <see langword="int"/> value that represents the string maximal length.
            </value>
        </member>
        <member name="T:o2g.Types.ManagementNS.ModelAttribute">
            <summary>
            <c>AttributeModel</c> represents an attribute in an OmniPCX Enterprise object model.
            </summary>
        </member>
        <member name="P:o2g.Types.ManagementNS.ModelAttribute.Name">
            <summary>
            Return the attribute name.
            </summary>
            <value>
            The <see langword="string"/> value of the attribute name.
            </value>
        </member>
        <member name="P:o2g.Types.ManagementNS.ModelAttribute.Mandatory">
            <summary>
            Return whether the attribute is mandatory.
            </summary>
            <value>
            <see langword="true"/> if the attribute is mandatory; <see langword="false"/> otherwise.
            </value>
            <remarks>
            A mandatory attribute is an Object identifier.
            </remarks>
        </member>
        <member name="P:o2g.Types.ManagementNS.ModelAttribute.Type">
            <summary>
            Return the attribute type.
            </summary>
            <value>
            A <see cref="T:o2g.Types.ManagementNS.AttributeType"/> value that represents this attribute type.
            </value>
        </member>
        <member name="P:o2g.Types.ManagementNS.ModelAttribute.MultiValue">
            <summary>
            Return whether the attribute is a list of values.
            </summary>
            <value>
            <see langword="true"/> if the attribute is a list; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.ManagementNS.ModelAttribute.AllowedValues">
            <summary>
            Return the list of allowed values for this attribute.
            </summary>
            <value>
            A list of <see langword="string"/> that represents the allowed values for this attribute.
            </value>
        </member>
        <member name="P:o2g.Types.ManagementNS.ModelAttribute.OctetStringLength">
            <summary>
            Return the maximum length of the attribute value when the attribute is an byte string.
            </summary>
            <value>
            A <see langword="int"/> value that is the maximum length of a byte string attribute.
            </value>
        </member>
        <member name="P:o2g.Types.ManagementNS.ModelAttribute.DefaultValue">
            <summary>
            Return the attribute default value.
            </summary>
            <value>
            A <see langword="string"/> value that is this attribute default value.
            </value>
        </member>
        <member name="P:o2g.Types.ManagementNS.ModelAttribute.Filtering">
            <summary>
            Return whether the attribute can be filtered.
            </summary>
            <value>
            <see langword="true"/> if the attribute can be filtered; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.ManagementNS.ModelAttribute.UsedWhen">
            <summary>
            Return in which context this attribute is used.
            </summary>
            <value>
            A <see langword="string"/> that indicate when this attribute can be used.
            </value>
        </member>
        <member name="T:o2g.Types.ManagementNS.Pbx">
            <summary>
            <c>Pbx</c> represents basic information of a Pbx (OmniPCX Enterprise).
            </summary>
            <remarks>In an OmniPcx Enterprise sub-network, each OXE node is identifier by a unique node id.</remarks>
        </member>
        <member name="P:o2g.Types.ManagementNS.Pbx.NodeId">
            <summary>
            Return the OmniPcx Enterprise node id.
            </summary>
            <value>The integer that represents the node id.</value>
        </member>
        <member name="P:o2g.Types.ManagementNS.Pbx.Fqdn">
            <summary>
            Return the OmniPCX Enterprise node Fqdn.
            </summary>
            <value>
            A <see langword="string"/> value that reprsents the OXE node Fqdn.
            </value>
        </member>
        <member name="T:o2g.Types.ManagementNS.PbxAttribute">
            <summary>
            <c>PbxAttribute</c> class represents an attribute in a <see cref="T:o2g.Types.ManagementNS.PbxObject"/>.
            <para>
            A PbxAttribute can be of the following type:
            <h3>Integer</h3>
            An Integer value is equivalent to an <see langword="int"/> value.
            
            <h3>Boolean</h3>
            A Boolean value is equivalent to an <see langword="bool"/> value.
            
            <h3>Enumerated</h3>
            An enumerated value can have a limited set of possible values. <c>PbxAttribute</c> treats enumerated value as <see langword="string"/> value.
            
            <h3>OctetString, ByteString</h3>
            An OctetString or a ByteString are equivalent to a <see langword="string"/>.
            
            <h3>Sequence</h3>
            A Sequence is a structured data whose attribute member have a specific name and type: For exemple
            <pre>
               Skill := Sequence {
                  Skill_Nb := Integer,
                  Skill_Level := Integer,
                  Skill_Activate := Boolean
               }
            </pre>
            
            <h3>Set</h3>
            A Set value is a list of attributes of the same type. It can be a list of simple value like:
            <pre>
               SimpleSet := Set {
                  Item := OctetString
               }
            </pre>
            or a list of sequences:
            <pre>
               SkillSet := Set { 
                  Item := Sequence {
                     Skill_Nb := Integer,
                     Skill_Level := Integer,
                     Skill_Activate := Boolean
                  }
               }
            </pre>
            </para>
            </summary>
            <remarks>
            <para>
            <c>PbxAttribute</c> provide conversion method to usual C# types. The conversion is 
            controlled "at the best", but it can not check all the possible error case. An Enumerated value and an OctetString value can
            both be converted to a <see langword="string"/>.
            </para>
            <para>
            When a conversion error is detected, a <see cref="T:System.FormatException"/> exception is raised.
            </para>
            </remarks>
        </member>
        <member name="P:o2g.Types.ManagementNS.PbxAttribute.Name">
            <summary>
            Return the name of this attribute.
            </summary>
            <value>
            A <see langword="string"/> value that represents the attribute name.
            </value>
        </member>
        <member name="M:o2g.Types.ManagementNS.PbxAttribute.Create(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Create a new <c>PbxAttribute</c> of type sequence with the specified strings.
            </summary>
            <param name="attrName">The attribute name.</param>
            <param name="values">The list of string</param>
            <returns>The created <see cref="T:o2g.Types.ManagementNS.PbxAttribute"/> object.</returns>
        </member>
        <member name="M:o2g.Types.ManagementNS.PbxAttribute.Create(System.String,System.String)">
            <summary>
            Create a new <c>PbxAttribute</c> of the <see langword="string"/> type.
            </summary>
            <param name="attrName">The attribute name.</param>
            <param name="value">The string value.</param>
            <returns>The created <see cref="T:o2g.Types.ManagementNS.PbxAttribute"/> object.</returns>
            <example>
            <code>
                PbxAttribute simple = PbxAttribute.Create("AttrName", "a string value");
            </code>
            </example>
        </member>
        <member name="M:o2g.Types.ManagementNS.PbxAttribute.Create(System.String,System.Boolean)">
            <summary>
            Create a new <c>PbxAttribute</c> of the <see langword="bool"/> type.
            </summary>
            <param name="attrName">The attribute name.</param>
            <param name="value">The boolean value.</param>
            <returns>The created <see cref="T:o2g.Types.ManagementNS.PbxAttribute"/> object.</returns>
            <example>
            <code>
                PbxAttribute simple = PbxAttribute.Create("AttrName", true);
            </code>
            </example>
        </member>
        <member name="M:o2g.Types.ManagementNS.PbxAttribute.Create(System.String,o2g.Types.ManagementNS.PbxAttributeMap)">
            <summary>
            Create a new <c>PbxAttribute</c> with the specified sequence.
            </summary>
            <param name="attrName">The attribute name.</param>
            <param name="sequence">The sequence value.</param>
            <returns>The created <see cref="T:o2g.Types.ManagementNS.PbxAttribute"/> object.</returns>
            <example>
            <code>
                PbxAttribute sequence = PbxAttribute.Create("sequence", 
                        PbxAttributeMap.Create(new List&lt;PbxAttribute&gt;() 
                        {
                            PbxAttribute.Create("Elem1", true),
                            PbxAttribute.Create("Elem2", 23)
                        }); 
            </code>
            </example>
        </member>
        <member name="M:o2g.Types.ManagementNS.PbxAttribute.Create(System.String,System.Collections.Generic.List{o2g.Types.ManagementNS.PbxAttributeMap})">
            <summary>
            Create a new <c>PbxAttribute</c> with the specified list of sequences.
            </summary>
            <param name="attrName">The attribute name.</param>
            <param name="sequences">The list of sequences</param>
            <returns>The created <see cref="T:o2g.Types.ManagementNS.PbxAttribute"/> object.</returns>
            <exemple>
            <code>
                PbxAttribute skillSet = PbxAttribute.Create("skillSet", new List&lt;PbxAttributeMap&gt;() 
                {
                    PbxAttributeMap.Create(new List&lt;PbxAttribute&gt;()
                    {
                        PbxAttribute.Create("Skill_nb", 21),
                        PbxAttribute.Create("Skill_Level", 2),
                        PbxAttribute.Create("Skill_Activate", true)
                    },
                    PbxAttributeMap.Create(new List&lt;PbxAttribute&gt;()
                        PbxAttribute.Create("Skill_nb", 22),
                        PbxAttribute.Create("Skill_Level", 1),
                        PbxAttribute.Create("Skill_Activate", true)
                    }
                });
            </code>
            </exemple>
        </member>
        <member name="M:o2g.Types.ManagementNS.PbxAttribute.Create(System.String,System.Int32)">
            <summary>
            Create a new <c>PbxAttribute</c> of the <see langword="int"/> type.
            </summary>
            <param name="attrName">The attribute name.</param>
            <param name="value">The integer value.</param>
            <returns>The created <see cref="T:o2g.Types.ManagementNS.PbxAttribute"/> object.</returns>
            <example>
            <code>
                PbxAttribute simple = PbxAttribute.Create("AttrName", 10);
            </code>
            </example>
        </member>
        <member name="P:o2g.Types.ManagementNS.PbxAttribute.Item(System.Int32)">
            <summary>
            Return the attributes set at the specified index.
            </summary>
            <param name="index">The index of the attributes set.</param>
            <value>
            A <see cref="T:o2g.Types.ManagementNS.PbxAttributeMap"/> that represents the attribute sets
            </value>
            <exception cref="T:System.FormatException">If the attribute is not a Set attribute.</exception>
            <remarks>
            This method is used when the attribute is a set of sequences. 
            </remarks>
            <exemple>
            for exemple the SkillSet attribute in object ACD2_Operator_data:
            <pre>
              SkillSet := Set
                [
                  Sequence 
                    {
                      Skill_Level := Integer
                      Skill_Nb := Integer
                      Skill_Activate := Boolean
                    }
                ]
            </pre>
            <code>
                PbxAttribute attr = pbxObject.Attribute["SkillSet"];
                int skillLevel = attr[0]["Skill_Level"].AsInt();
            </code>
            </exemple>
                    
        </member>
        <member name="M:o2g.Types.ManagementNS.PbxAttribute.AsAttributeMap">
            <summary>
            Return the value of this attribute as a sequence of attributes.
            </summary>
            <returns>
            The <see cref="T:o2g.Types.ManagementNS.PbxAttributeMap"/> object that reprepresents this attribute sequence value.
            </returns>
        </member>
        <member name="M:o2g.Types.ManagementNS.PbxAttribute.AsListOfMaps">
            <summary>
            Return the value of this attribute as a list of <see cref="T:o2g.Types.ManagementNS.PbxAttributeMap"/>.
            
            </summary>
            <returns>A list of <see cref="T:o2g.Types.ManagementNS.PbxAttributeMap"/> objects that represents a set of sequences.</returns>
        </member>
        <member name="M:o2g.Types.ManagementNS.PbxAttribute.AsList``1">
            <summary>
            Return the value of this attribute as a list of parameters.
            </summary>
            <typeparam name="T">The type of elements in the list</typeparam>
            <returns>
            A list of parameters of type T.
            </returns>
            <remarks>
            This method accept conversion to the base types, <see langword="string"/>, <see langword="int"/>, <see langword="bool"/>.
            </remarks>
            <exception cref="T:System.InvalidCastException">In case of an impossible format conversion</exception>
        </member>
        <member name="M:o2g.Types.ManagementNS.PbxAttribute.AsBool">
            <summary>
            Return the value of this attribute as a boolean.
            </summary>
            <returns>
            The <see langword="bool"/> value that corresponds to this attribute value.
            </returns>
            <exception cref="T:System.FormatException">If the attribute can't be converted to a boolean value.</exception>
        </member>
        <member name="M:o2g.Types.ManagementNS.PbxAttribute.Set(System.Boolean)">
            <summary>
            Set this attribute an <see langword="bool"/> value.
            </summary>
            <param name="value">The value.</param>
            <remarks>
            Caution, there is no control on the attribute type.
            </remarks>
        </member>
        <member name="M:o2g.Types.ManagementNS.PbxAttribute.AsInt">
            <summary>
            Return the value of this attribute as an integer.
            </summary>
            <returns>
            The <see langword="int"/> value that corresponds to this attribute value.
            </returns>
            <exception cref="T:System.FormatException">If the attribute can't be converted to an int value.</exception>
        </member>
        <member name="M:o2g.Types.ManagementNS.PbxAttribute.Set(System.Int32)">
            <summary>
            Set this attribute an <see langword="int"/> value.
            </summary>
            <param name="value">The value.</param>
            <remarks>
            Caution, there is no control on the attribute type.
            </remarks>
        </member>
        <member name="M:o2g.Types.ManagementNS.PbxAttribute.AsString">
            <summary>
            Return the value of this attribute as a string.
            </summary>
            <returns>
            The <see langword="string"/> value that corresponds to this attribute value.
            </returns>
            <exception cref="T:System.FormatException">If the attribute can't be converted to a string value.</exception>
        </member>
        <member name="M:o2g.Types.ManagementNS.PbxAttribute.Set(System.String)">
            <summary>
            Set this attribute a <see langword="string"/> value.
            </summary>
            <param name="value">The value.</param>
            <remarks>
            Caution, there is no control on the attribute type.
            </remarks>
        </member>
        <member name="M:o2g.Types.ManagementNS.PbxAttribute.AsEnum">
            <summary>
            Return the value of this attribute as a string that represent the enumerated value.
            </summary>
            <returns>
            The <see langword="string"/> value that corresponds to this enumerated value.
            </returns>
            <exception cref="T:System.FormatException">If the attribute can't be converted to a string value.</exception>
        </member>
        <member name="T:o2g.Types.ManagementNS.PbxAttributeMap">
            <summary>
            <c>PbxAttributeMap</c> represents a sequence of named attributes.
            </summary>
            <seealso cref="T:o2g.Types.ManagementNS.PbxAttribute"/>
        </member>
        <member name="P:o2g.Types.ManagementNS.PbxAttributeMap.Names">
            <summary>
            Return the list of attribute name in this sequence.
            </summary>
            <value>
            A list of <see langword="string"/> that represents the name.
            </value>
        </member>
        <member name="P:o2g.Types.ManagementNS.PbxAttributeMap.Item(System.String)">
            <summary>
            Return the Attribute with the given name.
            </summary>
            <param name="name">The attribute name</param>
            <value>
            A <see cref="T:o2g.Types.ManagementNS.PbxAttribute"/> that corresponds to the attribute with the given name or <see langword="null"/> if there is
            no attribute with this name.
            </value>
            <example>
            <code>
                PbxAttributeMap skillSequence = ...
               
                PbxAttribute attr = skillSequence["Skill_nb"]
            </code>
            </example>
        </member>
        <member name="M:o2g.Types.ManagementNS.PbxAttributeMap.Add(o2g.Types.ManagementNS.PbxAttribute)">
            <summary>
            Add an attribute to this sequence.
            </summary>
            <param name="value">The <see cref="T:o2g.Types.ManagementNS.PbxAttribute"/> object value to add to the sequence.</param>
            <returns>
            The sequence this attribute has been added to.
            </returns>
            <remarks>
            It's possible to chain the <c>Add</c> to create a complete sequence.
            <exemple>
            <code>
                attrList.Add(PbxAttribute.Create("Name", PbxAttributeMap.Create()
                                                            .Add(PbxAttribute.Create("Elem1", true))
                                                            .Add(PbxAttribute.Create("Elem2", 23))));
            </code>
            </exemple>
            </remarks>
        </member>
        <member name="M:o2g.Types.ManagementNS.PbxAttributeMap.Create">
            <summary>
            Create a new empty PbxAttributeMap.
            </summary>
            <returns>
            The new created <see cref="T:o2g.Types.ManagementNS.PbxAttributeMap"/> object.
            </returns>
            <remarks>
            Use this method to create a new sequence of attribute. For exemple:
            <pre>
               Sequence {
                  Param1 := Integer,
                  Param2 := Boolean
               }
            </pre>
            </remarks>
            <example>
            <code>
                PbxAttributeMap sequence = 
                    PbxAttributeMap.Create()
                            .Add(PbxAttribute.Create("Param1", 1))
                            .Add(PbxAttribute.Create("Param2", true));
            </code>
            </example>
        </member>
        <member name="M:o2g.Types.ManagementNS.PbxAttributeMap.Create(System.Collections.Generic.List{o2g.Types.ManagementNS.PbxAttribute})">
            <summary>
            Create a new PbxAttributeMap with the specified attribute list.
            </summary>
            <param name="attributes">the list of attributes</param>
            <returns>
            The new created <see cref="T:o2g.Types.ManagementNS.PbxAttributeMap"/> object.
            </returns>
            <remarks>
            Use this method to create a new sequence of attribute. For exemple:
            <pre>
               Sequence {
                  Param1 := Integer,
                  Param2 := Boolean
               }
            </pre>
            </remarks>
            <example>
            <code>
                PbxAttributeMap sequence = 
                    PbxAttributeMap.Create(new List&lt;PbxAttribute&gt;
                    {
                        PbxAttribute.Create("Param1", 1),
                        PbxAttribute.Create("Param2", true)
                    });
            </code>
            </example>
        </member>
        <member name="M:o2g.Types.ManagementNS.PbxAttributeMap.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:o2g.Types.ManagementNS.PbxObject">
            <summary>
            <c>PbxObject</c> represents an object of the OmniPCX Enterprise object model.
            </summary>
            <remarks>
            A <c>PbxObject</c> is referenced by it's object instance definition, a hierarchical path from the root object, and a unique instance id.<br/>
            For exemple:
            <list type="table">
            <listheader><term>objectInstanceDefinition</term><description>Description</description></listheader>
            <item>
                <term>"Subscriber"</term><description>A Subscriber object.</description>
            </item>
            <item>
                <term>"Application_Configuration/1/ACD2/1/ACD2_Operator/1/ACD2_Operator_data"</term><description>A CCD operator data object.</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="P:o2g.Types.ManagementNS.PbxObject.Attributes">
            <summary>
            Return this object attributes.
            </summary>
            <value>
            A <see cref="T:o2g.Utility.MutableStringMap`1"/> object that represents this object attributes.
            </value>
        </member>
        <member name="P:o2g.Types.ManagementNS.PbxObject.ObjectName">
            <summary>
            Return this object name.
            </summary>
            <value>
            A <see langword="string"/> that represents this object name. Exemple "Subscriber".
            </value>
        </member>
        <member name="P:o2g.Types.ManagementNS.PbxObject.Id">
            <summary>
            Return this object instance Identifier.
            </summary>
            <value>
            A <see langword="string"/> that represents this object instance unique identifier.
            </value>
        </member>
        <member name="P:o2g.Types.ManagementNS.PbxObject.ObjectNames">
            <summary>
            Return the list of sub-objects.
            </summary>
            <value>
            A list of <see langword="string"/> that represents the name of the sub-objects.
            </value>
        </member>
        <member name="P:o2g.Types.ManagementNS.PbxObject.Delete">
            <summary>
            Return wheter this object can be deleted.
            </summary>
            <value>
            <see langword="true"/> if the object can be deleted; <see langword="false"/> otherwise.
            </value>
            <remarks>
            <c>Delete</c> equal to <see langword="true"/> means the Delete operation can be invoked, but not that it will succeed.
            </remarks>
            <seealso cref="M:o2g.IPbxManagement.DeleteObjectAsync(System.Int32,System.String,System.String,System.Boolean)"/>
        </member>
        <member name="P:o2g.Types.ManagementNS.PbxObject.Set">
            <summary>
            Return wheter this object can be modified.
            </summary>
            <value>
            <see langword="true"/> if the object can be modified; <see langword="false"/> otherwise.
            </value>
            <remarks>
            <c>Delete</c> equal to <see langword="true"/> means the Set operation can be invoked, but not that it will succeed.
            </remarks>
            <seealso cref="M:o2g.IPbxManagement.SetObjectAsync(System.Int32,System.String,System.String,System.Collections.Generic.List{o2g.Types.ManagementNS.PbxAttribute})"/>
        </member>
        <member name="T:o2g.Types.ManagementNS.PbxObjectDefinition">
            <summary>
            <c>PbxObjectDefinition</c> represent an OmniPCX Enterprise object definition.
            </summary>
        </member>
        <member name="P:o2g.Types.ManagementNS.PbxObjectDefinition.ObjectName">
            <summary>
            Return the object instance name.
            </summary>
            <value>
            A <see langword="string"/> that represents the object instance definition.
            </value>
        </member>
        <member name="P:o2g.Types.ManagementNS.PbxObjectDefinition.ObjectId">
            <summary>
            Return the object instance identifier.
            </summary>
            <value>
            A <see langword="string"/> that represents the object instance identifier.
            </value>
        </member>
        <member name="T:o2g.Types.MessagingNS.MailBox">
            <summary>
            <c>MailBox</c> class represents a mail box in a voice mail system. A voice mail is assigned to a user.
            </summary>
        </member>
        <member name="T:o2g.Types.MessagingNS.MailBox.MailBoxCapabilities">
            <summary>
            <c>MailBoxCapabilities</c> represents the capabilities of the voice mail.
            </summary>
        </member>
        <member name="P:o2g.Types.MessagingNS.MailBox.MailBoxCapabilities.ListMessages">
            <summary>
            Return whether the voicemail server can return the list of messages.
            </summary>
            <value>
            <see langword="true"/> if the voicemail server can return the list of messages; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.MessagingNS.MailBox.MailBoxCapabilities.GetMessages">
            <summary>
            Return wheather the voice messages can be downloaded.
            </summary>
            <value>
            <see langword="true"/> if the voice messages can be downloaded; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.MessagingNS.MailBox.MailBoxCapabilities.GetRecord">
            <summary>
            Return whether the recorded message can be downloaded.
            </summary>
            <value>
            <see langword="true"/> if the recorded message can be downloaded; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.MessagingNS.MailBox.MailBoxCapabilities.Play">
            <summary>
            Return whether the voicemail server can play voice messages.
            </summary>
            <value>
            <see langword="true"/> if the voicemail server can play voice messages; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.MessagingNS.MailBox.MailBoxCapabilities.Pause">
            <summary>
            Return whether a played voice message can be paused and resumes from the position it has been paused.
            </summary>
            <value>
            <see langword="true"/> if a playing voice message can be paused; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.MessagingNS.MailBox.MailBoxCapabilities.Hangup">
            <summary>
            Return whether the media session can be terminate.
            </summary>
            <value>
            <see langword="true"/> if the media session can be terminate; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.MessagingNS.MailBox.MailBoxCapabilities.Record">
            <summary>
            Return whether the voicemail server can record voice messages.
            </summary>
            <value>
            <see langword="true"/> if the voicemail server can record voice messages; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.MessagingNS.MailBox.MailBoxCapabilities.Resume">
            <summary>
            Return wheter a voice message can be resumed to the position it has been paused.
            </summary>
            <value>
            <see langword="true"/> if the voice message can be resumed; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.MessagingNS.MailBox.MailBoxCapabilities.Cancel">
            <summary>
            Return whether the current recording can be cancelled.
            </summary>
            <value>
            <see langword="true"/> if the current recording can be cancelled; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.MessagingNS.MailBox.MailBoxCapabilities.Forward">
            <summary>
            Return wheter the voicemail server can forward voice messages.
            </summary>
            <value>
            <see langword="true"/> if the voicemail server can forward voice messages; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.MessagingNS.MailBox.MailBoxCapabilities.Callback">
            <summary>
            Return whether the voicemail server can call back the originator of the voice message.
            </summary>
            <value>
            <see langword="true"/> if the voicemail server can call back the originator of the voice message; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.MessagingNS.MailBox.MailBoxCapabilities.Send">
            <summary>
            Return whether a voice message or a record can be sent to recipients.
            </summary>
            <value>
            <see langword="true"/> if a voice message or a record can be sent to recipients; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.MessagingNS.MailBox.MailBoxCapabilities.Events">
            <summary>
            Return whether the voicemail server can send events in case of message deposit / removal.
            </summary>
            <value>
            <see langword="true"/> if the voicemail server can send events in case of message deposit / removal; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.MessagingNS.MailBox.Id">
            <summary>
            Return this mail box identifier.
            </summary>
            <value>
            A unique <see langword="string"/> identifying the mail box.
            </value>
        </member>
        <member name="P:o2g.Types.MessagingNS.MailBox.Name">
            <summary>
            Return this mail box name.
            </summary>
            <value>
            A <see langword="string"/> that represents mail box name
            </value>
        </member>
        <member name="P:o2g.Types.MessagingNS.MailBox.Capabilities">
            <summary>
            Return this mail box capabilities.
            </summary>
            <value>
            A <see cref="T:o2g.Types.MessagingNS.MailBox.MailBoxCapabilities"/> object that gives this mail box capabilities.
            </value>
        </member>
        <member name="T:o2g.Types.MessagingNS.MailBoxInfo">
            <summary>
            <c>MailBoxInfo</c> provides information on the mail box the user is connected on.
            </summary>
            <seealso cref="M:o2g.IMessaging.GetMailboxInfoAsync(System.String,System.String,System.String)"/>
        </member>
        <member name="P:o2g.Types.MessagingNS.MailBoxInfo.TotalVoiceMsg">
            <summary>
            Get the total number of messages in this voice mail box.
            </summary>
            <value>
            The number of messages stored in the voice mail box.
            </value>
        </member>
        <member name="P:o2g.Types.MessagingNS.MailBoxInfo.NewVoiceMsg">
            <summary>
            Get the number of new messages in this voice mail box.
            </summary>
            <value>
            The number of new messages stored in the voice mail box.
            </value>
        </member>
        <member name="P:o2g.Types.MessagingNS.MailBoxInfo.StorageUsage">
            <summary>
            Get the mail box usage.
            </summary>
            <value>
            Threshold indicating mailbox usage ratio. 100 mean 100% full. No more message deposit is allowed. -1 means information not available.
            </value>
        </member>
        <member name="T:o2g.Types.MessagingNS.VoiceMessage">
            <summary>
            <c>VoiceMessage</c> represents a message stored in a voice Mail box.
            </summary>
            <see cref="T:o2g.Types.MessagingNS.MailBoxInfo"></see>
        </member>
        <member name="P:o2g.Types.MessagingNS.VoiceMessage.VoicemailId">
            <summary>
            This propery gives the unique identifier of this message.
            </summary>
            <value>
            A string value that identify the message.
            </value>
        </member>
        <member name="P:o2g.Types.MessagingNS.VoiceMessage.From">
            <summary>
            This property is <see cref="T:o2g.Types.CommonNS.PartyInfo"/> that deposited this voice mail.
            </summary>
            <value>
            A <see cref="T:o2g.Types.CommonNS.PartyInfo"/> object.
            </value>
        </member>
        <member name="P:o2g.Types.MessagingNS.VoiceMessage.Duration">
            <summary>
            This property gives the duration of this message.
            </summary>
            <value>
            The message duration in seconds.
            </value>
        </member>
        <member name="P:o2g.Types.MessagingNS.VoiceMessage.Date">
            <summary>
            This property gives the date and time the message has been deposited.
            </summary>
            <value>
            A <see cref="P:o2g.Types.MessagingNS.VoiceMessage.Date"/> object represnting the time the message has been deposited.
            </value>
        </member>
        <member name="P:o2g.Types.MessagingNS.VoiceMessage.Unread">
            <summary>
            This property indicates whether the message has been read.
            </summary>
            <value>
            <see langword="true"/> if the message is unread; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.MessagingNS.VoiceMessage.HighPriority">
            <summary>
            This property indicates whether the message has been tagged as urgent.
            </summary>
            <value>
            <see langword="true"/> if the message is urgent; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="T:o2g.Types.PhoneSetProgrammableNS.DeviceKey">
            <summary>
            <c>DeviceKey</c> class represents the base class for key on an OmniPCX Enterprise device.
            </summary>
        </member>
        <member name="P:o2g.Types.PhoneSetProgrammableNS.DeviceKey.Position">
            <summary>
            Return the key position on the device.
            </summary>
            <value>
            An <see langword="int"/> value that represents the key position.
            </value>
        </member>
        <member name="P:o2g.Types.PhoneSetProgrammableNS.DeviceKey.Number">
            <summary>
            Return the phone number associated to this key.
            </summary>
            <value>
            A <see langword="string"/> value that represents the phone number associated to this key.
            </value>
        </member>
        <member name="P:o2g.Types.PhoneSetProgrammableNS.DeviceKey.Mnemonic">
            <summary>
            Return the mnemonic associated to this key.
            </summary>
            <value>
            A <see langword="string"/> value that represents the mnemonic associated to this key.
            </value>
        </member>
        <member name="T:o2g.Types.PhoneSetProgrammableNS.DynamicState">
            <summary>
            <c>DynamicState</c> represents the dynamic state of a device. This state provide information on the associate, and the locked and campon state.
            </summary>
        </member>
        <member name="P:o2g.Types.PhoneSetProgrammableNS.DynamicState.Lock">
            <summary>
            Return whether the device is locked.
            </summary>
            <value>
            <see langword="true"/> if the device is locked; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.PhoneSetProgrammableNS.DynamicState.Campon">
            <summary>
            Return whether the camp on is activated.
            </summary>
            <value>
            <see langword="true"/> if the camp on is activated; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.PhoneSetProgrammableNS.DynamicState.Associate">
            <summary>
            Return the associated phone number.
            </summary>
            <value>
            A <see langword="string"/> that represents the associate phone numnber or <see langword="null"/> if there is no associate.
            </value>
        </member>
        <member name="T:o2g.Types.PhoneSetProgrammableNS.Pin">
            <summary>
            <c>Pin</c> class represents a PIN (Personal Identification Number)
            </summary>
            <remarks>
            <para>
            This service allows the user to announce that the call he is making is a personal (external) call and not a business call. 
            Using pulse metering tickets, the company is then able to invoice this call again as a personal call.
            </para>
            <para>
            This service can be applied to local users (employees) or visitors (in this case, the created user set is a virtual set without a physical address). 
            </para>
            <para>
            To use this service, users must dial the personal prefix followed by the PIN No. and then the secret code followed by the external number. 
            </para>
            <para>
            The Personal Identification Number is private and secret; only the administrator and, in certain cases, the pulse metering administrator may know it.
            </para>
            </remarks>
        </member>
        <member name="T:o2g.Types.PhoneSetProgrammableNS.Pin.PinControl">
            <summary>
            The type of access this PIN code provide.
            </summary>
        </member>
        <member name="F:o2g.Types.PhoneSetProgrammableNS.Pin.PinControl.ByCategory">
            <summary>
            PIN code can be used from any set according to categories.
            </summary>
        </member>
        <member name="F:o2g.Types.PhoneSetProgrammableNS.Pin.PinControl.RestrictedToOwner">
            <summary>
            PIN code is restricted to the users set.
            </summary>
        </member>
        <member name="F:o2g.Types.PhoneSetProgrammableNS.Pin.PinControl.UniversalAccess">
            <summary>
            PIN code can be used on any set in the system.
            </summary>
        </member>
        <member name="F:o2g.Types.PhoneSetProgrammableNS.Pin.PinControl.ByGroup">
            <summary>
            PIN code is limited to specific group.
            </summary>
        </member>
        <member name="P:o2g.Types.PhoneSetProgrammableNS.Pin.Number">
            <summary>
            Return the PIN number.
            </summary>
            <value>
            A <see langword="string"/> value that represents the PIN number.
            </value>
        </member>
        <member name="P:o2g.Types.PhoneSetProgrammableNS.Pin.WithSecretCode">
            <summary>
            Return whether the PIN code request to be validated by the user secret code.
            </summary>
            <value>
            <see langword="true"/> if the secret code is requested; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.PhoneSetProgrammableNS.Pin.Control">
            <summary>
            Return the access control this PIN code provide.
            </summary>
            <value>
            A <see cref="T:o2g.Types.PhoneSetProgrammableNS.Pin.PinControl"/> that represents the PIN access control.
            </value>
        </member>
        <member name="P:o2g.Types.PhoneSetProgrammableNS.Pin.Group">
            <summary>
            Return the PIN group associatde to this PIN code.
            </summary>
            <value>
            An <see langword="int"/> value that represents the PIN group, or -1 if the PIN group is not associated to a group.
            </value>
        </member>
        <member name="T:o2g.Types.PhoneSetProgrammableNS.ProgrammableKey">
            <summary>
            <c>ProgrammableKey</c> class represents a programmable key on an OmniPCX Enterprise device.
            </summary>
        </member>
        <member name="P:o2g.Types.PhoneSetProgrammableNS.ProgrammableKey.Locked">
            <summary>
            Return whether this key is locked.
            </summary>
            <value>
            <see langword="true"/> if the key is locked; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="T:o2g.Types.PhoneSetProgrammableNS.SoftKey">
            <summary>
            <c>SoftKey</c> class represents a software key on an OmniPcx Enterprise device.
            </summary>
        </member>
        <member name="T:o2g.Types.RestErrorInfo">
            <summary>
            <c>ErrorInfo</c> gives the detail information on an error raised during a service invocation.
            </summary>
            <remarks>
            Most of the O2G services return the following code in case of error:
            <list type="table">
                <listheader><term>Code</term><description>Description</description></listheader>
                <item><term>400</term><description>Bad Request</description></item>
                <item><term>403</term><description>Forbidden</description></item>
                <item><term>404</term><description>Not Found</description></item>
                <item><term>500</term><description>Internal Server Error</description></item>
                <item><term>503</term><description>Service Unavailable</description></item>
            </list>
            </remarks>
        </member>
        <member name="T:o2g.Types.RestErrorInfo.RoutingErrorInfo">
            <summary>
            <c>RoutingErrorInfo</c> class provides complementary information in case of an error in the <see cref="T:o2g.IRouting"/> service.
            </summary>
        </member>
        <member name="T:o2g.Types.RestErrorInfo.RoutingErrorInfo.RoutingErrorType">
            <summary>
            <c>RoutingErrorType</c> represents the different type of routing errors.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.RoutingErrorInfo.RoutingErrorType.Unknown">
            <summary>
            Unknown routing error.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.RoutingErrorInfo.RoutingErrorType.BadParameterValue">
            <summary>
            The routing service has rejected the request for a bad or missing parameter reason.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.RoutingErrorInfo.RoutingErrorType.Unauthorized">
            <summary>
            Routing service request has been rejected because of limitation configured on the concerned user. For examples:
            <list type="bullet">
            <item><description>Overflow on busy is not allowed (barring limitation).</description></item>
            <item><description>Cancel overflow is not allowed: (barring limitation).</description></item>
            <item><description>Phone number to other destination is not authorized (dial plan limitation).</description></item>
            </list>
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.RoutingErrorInfo.RoutingErrorType.InvalidOperation">
            <summary>
            Requested operation is not supported by the routing service.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.RoutingErrorInfo.RoutingErrorType.IncompletePhoneNumber">
            <summary>
            The provided phone number can not be fully resolved in the current dial plan. For example:
            <list type="bullet">
            <item><description>Setting route with a destination type Other, containing a partially matching number (e.g. 3253 instead of 32535).</description></item>
            </list>
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.RoutingErrorInfo.RoutingErrorType.UnknownPhoneNumber">
            <summary>
            The provided phone number can not be resolved in the current dial plan. For example:
            <list type="bullet">
            <item><description>Setting route with a destination type NUMBER, containing an unknown number.</description></item>
            </list>
            </summary>
        </member>
        <member name="T:o2g.Types.RestErrorInfo.RoutingErrorInfo.RoutingErrorCause">
            <summary>
            <c>RoutingErrorCause</c> represents the differents routing error causes.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.RoutingErrorInfo.RoutingErrorCause.Unknown">
            <summary>
            Unknown routing error cause.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.RoutingErrorInfo.RoutingErrorCause.BadPhoneNumberFormat">
            <summary>
            The phone number does not comply with formating rules. For examples:
            <list type="bullet">
            <item><description>The phone number does not respect the following regular expression: [+]?[0-9A-D*#\\(\\) ]{1,49}.</description></item>
            </list>
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.RoutingErrorInfo.RoutingErrorCause.InvalidCurrentDevice">
            <summary>
            The given device number as current device is not valid. For examples:
            <list type="bullet">
            <item><description>The device is not in an acceptable state to be used.</description></item>
            </list>
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.RoutingErrorInfo.RoutingErrorCause.InvalidForwardRoute">
            <summary>
            The given forward route is not valid. For examples:
            <list type="bullet">
            <item><description>The forwarded destination type is not one of VOICEMAIL or NUMBER.</description></item>
            <item><description>The forwarded destination is not acceptable.</description></item>
            <item><description>A loop in the forward chain has been detected.</description></item>
            </list>
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.RoutingErrorInfo.RoutingErrorCause.InvalidOverflowRoute">
            <summary>
            The given overflow route is not valid. For examples:
            <list type="bullet">
            <item><description>The overflow destination is not acceptable.</description></item>
            </list>
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.RoutingErrorInfo.RoutingErrorCause.NullOrEmptyParameter">
            <summary>
            Parameter must not be null nor empty.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.RoutingErrorInfo.RoutingErrorCause.NullParameter">
            <summary>
            Parameter must not be null.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.RoutingErrorInfo.RoutingErrorCause.UnauthorizedCancelOverflow">
            <summary>
            Cancel overflow has been rejected because of barring rules.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.RoutingErrorInfo.RoutingErrorCause.UnauthorizedNotAUser">
            <summary>
            The destination type is set to USER, but the number does not correspond to a user.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.RoutingErrorInfo.RoutingErrorCause.UnauthorizedOverflow">
            <summary>
            Overflow has been rejected because of barring rules.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.RoutingErrorInfo.RoutingErrorCause.UnauthorizedPhoneNumber">
            <summary>
            The given phone number is unauthorized. For examples:
            <list type="bullet">
            <item><description>Barring as rejected the number.</description></item>
            <item><description>The destination can not be a service number.</description></item>
            <item><description>The destination is a voicemail, but user has no rights to use it.</description></item>
            </list>
            </summary>
        </member>
        <member name="P:o2g.Types.RestErrorInfo.RoutingErrorInfo.ErrorType">
            <summary>
            Return the routing error type.
            </summary>
            <value>
            A <see cref="T:o2g.Types.RestErrorInfo.RoutingErrorInfo.RoutingErrorType"/> value that represents the routing error type.
            </value>
        </member>
        <member name="P:o2g.Types.RestErrorInfo.RoutingErrorInfo.ErrorCause">
            <summary>
            Return the probable routing error cause.
            </summary>
            <value>
            A <see cref="T:o2g.Types.RestErrorInfo.RoutingErrorInfo.RoutingErrorCause"/> value that represents the routing error cause.
            </value>
        </member>
        <member name="P:o2g.Types.RestErrorInfo.RoutingErrorInfo.Message">
            <summary>
            Return an additional textual error information provided by the routing service.
            </summary>
            <value>
            A <see langword="string"/> message providing additional information.
            </value>
        </member>
        <member name="T:o2g.Types.RestErrorInfo.TelephonyErrorInfo">
            <summary>
            <c>TelephonyErrorInfo</c> class provides complementary information in case of an error in the <see cref="T:o2g.ITelephony"/> service.
            </summary>
        </member>
        <member name="T:o2g.Types.RestErrorInfo.TelephonyErrorInfo.TelephonyErrorType">
            <summary>
            <c>TelephonyErrorType</c> represents the telephony error types.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.TelephonyErrorInfo.TelephonyErrorType.Unknown">
            <summary>
            Unknown error, the O2G is unable to identify the root cause of the error.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.TelephonyErrorInfo.TelephonyErrorType.CallReferenceNotFound">
            <summary>
            The specified call reference in invalid.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.TelephonyErrorInfo.TelephonyErrorType.MegNotFound">
            <summary>
            The telephony service can not execute the request because the specified leg can not be found.
            <para>For exemple: request an online recording while there is no active leg.</para>
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.TelephonyErrorInfo.TelephonyErrorType.BasParameterValue">
            <summary>
            Some parameters attached to the request are not correct.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.TelephonyErrorInfo.TelephonyErrorType.IncompatibleWithState">
            <summary>
            The telephony service can not execute the request because the current telephony state does not permit such operation.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.TelephonyErrorInfo.TelephonyErrorType.ServiceNotProvided">
            <summary>
            The telephony service can not execute the request because the corresponding service is not provided in this context.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.TelephonyErrorInfo.TelephonyErrorType.ServiceUnavailable">
            <summary>
            The telephony service can not execute the request because it relies on another service which is unavailable.
            <para>For exemple: Redirecting to voicemail is requested, but user has no voicemail.</para>
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.TelephonyErrorInfo.TelephonyErrorType.Initialization">
            <summary>
            The telephony service is starting up and has not finished its initialization.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.TelephonyErrorInfo.TelephonyErrorType.Unauthorized">
            <summary>
            Telephony service request has been rejected.
            <para>For exemple: The user has already a call ongoing and he has no Advanced Telephony license.</para>
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.TelephonyErrorInfo.TelephonyErrorType.CallserverError">
            <summary>
            Telephony service request failed because of an error generated by the call server. More details can be provided by <see cref="T:o2g.Types.RestErrorInfo.TelephonyErrorInfo.TelephonyErrorCause"/>
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.TelephonyErrorInfo.TelephonyErrorType.RequestTimeout">
            <summary>
            An operation invoked on the telephony service has exceeded the expected response timeout (default 5 seconds).
            </summary>
        </member>
        <member name="T:o2g.Types.RestErrorInfo.TelephonyErrorInfo.TelephonyErrorCause">
            <summary>
            <c>TelephonyErrorCause</c> represents the possible errors raised by the OmniPCX Enterprise call server.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.TelephonyErrorInfo.TelephonyErrorCause.Unknown">
            <summary>
            Unknown telephony error cause.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.TelephonyErrorInfo.TelephonyErrorCause.InvalidCalling">
            <summary>
            The call server can not process the request because the calling device is not an acceptable one.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.TelephonyErrorInfo.TelephonyErrorCause.InvalidDestination">
            <summary>
            Destination is not a correct number.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.TelephonyErrorInfo.TelephonyErrorCause.InvalidCallId">
            <summary>
            The referenced call reference is not valid.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.TelephonyErrorInfo.TelephonyErrorCause.InvalidConnectionState">
            <summary>
            The current state of the call does not permit the operation.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.TelephonyErrorInfo.TelephonyErrorCause.DeviceOutOfService">
            <summary>
            The device is out of service.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.TelephonyErrorInfo.TelephonyErrorCause.InvalidDevice">
            <summary>
            The device is not in valid.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.TelephonyErrorInfo.TelephonyErrorCause.InvalidDeviceState">
            <summary>
            The device state is incompatible with the request.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.TelephonyErrorInfo.TelephonyErrorCause.InvalidData">
            <summary>
            The data parameter has invalid value.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.TelephonyErrorInfo.TelephonyErrorCause.ResourceBusy">
            <summary>
            The destination is busy. All the user phone lines are already engaged.
            </summary>
        </member>
        <member name="P:o2g.Types.RestErrorInfo.TelephonyErrorInfo.ErrorType">
            <summary>
            An <see cref="T:o2g.Types.RestErrorInfo.TelephonyErrorInfo.TelephonyErrorType"/> value that represent the error type.
            </summary>
        </member>
        <member name="P:o2g.Types.RestErrorInfo.TelephonyErrorInfo.ErrorCause">
            <summary>
            An <see cref="T:o2g.Types.RestErrorInfo.TelephonyErrorInfo.TelephonyErrorCause"/> value that represent the error cause.
            </summary>
        </member>
        <member name="P:o2g.Types.RestErrorInfo.TelephonyErrorInfo.Message">
            <summary>
            Give a textual information about the error
            </summary>
        </member>
        <member name="T:o2g.Types.RestErrorInfo.UserPreferencesErrorInfo">
            <summary>
            <c>UserPreferencesErrorInfo</c> class provides complementary information in case of an error in the <see cref="T:o2g.IUsers"/> service.
            </summary>
        </member>
        <member name="T:o2g.Types.RestErrorInfo.UserPreferencesErrorInfo.UserPreferencesErrorType">
            <summary>
            <c>UserPreferencesErrorType</c> represents the possible error types for the user preferences.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.UserPreferencesErrorInfo.UserPreferencesErrorType.Unknown">
            <summary>
            Unexpected error.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.UserPreferencesErrorInfo.UserPreferencesErrorType.WrongValue">
            <summary>
            Value not expected.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.UserPreferencesErrorInfo.UserPreferencesErrorType.WrongNumberFormat">
            <summary>
            Wrong number format.
            </summary>
        </member>
        <member name="T:o2g.Types.RestErrorInfo.UserPreferencesErrorInfo.UserPreferenceParameter">
            <summary>
            <c>UserPreferenceParameter</c> represents the possible preferences.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.UserPreferencesErrorInfo.UserPreferenceParameter.GuiLanguage">
            <summary>
            User GUI language.
            </summary>
        </member>
        <member name="F:o2g.Types.RestErrorInfo.UserPreferencesErrorInfo.UserPreferenceParameter.Unknown">
            <summary>
            Unknown property
            </summary>
        </member>
        <member name="P:o2g.Types.RestErrorInfo.UserPreferencesErrorInfo.UserPreferencesError">
            <summary>
            Return the information on the error.
            </summary>
            <value>
            A <see cref="T:o2g.Types.RestErrorInfo.UserPreferencesErrorInfo.UserPreferencesErrorType"/> value that represents the error.
            </value>
        </member>
        <member name="P:o2g.Types.RestErrorInfo.UserPreferencesErrorInfo.UserPreferencesParameter">
            <summary>
            Return the parameter that cause the error.
            </summary>
            <value>
            A <see cref="T:o2g.Types.RestErrorInfo.UserPreferencesErrorInfo.UserPreferenceParameter"/> value that represents the parameter.
            </value>
        </member>
        <member name="P:o2g.Types.RestErrorInfo.HttpStatus">
            <summary>
            The Http status as define in <see href="https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html"/>.
            </summary>
            <value>
            A <see langword="string"/> that represents the http error code.
            </value>
        </member>
        <member name="P:o2g.Types.RestErrorInfo.Code">
            <summary>
            Return the REST API error code. It allows to quickly identify the possible error.
            </summary>
            <value>
            A <see langword="int"/> value that represents the REST API error code.
            </value>
        </member>
        <member name="P:o2g.Types.RestErrorInfo.HelpMessage">
            <summary>
            Return a help message, associated with the <see cref="P:o2g.Types.RestErrorInfo.Type"/> and <see cref="P:o2g.Types.RestErrorInfo.Code"/>, providing a more detailed cause of the error.
            </summary>
            <value>
            A <see langword="string"/> that represents the help message.
            </value>
        </member>
        <member name="P:o2g.Types.RestErrorInfo.Type">
            <summary>
            Return the REST API error type, which group all possible underlying errors in a finite number of possibilities.
            </summary>
            <value>
            A <see langword="string"/> that represents the REST API error type.
            </value>
        </member>
        <member name="P:o2g.Types.RestErrorInfo.InnerMessage">
            <summary>
            Return a message containing relevant information to help an administrator or support team to find the cause of the problem.
            </summary>
            <value>
            A <see langword="string"/> that represents the inner message.
            </value>
        </member>
        <member name="P:o2g.Types.RestErrorInfo.CanRetry">
            <summary>
            <see langword="true"/> if the error can be solved by modifying the request; <see langword="false"/> if it is a server side error.
            </summary>
            <value>
            A <see langword="bool"/> value that indicates if the error can be fixed.
            </value>
        </member>
        <member name="P:o2g.Types.RestErrorInfo.Routing">
            <summary>
            Return additional information when the error is raised by the <see cref="T:o2g.IRouting"/> service.
            </summary>
            <value>
            A <see cref="T:o2g.Types.RestErrorInfo.RoutingErrorInfo"/> object that represents the routing error.
            </value>
        </member>
        <member name="P:o2g.Types.RestErrorInfo.Telephony">
            <summary>
            Return additional information when the error is raised by the <see cref="T:o2g.ITelephony"/> service.
            </summary>
            <value>
            A <see cref="T:o2g.Types.RestErrorInfo.TelephonyErrorInfo"/> object that represents the telephony error.
            </value>
        </member>
        <member name="P:o2g.Types.RestErrorInfo.UserPreferences">
            <summary>
            Return additional information when the error is raised by the <see cref="T:o2g.IUsers"/> service.
            </summary>
            <value>
            A <see cref="T:o2g.Types.RestErrorInfo.UserPreferencesErrorInfo"/> object that represents the user's preference error.
            </value>
        </member>
        <member name="T:o2g.Types.RoutingNS.Destination">
            <summary>
            <c>Destination</c> represents a forward or an overflow destination.
            </summary>
            <seealso cref="T:o2g.Types.RoutingNS.Overflow"/>
            <seealso cref="T:o2g.Types.RoutingNS.Forward"/>
        </member>
        <member name="F:o2g.Types.RoutingNS.Destination.VoiceMail">
            <summary>
            The destination is the user voice mail.
            </summary>
            
        </member>
        <member name="F:o2g.Types.RoutingNS.Destination.Number">
            <summary>
            The destination is another phone number. This destination can be used only to configure a forward.
            </summary>
        </member>
        <member name="F:o2g.Types.RoutingNS.Destination.None">
            <summary>
            None destination.
            </summary>
        </member>
        <member name="T:o2g.Types.RoutingNS.DndState">
            <summary>
            <c>DndState</c> represents the Do Not Disturb state of the user.
            </summary>
            <seealso cref="M:o2g.IRouting.GetDndStateAsync(System.String)"/>
        </member>
        <member name="P:o2g.Types.RoutingNS.DndState.Activate">
            <summary>
            Return whether the Do Not Dsturb is activated.
            </summary>
            <value>
            <see langword="true"/> if the DND is activated; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="T:o2g.Types.RoutingNS.Forward">
            <summary>
            <c>Forwar</c> represents a forward the user has activated.
            </summary>
            <seealso cref="M:o2g.IRouting.GetForwardAsync(System.String)"/>
        </member>
        <member name="T:o2g.Types.RoutingNS.Forward.ForwardCondition">
            <summary>
            <c>ForwardCondition</c> represents the possible condition a user can associate to a forward.
            </summary>
        </member>
        <member name="F:o2g.Types.RoutingNS.Forward.ForwardCondition.Immediate">
            <summary>
            Incoming calls are immediately forwarded on the target.
            </summary>
        </member>
        <member name="F:o2g.Types.RoutingNS.Forward.ForwardCondition.Busy">
            <summary>
            Incoming calls are forwarded on the target if the user is busy.
            </summary>
        </member>
        <member name="F:o2g.Types.RoutingNS.Forward.ForwardCondition.NoAnswer">
            <summary>
            Incoming calls are forwarded on the target if the user does not answer the call.
            </summary>
        </member>
        <member name="F:o2g.Types.RoutingNS.Forward.ForwardCondition.BusyOrNoAnswer">
            <summary>
            Incoming calls are forwarded on the target if the user is busy or if the user does not answer the call.
            </summary>
        </member>
        <member name="P:o2g.Types.RoutingNS.Forward.Destination">
            <summary>
            Return the destination of this forward.
            </summary>
            <value>
            A <see cref="P:o2g.Types.RoutingNS.Forward.Destination"/> that represent the forward destination.
            </value>
        </member>
        <member name="P:o2g.Types.RoutingNS.Forward.Condition">
            <summary>
            Return the condition associated to this forward.
            </summary>
            <value>
            An optional <see cref="T:o2g.Types.RoutingNS.Forward.ForwardCondition"/> that represents the associated condition or an unset value when there 
            is no forward configured. (<c>Destination.Node</c>
            </value>
        </member>
        <member name="P:o2g.Types.RoutingNS.Forward.Number">
            <summary>
            Return the number on which teh user is forwarded.
            </summary>
            <value>
            A <see langword="string"/> that is the extension number on which the user is forwarded, or <see langword="null"/> 
            if there is no forward activated or if the forward is activated on the user voice mail.
            </value>
        </member>
        <member name="T:o2g.Types.RoutingNS.Overflow">
            <summary>
            <c>Overflow</c> represents an overflow the user has activated.
            </summary>
            <seealso cref="M:o2g.IRouting.GetOverflowAsync(System.String)"/>
        </member>
        <member name="T:o2g.Types.RoutingNS.Overflow.OverflowCondition">
            <summary>
            <c>OverflowCondition</c> represents the possible condition a user can associate to an overflow.
            </summary>
        </member>
        <member name="F:o2g.Types.RoutingNS.Overflow.OverflowCondition.Busy">
            <summary>
            Incoming calls are redirected on the target if the user is busy.
            </summary>
        </member>
        <member name="F:o2g.Types.RoutingNS.Overflow.OverflowCondition.NoAnswer">
            <summary>
            Incoming calls are redirected on the target if the user does not answer the call.
            </summary>
        </member>
        <member name="F:o2g.Types.RoutingNS.Overflow.OverflowCondition.BusyOrNoAnswer">
            <summary>
            Incoming calls are redirected on the target if the user is busy or if the user does not answer the call.
            </summary>
        </member>
        <member name="P:o2g.Types.RoutingNS.Overflow.Destination">
            <summary>
            Return the destination of this overflow.
            </summary>
            <value>
            A <see cref="P:o2g.Types.RoutingNS.Overflow.Destination"/> that represent the overflow destination.
            </value>
        </member>
        <member name="P:o2g.Types.RoutingNS.Overflow.Condition">
            <summary>
            Return the condition associated to this overflow.
            </summary>
            <value>
            An optional <see cref="T:o2g.Types.RoutingNS.Overflow.OverflowCondition"/> that represents the associated condition or an unset value when there is no overflow configured. (<c>Destination.Node</c>
            </value>
        </member>
        <member name="T:o2g.Types.RoutingNS.RoutingCapabilities">
            <summary>
            <c>RoutingCapability</c> represents the routing capability of a user.
            </summary>
        </member>
        <member name="P:o2g.Types.RoutingNS.RoutingCapabilities.CanManageRemoteExtension">
            <summary>
            Return whether the user can manage the remote extension.
            </summary>
            <value>
            <see langword="true"/> if the user can manage the remote extension; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.RoutingNS.RoutingCapabilities.CanManageForward">
            <summary>
            Return whether the user can manage the forward.
            </summary>
            <value>
            <see langword="true"/> if the user can manage the forward; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.RoutingNS.RoutingCapabilities.CanManageOverflow">
            <summary>
            Return whether the user can manage the overflow.
            </summary>
            <value>
            <see langword="true"/> if the user can manage the overflow; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.RoutingNS.RoutingCapabilities.CanManageDnd">
            <summary>
            Return whether the user can manage the do not disturb.
            </summary>
            <value>
            <see langword="true"/> if the user can manage the do not disturb; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="T:o2g.Types.RoutingNS.RoutingState">
            <summary>
            <c>RoutingState</c> represente a user routing state. 
            <para>A routing state is composed of four elements</para>
            <list type="table">
            <item><term>Remote extension activation</term><description>When the user is configured with a remote extension, he has the possibility to activate or deactivate this remote extension. when the remote extension is de-activated, call are not presented on the mobile device.</description></item>
            <item><term>Forward</term><description>The user can configure a forward, on his voice mail if any or on any other number (depending on the cOmniPCX Enterprise configuration).</description></item>
            <item><term>Overflow</term><description>The user can configure an overflow on his asociate or on his voce mail. If a forward is configured, it is considered prio the overflow.</description></item>
            <item><term>Do Not Disturb</term><description>When Do Not Disturb (DND) is activated, call are not presented to the user.</description></item>
            </list>
            </summary>
        </member>
        <member name="P:o2g.Types.RoutingNS.RoutingState.RemoteExtensionActivated">
            <summary>
            Return whether the remote extension is activated.
            </summary>
            <value>
            <see langword="true"/> if the remote extension is activated; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.RoutingNS.RoutingState.Forward">
            <summary>
            Return the forward.
            </summary>
            <value>
            A <see cref="P:o2g.Types.RoutingNS.RoutingState.Forward"/> object that represents the forward state.
            </value>
        </member>
        <member name="P:o2g.Types.RoutingNS.RoutingState.Overflow">
            <summary>
            Return the Overflow.
            </summary>
            <value>
            A <see cref="P:o2g.Types.RoutingNS.RoutingState.Overflow"/> object that represents the overflow state.
            </value>
        </member>
        <member name="P:o2g.Types.RoutingNS.RoutingState.DndState">
            <summary>
            Return the Do not Disturb state.
            </summary>
            <value>
            A <see cref="P:o2g.Types.RoutingNS.RoutingState.DndState"/> object that represents the do not disturb state.
            </value>
        </member>
        <member name="T:o2g.Types.TelephonyNS.CallCapabilities">
            <summary>
            <c>CallCapabilities</c> represents the capabilities available on a call : the action that can be carried out on the call according to its state.
            </summary>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallCapabilities.AddDevice">
            <summary>
            Return whether a device can be added.
            </summary>
            <value>
            <see langword="true"/> if a device can be added; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallCapabilities.AddParticipant">
            <summary>
            Return whether a participant can be added.
            </summary>
            <value>
            <see langword="true"/> if a participant can be added; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallCapabilities.Intruded">
            <summary>
            Return whether this call can be intruted by another user.
            </summary>
            <value>
            <see langword="true"/> if the call can be intruded; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallCapabilities.Intrusion">
            <summary>
            Return whether it is possible to make intrusion on the user called through this call.
            </summary>
            <value>
            <see langword="true"/> if the intrusion is possible; <see langword="false"/> otherwise.
            </value>
            <remarks>Available from O2G 2.4</remarks>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallCapabilities.Transfer">
            <summary>
            Return whether the call can be transferred.
            </summary>
            <value>
            <see langword="true"/> if the call can be transferred; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallCapabilities.BlindTransfer">
            <summary>
            Return whether the call can be blind transferred.
            </summary>
            <value>
            <see langword="true"/> if the call can be blind transferred; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallCapabilities.Merge">
            <summary>
            Return whether the call can be merged with another one.
            </summary>
            <value>
            <see langword="true"/> if the call can be merged; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallCapabilities.Redirect">
            <summary>
            Return whether the call can be redirected to another device.
            </summary>
            <value>
            <see langword="true"/> if the call can be redirected; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallCapabilities.PickedUp">
            <summary>
            Return whether a call can be picked-up by another user.
            </summary>
            <value>
            <see langword="true"/> if the call can be picked-up; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallCapabilities.RedirectToVoiceMail">
            <summary>
            Return whether the call can be redirected to the voice mail.
            </summary>
            <value>
            <see langword="true"/> if the call can be redirected to the voice mail; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallCapabilities.OverflowToVoiceMail">
            <summary>
            Return whether a call can be overflowed on the voice mail of the called user.
            </summary>
            <value>
            <see langword="true"/> if the call can be overflowed; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallCapabilities.DropMe">
            <summary>
            Return whether this user can be dropped from this call.
            </summary>
            <value>
            <see langword="true"/> if the user can be dropped; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallCapabilities.Terminate">
            <summary>
            Return whether the call can be terminated for all users.
            </summary>
            <value>
            <see langword="true"/> if the call can be terminated; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallCapabilities.Reject">
            <summary>
            Return whether the call can be rejected.
            </summary>
            <value>
            <see langword="true"/> if the call can be rejected; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallCapabilities.CallBack">
            <summary>
            Return whether a callback request is possible.
            </summary>
            <value>
            <see langword="true"/> if a callback request is possible; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallCapabilities.Park">
            <summary>
            Return whether the call can be parked.
            </summary>
            <value>
            <see langword="true"/> if the call can be parked; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallCapabilities.StartRecord">
            <summary>
            Return whether it's possible to start the recording of this call.
            </summary>
            <value>
            <see langword="true"/> if it's possible to start the recording; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallCapabilities.StopRecord">
            <summary>
            Return whether it's possible to stop the recording of this call.
            </summary>
            <value>
            <see langword="true"/> if it's possible to stop the recording; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallCapabilities.PauseRecord">
            <summary>
            Return whether it's possible to pause the recording of this call.
            </summary>
            <value>
            <see langword="true"/> if it's possible to pause the recording; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallCapabilities.ResumeRecord">
            <summary>
            Return whether it's possible to resume the paused recording of this call.
            </summary>
            <value>
            <see langword="true"/> if it's possible to resume the recording; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallCapabilities.DropParticipant">
            <summary>
            Return whether a participant can be dropped.
            </summary>
            <value>
            <see langword="true"/> if a participant can be dropped; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallCapabilities.MuteParticipant">
            <summary>
            Return whether a participant can be muted.
            </summary>
            <value>
            <see langword="true"/> if a participant can be muted; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallCapabilities.HoldParticipant">
            <summary>
            Return whether a participant can be put on hold.
            </summary>
            <value>
            <see langword="true"/> if a participant can be put on hold; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="T:o2g.Types.TelephonyNS.PbxCall">
            <summary>
            Represent a call. A call is identified by its <see cref="P:o2g.Types.TelephonyNS.PbxCall.CallRef"/>, a unique <see langword="string"/> generated by the O2G server.
            </summary>
        </member>
        <member name="P:o2g.Types.TelephonyNS.PbxCall.CallRef">
            <summary>
            This property is the reference of this call.
            </summary>
            <value>
            The unique <see langword="string"/> value that identifies this call.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.PbxCall.CallData">
            <summary>
            This property get  the data associated to this call.
            </summary>
            <value>
            A <see cref="P:o2g.Types.TelephonyNS.PbxCall.CallData"/> object that represents the data associated to this call.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.PbxCall.Legs">
            <summary>
            The list of legs associated to this call.
            </summary>
            <value>
            A list of <see cref="T:o2g.Types.TelephonyNS.CallNS.Leg"/>. A <c>Leg</c> represents the user's device involved in a call for a dedicated media (audio or video).
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.PbxCall.Participants">
            <summary>
            The list of participants associated to this call.
            </summary>
            <value>
            A list of <see cref="T:o2g.Types.TelephonyNS.CallNS.Participant"/>. A <c>Participant</c> represents the other party in this call.
            </value>
        </member>
        <member name="T:o2g.Types.TelephonyNS.Callback">
            <summary>
            <c>Callback</c> class represenst a callback request. A callback request is invoked by a caller to ask the user to call him back as sson as possible.
            </summary>
        </member>
        <member name="P:o2g.Types.TelephonyNS.Callback.CallbackId">
            <summary>
            This property gives the identifier of this callback.
            </summary>
            <value>
            A unique <see langword="string"/> that is this callback identifier.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.Callback.PartyInfo">
            <summary>
            This property represents the party who has requested the callback.
            </summary>
            <value>
            A <see cref="P:o2g.Types.TelephonyNS.Callback.PartyInfo"/> class that  represents the originator of the callback request.
            </value>
        </member>
        <member name="T:o2g.Types.TelephonyNS.CallNS.AcdNS.AcdData">
            <summary>
            <c>AcdData</c> represents the acd extension for an acd call.
            </summary>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.AcdNS.AcdData.CallInfo">
            <summary>
            Return the information associated to this acd call.
            </summary>
            <value>
            A <see cref="T:o2g.Types.TelephonyNS.CallNS.AcdNS.Info"/> object that gives the information on the acd call.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.AcdNS.AcdData.QueueData">
            <summary>
            Return the information about the queue that has distributed this call.
            </summary>
            <value>
            A <see cref="P:o2g.Types.TelephonyNS.CallNS.AcdNS.AcdData.QueueData"/> that gives information on the queue.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.AcdNS.AcdData.PilotNumber">
            <summary>
            Return the pilot who has distributed this call.
            </summary>
            <value>
            A <see langword="string"/> that is the pilot directory number.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.AcdNS.AcdData.RsiNumber">
            <summary>
            Return the RSI point that has distribuet this call.
            </summary>
            <value>
            A <see langword="string"/> that is the RSI point directory number.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.AcdNS.AcdData.SupervisedTransfer">
            <summary>
            Return whether the transfer on the pilot was supervised.
            </summary>
            <value>
            <see langword="true"/> if the transfer has been supervised; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.AcdNS.AcdData.PilotTransferInfo">
            <summary>
            Return The information about the possible transfer on a pilot.
            </summary>
            <value>
            A <see cref="P:o2g.Types.TelephonyNS.CallNS.AcdNS.AcdData.PilotTransferInfo"/> The information about the possible transfer or <see langword="null"/> if there is no transfer in progress.
            </value>
        </member>
        <member name="T:o2g.Types.TelephonyNS.CallNS.AcdNS.AcrSkill">
            <summary>
            <c>AcrSkill</c> represents a skill associated to a call. When the "Advanced Call Routing" call distribution strategy is configured,
            the CCD agent are selected according to their <see cref="T:o2g.Types.CallCenterAgentNS.AgentSkill"/>. The selected agent skills must match the skill required by the call.
            </summary>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.AcdNS.AcrSkill.Number">
            <summary>
            The skill number.
            </summary>
            <value>
            An <see langword="int"/> value that is the unique identifier of the skill.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.AcdNS.AcrSkill.Mandatory">
            <summary>
            Return whether this skill is a mandatory skill.
            </summary>
            <value>
            <see langword="true"/> if the skill is mandatory; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.AcdNS.AcrSkill.ExpertEvalLevel">
            <summary>
            Return the skill level.
            </summary>
            <value>
            An <see langword="int"/> value that represents the skill level required.
            </value>
        </member>
        <member name="T:o2g.Types.TelephonyNS.CallNS.AcdNS.Info">
            <summary>
            <c>Info</c> represents the acd information for this call
            </summary>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.AcdNS.Info.QueueWaitingTime">
            <summary>
            Return the waiting time in a queue from which the call has been distributed.
            </summary>
            <value>
            The estimated waiting time in seconds.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.AcdNS.Info.GlobalWaitingTime">
            <summary>
            Return the global waiting time in the CCD.
            </summary>
            <value>
            The estimated global waiting time.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.AcdNS.Info.AgentGroup">
            <summary>
            Return the agent group the agent who answer the call is logged in.
            </summary>
            <value>
            A <see langword="string"/> that is the agent group number.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.AcdNS.Info.Local">
            <summary>
            Return whether it is a local acd call
            </summary>
            <value>
            <see langword="true"/> if the acd call is local; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="T:o2g.Types.TelephonyNS.CallNS.AcdNS.PilotStatus">
            <summary>
            <c>PilotStatus</c> represents the possible state of a CCD pilot.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.AcdNS.PilotStatus.Opened">
            <summary>
            The pilot is opened.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.AcdNS.PilotStatus.Blocked">
            <summary>
            The pilot is blocked.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.AcdNS.PilotStatus.BlockedOnRule">
            <summary>
            The pilot is on a blocked on a rule.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.AcdNS.PilotStatus.BlockedOnBlockedRule">
            <summary>
            The pilot is blocked on a blocking rule.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.AcdNS.PilotStatus.GeneralForwarding">
            <summary>
            The pilot is in general forwarding.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.AcdNS.PilotStatus.GeneralForwardingOnRule">
            <summary>
            The pilot is in general forwarding on a rule.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.AcdNS.PilotStatus.BlockedOnGGeneralForwardingRule">
            <summary>
            The pilot is blocked while in general forwarding on a rule.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.AcdNS.PilotStatus.Other">
            <summary>
            Other state
            </summary>
        </member>
        <member name="T:o2g.Types.TelephonyNS.CallNS.AcdNS.PilotTransferInfo">
            <summary>
            <c>PilotTransferInfo</c> provides possible transfer information on a CCD pilot.
            </summary>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.AcdNS.PilotTransferInfo.TransferPossible">
            <summary>
            Return whether the transfer on this CCD pilot is possible.
            </summary>
            <value>
            <see langword="true"/> if the transfer is possible; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.AcdNS.PilotTransferInfo.PilotStatus">
            <summary>
            This property return the CCD pilot status.
            </summary>
            <value>
            A <see cref="P:o2g.Types.TelephonyNS.CallNS.AcdNS.PilotTransferInfo.PilotStatus"/> that represents the pilot state.
            </value>
        </member>
        <member name="T:o2g.Types.TelephonyNS.CallNS.AcdNS.QueueData">
            <summary>
            <c>QueueData</c> represent a CCD waiting queue.
            </summary>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.AcdNS.QueueData.WaitingTime">
            <summary>
            Return the estimated waiting time in the queue.
            </summary>
            <value>
            The estimated waiting time in seconds.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.AcdNS.QueueData.Saturated">
            <summary>
            Return whether this queue is saturated.
            </summary>
            <value>
            <see langword="true"/> if the queue is saturated; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="T:o2g.Types.TelephonyNS.CallNS.CallData">
            <summary>
            <c>CallData</c> represents the data associated to a call.
            </summary>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.CallData.InitialCalled">
            <summary>
            This property gives the initial callee.
            </summary>
            <value>
            a <see cref="T:o2g.Types.CommonNS.PartyInfo"/> object that gives the identity of the initial calle.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.CallData.DeviceCall">
            <summary>
            Return whether the call is a device call or a user call.
            </summary>
            <value>
            <see langword="true"/> if it's a device call; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.CallData.Anonymous">
            <summary>
            Return whether the this call is anonymous.
            </summary>
            <value>
            <see langword="true"/> if the call is anonymous; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.CallData.CallUUID">
            <summary>
            CallUUID associated to this call (used to correlate RTSM events with SIP events for multimedia users only).
            </summary>
            <value>
            A <see langword="string"/> that is the associated CallUUID.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.CallData.State">
            <summary>
            This property gives the call state.
            </summary>
            <value>
            A <see cref="T:o2g.Types.TelephonyNS.CallNS.MediaState"/> that represents the call state.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.CallData.RecordState">
            <summary>
            This property give the call recording state.
            </summary>
            <value>
            A <see cref="P:o2g.Types.TelephonyNS.CallNS.CallData.RecordState"/> value that indicated the recording state.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.CallData.Tags">
            <summary>
            This property return the tag list associated to this call.
            </summary>
            <value>
            A list of <see cref="T:o2g.Types.TelephonyNS.CallNS.Tag"/>.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.CallData.Capabilities">
            <summary>
            This property return the capabilities available on this call.
            </summary>
            <value>
            A <see cref="T:o2g.Types.TelephonyNS.CallCapabilities"/> object that represents the capability available in this call.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.CallData.AssociatedData">
            <summary>
            This property return the string correlator data associated to this call.
            </summary>
            <value>
            A <see langword="string"/> that is the associated correlator data.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.CallData.HexaBinaryAssociatedData">
            <summary>
            This property return the correlator data associated to this call.
            </summary>
            <value>
            A <see langword="string"/> that is the associated correlator data.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.CallData.AccountInfo">
            <summary>
            This property returns the account info associated to this call.
            </summary>
            <value>
            A <see langword="string"/> that is the account info.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.CallData.AcdCallData">
            <summary>
            This property gives the acd extension in case of an acd call.
            </summary>
            <value>
            A <see cref="T:o2g.Types.TelephonyNS.CallNS.AcdNS.AcdData"/> object that provide this call acd extension data.
            </value>
        </member>
        <member name="M:o2g.Types.TelephonyNS.CallNS.CallData.AssociatedDataAsByteArray">
            <summary>
            Return the correlator data as a byte array.
            </summary>
            <returns>
            The array of bytes corresponding to the correlator data.
            </returns>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.CallData.TrunkIdentification">
            <summary>
            TrunkIdentification if external call
            </summary>
            <value>
            A <see cref="P:o2g.Types.TelephonyNS.CallNS.CallData.TrunkIdentification"/> object that provide information on network timeslot and trunk eqt number
            </value>
        </member>
        <member name="T:o2g.Types.TelephonyNS.CallNS.Cause">
            <summary>
            <c>Cause</c> lists the different call causes.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.Cause.Unknown">
            <summary>
            Unknown cause.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.Cause.Abandoned">
            <summary>
            Caller in a two-party call has disconnected before the call was answered.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.Cause.AllTrunkBusy">
            <summary>
            The call is receiving the network congestion tone.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.Cause.Busy">
            <summary>
            The call is receiving the busy tone.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.Cause.Cleared">
            <summary>
            One party in a two-party call has disconnected after the call was answered.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.Cause.ParticipantLeft">
            <summary>
            One party has left the conference call.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.Cause.Conferenced">
            <summary>
            This is a multi-party call.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.Cause.InvalidNumber">
            <summary>
            The call is receiving the invalid number tone.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.Cause.DestinationNotObtainable">
            <summary>
            The destination cannot be reached.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.Cause.DoNotDisturb">
            <summary>
            The device is in DND.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.Cause.Forwarded">
            <summary>
            The call has been forwarded.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.Cause.NotAnswered">
            <summary>
            The call has been hanged up before answer.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.Cause.PickedUp">
            <summary>
            The call has been picked up.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.Cause.Parked">
            <summary>
            The call has been parked.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.Cause.Redirected">
            <summary>
            The call has been redirected.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.Cause.Overflown">
            <summary>
            The call goes on overflow destination.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.Cause.Transferred">
            <summary>
            This is a transferred call.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.Cause.PickedUpTandem">
            <summary>
            Picked up tandem.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.Cause.CallBack">
            <summary>
            The call is a call back.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.Cause.Recall">
            <summary>
            The call is recall (e.g. on HELD call indicates that device rings back).
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.Cause.Distributed">
            <summary>
            CCD context: call distribution
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.Cause.AcdEnterDistribution">
            <summary>
            CCD context: call enters in distribution
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.Cause.ResourcesNotAvailable">
            <summary>
            CCD context: pilot is not open
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.Cause.SupervisorListening">
            <summary>
            CCD context: supervisor is listening the agent conversation
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.Cause.SupervisorIntrusion">
            <summary>
            CCD context: supervisor is fully intruded in the agent conversation
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.Cause.SupervisorRestrictIntrusion">
            <summary>
            CCD context: supervisor can speak to the agent
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.Cause.NoAvailableAgent">
            <summary>
            CCD context: No available agent
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.Cause.Lockout">
            <summary>
            Physical phone set device is off the hook
            </summary>
        </member>
        <member name="T:o2g.Types.TelephonyNS.CallNS.Leg">
            <summary>
            <c>Leg</c> class represents a Leg in a call. A leg represents the user's device involved in a call for a dedicated media (audio or video).
            </summary>
        </member>
        <member name="T:o2g.Types.TelephonyNS.CallNS.Leg.LegCapabilities">
            <summary>
            <c>LegCapabilities</c> represents the capability of a <see cref="T:o2g.Types.TelephonyNS.CallNS.Leg"/>. The action that can be carried out on the leg according to its state.
            </summary>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.Leg.LegCapabilities.Answer">
            <summary>
            Return whether the leg can answer to an incoming call.
            </summary>
            <value>
            <see langword="true"/> if the call can be answered; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.Leg.LegCapabilities.Drop">
            <summary>
            Return whether the leg can drop this media device.
            </summary>
            <value>
            <see langword="true"/> if the media device can be dropped; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.Leg.LegCapabilities.Hold">
            <summary>
            Return whether the leg can put this call on hold in order to retrieve it later.
            </summary>
            <value>
            <see langword="true"/> if the call can be put on hold; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.Leg.LegCapabilities.Retrieve">
            <summary>
            Return whether the leg can retrieve a call on hold.
            </summary>
            <value>
            <see langword="true"/> if the call on hold can retrieved; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.Leg.LegCapabilities.Reconnect">
            <summary>
            Return whether the leg can retrieve an hold call and releasing the current active call.
            </summary>
            <value>
            <see langword="true"/> if the call on hold can be retrieved and the active call released; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.Leg.LegCapabilities.Mute">
            <summary>
            Return whether the leg can be muted.
            </summary>
            <value>
            <see langword="true"/> if the leg can be muted; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.Leg.LegCapabilities.UnMute">
            <summary>
            Return whether the leg can be un-muted.
            </summary>
            <value>
            <see langword="true"/> if the leg can be un-muted; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.Leg.LegCapabilities.SendDtmf">
            <summary>
            Return whether DTMF codes can be sent.
            </summary>
            <value>
            <see langword="true"/> if DTMF codes can be sent; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.Leg.LegCapabilities.SwitchDevice">
            <summary>
            Return whether this call can be switched to another device.
            </summary>
            <value>
            <see langword="true"/> if the call can be switched; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.Leg.DeviceId">
            <summary>
            This property is the device extension number.
            </summary>
            <value>
            A <see langword="string"/> that is the device extension number.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.Leg.State">
            <summary>
            This property return the device state.
            </summary>
            <value>
            A <see cref="T:o2g.Types.TelephonyNS.CallNS.MediaState"/> that is the state of the device associated to this leg.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.Leg.RingingRemote">
            <summary>
            This property return whether the leg is in <c>RingingOutgoing</c> state and if the remote party is ringing.
            </summary>
            <value>
            <see langword="true"/> if the leg is ringing; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.Leg.Capabilities">
            <summary>
            This property gives the leg capabilities.
            </summary>
            <value>
            A <see cref="T:o2g.Types.TelephonyNS.CallNS.Leg.LegCapabilities"/> object that gives the leg capabilities.
            </value>
        </member>
        <member name="T:o2g.Types.TelephonyNS.CallNS.MediaState">
            <summary>
            <c>MediaState</c> represents a media state. A media can be audio or video.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.MediaState.Unknown">
            <summary>
            Unknown media state. O2G server is unable to provide the information.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.MediaState.OffHook">
            <summary>
            The <c>OffHook</c> state is used when the device is busy for other reasons than a call; typically during service activation.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.MediaState.Idle">
            <summary>
            Idle state, no activity on the media.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.MediaState.Releasing">
            <summary>
            The call is releasing.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.MediaState.Dialing">
            <summary>
            A make call is in progress.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.MediaState.Held">
            <summary>
            The call has been placed on hold.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.MediaState.RingingIncoming">
            <summary>
            An incoming call is ringing.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.MediaState.RingingOutgoing">
            <summary>
            An outgoing call is in progress and the other party is ringing.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.MediaState.Active">
            <summary>
            The call is active.
            </summary>
        </member>
        <member name="T:o2g.Types.TelephonyNS.CallNS.Participant">
            <summary>
            Represent a participant to a call. A call can have several participants (case of a conference for exemple).
            <para>A participant is identified by its <see cref="P:o2g.Types.TelephonyNS.CallNS.Participant.ParticipantId"/>, a unique <see langword="string"/> generated by the O2G server</para>
            </summary>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.Participant.ParticipantId">
            <summary>
            The identifier of this participant. This is an internal key. 
            </summary>
            <value>
            A unique <see langword="string"/> that identify this participant.
            </value>
            <remarks>
            Even if it can be equals to the participant extension number, an application should not use this identifier for other purpose than retrieving this participant.
            </remarks>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.Participant.Identity">
            <summary>
            This property gives the participant identity.
            </summary>
            <value>
            A <see cref="T:o2g.Types.CommonNS.PartyInfo"/> that is the participant identity.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.Participant.Anonymous">
            <summary>
            Return whether the participant identity is secret.
            </summary>
            <value>
            <see langword="true"/> if the participant is anonymous; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.Participant.Undroppable">
            <summary>
            Return whether the participant can be dropped from a call.
            </summary>
            <value>
            <see langword="true"/> if the participant can be dropped; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.Participant.State">
            <summary>
            This property gives the participant state.
            </summary>
            <value>
            A <see cref="T:o2g.Types.TelephonyNS.CallNS.MediaState"/> value that is the participant state.
            </value>
            <remarks>
            This property is only filled in multi-party call (>=3 participants) and only when the Participant mediaState is changed to RINGING_INCOMING or from RINGING_INCOMING to ACTIVE.
            </remarks>
        </member>
        <member name="T:o2g.Types.TelephonyNS.CallNS.RecordState">
            <summary>
            <c>RecordState</c> represent the recording state.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.RecordState.Paused">
            <summary>
            The recording is paused.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.RecordState.Recording">
            <summary>
            The recording is in progress.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.CallNS.RecordState.Unknown">
            <summary>
            Unable to identify the state.
            </summary>
        </member>
        <member name="T:o2g.Types.TelephonyNS.CallNS.Tag">
            <summary>
            <c>Tag</c> represents a tag (a define name and value), associated to a call.
            </summary>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.Tag.Name">
            <summary>
            This property give the tag name.
            </summary>
            <value>
            A <see langword="string"/> value that gives the name of this tag.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.Tag.Value">
            <summary>
            This property give the tag value.
            </summary>
            <value>
            A <see langword="string"/> value that gives the value of this tag.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.CallNS.Tag.Visibilities">
            <summary>
            This property give the tag visibility.
            </summary>
            <value>
            A list of <see langword="string"/>. Each string represents a login name of a user whoo has the visibility on this tag.
            </value>
        </member>
        <member name="T:o2g.Types.TelephonyNS.DeviceNS.DeviceCapabilities">
            <summary>
            <c>DeviceCapabilities</c> represents the capability of a device.
            </summary>
        </member>
        <member name="P:o2g.Types.TelephonyNS.DeviceNS.DeviceCapabilities.DeviceId">
            <summary>
            This property gives the device extension number.
            </summary>
            <value>
            A <see langword="string"/> that is the device extension number.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.DeviceNS.DeviceCapabilities.MakeCall">
            <summary>
            A property that indicates whether the device can make a call.
            </summary>
            <value>
            <see langword="true"/> if teh device can make a call; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.DeviceNS.DeviceCapabilities.MakeBusinessCall">
            <summary>
            A property that indicates whether the device can make a business call.
            </summary>
            <value>
            <see langword="true"/> if teh device can make a business call; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.DeviceNS.DeviceCapabilities.MakePrivateCall">
            <summary>
            A property that indicates whether the device can make a private call.
            </summary>
            <value>
            <see langword="true"/> if teh device can make a private call; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.DeviceNS.DeviceCapabilities.UnParkCall">
            <summary>
            A property that indicates whether the device can park a call.
            </summary>
            <value>
            <see langword="true"/> if teh device can park a call; <see langword="false"/> otherwise.
            </value>
        </member>
        <member name="T:o2g.Types.TelephonyNS.DeviceNS.DeviceState">
            <summary>
            <c>DeviceState</c> represents the state of a device.
            </summary>
        </member>
        <member name="P:o2g.Types.TelephonyNS.DeviceNS.DeviceState.DeviceId">
            <summary>
            This property gives the device phone number.
            </summary>
            <value>
            A <see langword="string"/> that is the device extension number.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.DeviceNS.DeviceState.State">
            <summary>
            This property return the device operational state.
            </summary>
            <value>
            A <see cref="T:o2g.Types.TelephonyNS.DeviceNS.OperationalState"/> value that give sthe device operational state.
            </value>
        </member>
        <member name="T:o2g.Types.TelephonyNS.DeviceNS.OperationalState">
            <summary>
            <c>OperationalState</c> represents a device dynamic state.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.DeviceNS.OperationalState.InService">
            <summary>
            The device is in service.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.DeviceNS.OperationalState.OutOfService">
            <summary>
            The device is out of service.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.DeviceNS.OperationalState.Unknown">
            <summary>
            The dynamic state of the device can not be retrieved.
            </summary>
        </member>
        <member name="T:o2g.Types.TelephonyNS.HuntingGroups">
            <summary>
            <c>HuntingGroups</c> gives the hunting group information for a user.
            <para>A user can be member of only one hunting group.</para>
            </summary>
        </member>
        <member name="P:o2g.Types.TelephonyNS.HuntingGroups.HgList">
            <summary>
            Give the list of existing hunting groups.
            </summary>
            <value>
            A list of <see langword="string"/> that represents the phone number of each existing hunting group on the OXE node the user is configured.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.HuntingGroups.CurrentHg">
            <summary>
            This property gives the hunting group which the user is a member. 
            </summary>
            <value>
            A <see langword="string"/> that is the phone number of the hunting group which the user is a member, or <see langword="null"/> if the user is not member of any hunting group.
            </value>
        </member>
        <member name="T:o2g.Types.TelephonyNS.HuntingGroupStatus">
            <summary>
            <c>HuntingGroupStatus</c> gives the dynamic status of the user vis-a-vis the hunting group he is member of.
            </summary>
        </member>
        <member name="P:o2g.Types.TelephonyNS.HuntingGroupStatus.LogonOn">
            <summary>
            This property indicates whether the user is logged in the hunting group.
            </summary>
            <value>
            A <see langword="bool"/> value that indicates whether the user is logged.
            </value>
        </member>
        <member name="T:o2g.Types.TelephonyNS.MiniMessage">
            <summary>
            <c>MiniMessage</c> class represents a mini message exchanged between two users.
            </summary>
        </member>
        <member name="P:o2g.Types.TelephonyNS.MiniMessage.Sender">
            <summary>
            This property represents the message sender.
            </summary>
            <value>
            A <see langword="string"/> that is the phone number of the user who has sent the message.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.MiniMessage.DateTime">
            <summary>
            This property gives the date the mini message has been sent.
            </summary>
            <value>
            A <see cref="P:o2g.Types.TelephonyNS.MiniMessage.DateTime"/> value that gives the date the message has been sent.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.MiniMessage.Message">
            <summary>
            This property gives the text of the mini message
            </summary>
            <value>
            A <see langword="string"/> that is the mini message text.
            </value>
        </member>
        <member name="T:o2g.Types.TelephonyNS.RecordingAction">
            <summary>
            <c>RecordingAction</c> represents the possible action during the recording of a conversation.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.RecordingAction.Start">
            <summary>
            Start the recording.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.RecordingAction.Stop">
            <summary>
            Stop the recording.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.RecordingAction.Pause">
            <summary>
            Pause the recording.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.RecordingAction.Resume">
            <summary>
            Resume a paused recording.
            </summary>
        </member>
        <member name="T:o2g.Types.TelephonyNS.TelephonicState">
            <summary>
            <c>TelephonicState</c> represents a user's telephonic state. 
            <para>The telephonic state is the list of all call involving the user, and the associated capability.</para>
            </summary>
            <remarks>
            On application startup, state of the user must be retrieve to align the application with the real user state.
            </remarks>
        </member>
        <member name="P:o2g.Types.TelephonyNS.TelephonicState.Calls">
            <summary>
            This property gives the calls in progress.
            </summary>
            <value>
            A list of <see cref="T:o2g.Types.TelephonyNS.PbxCall"/>.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.TelephonicState.DeviceCapabilities">
            <summary>
            This property gives the capabilities of the user's devices
            </summary>
            <value>
            A list of <see cref="P:o2g.Types.TelephonyNS.TelephonicState.DeviceCapabilities"/>. 
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.TelephonicState.UserState">
            <summary>
            This property gives the user's state.
            </summary>
            <value>
            A <see cref="P:o2g.Types.TelephonyNS.TelephonicState.UserState"/> that represents the current user's state
            </value>
        </member>
        <member name="T:o2g.Types.TelephonyNS.TrunkIdentification">
            <summary>
            <c>TrunkIdentification</c> For external call, provide information on network timeslot and trunk eqt number
            </summary>
        </member>
        <member name="P:o2g.Types.TelephonyNS.TrunkIdentification.networkTimeslot">
            <summary>
            The network time slot.
            </summary>
            <value>
            An <see cref="T:System.Int32"/> that represent the network time slot.
            </value>
        </member>
        <member name="P:o2g.Types.TelephonyNS.TrunkIdentification.trunkNeqt">
            <summary>
            Trunk equipment number (Could be 2 nbrs in case of conference with 2 different external trunks.
            </summary>
            <value>
            An <see cref="T:System.Int32"/> that  represent Trunk equipment number
            </value>
        </member>
        <member name="T:o2g.Types.TelephonyNS.UserNS.UserState">
            <summary>
            <c>UserState</c> represents the global user state.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.UserNS.UserState.Free">
            <summary>
            The user is free. There is no call in progress.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.UserNS.UserState.Busy">
            <summary>
            The user is busy. There is almost one call in progress.
            </summary>
        </member>
        <member name="F:o2g.Types.TelephonyNS.UserNS.UserState.Unknown">
            <summary>
            The user's state can not be retrieve.
            </summary>
        </member>
        <member name="T:o2g.Types.UsersNS.Device">
            <summary>
            <c>Device</c> class represents a device of a user.
            </summary>
        </member>
        <member name="T:o2g.Types.UsersNS.Device.DeviceType">
            <summary>
            The device type
            </summary>
        </member>
        <member name="F:o2g.Types.UsersNS.Device.DeviceType.Dect">
            <summary>
            The device is a DECT device
            </summary>
        </member>
        <member name="F:o2g.Types.UsersNS.Device.DeviceType.Deskphone">
            <summary>
            The device is a deskphone
            </summary>
        </member>
        <member name="F:o2g.Types.UsersNS.Device.DeviceType.Mobile">
            <summary>
            The device is a mobile device
            </summary>
        </member>
        <member name="F:o2g.Types.UsersNS.Device.DeviceType.Softphone">
            <summary>
            The device is a softphone
            </summary>
        </member>
        <member name="F:o2g.Types.UsersNS.Device.DeviceType.Unknown">
            <summary>
            Unknown device type
            </summary>
        </member>
        <member name="P:o2g.Types.UsersNS.Device.Type">
            <summary>
            This property gives the device type
            </summary>
            <value>
            A <see cref="T:o2g.Types.UsersNS.Device.DeviceType"/> enum that represents the device type.
            </value>
        </member>
        <member name="P:o2g.Types.UsersNS.Device.Id">
            <summary>
            This property gives the device identifier which is used to identify the device in telephony requests and events.
            </summary>
            <value>
            A unique <see langword="string"/> that represents this device.
            </value>
        </member>
        <member name="P:o2g.Types.UsersNS.Device.SubType">
            <summary>
            Ths property gives the device sub-type.
            </summary>
            <value>
            A <see langword="string"/> that represents the device sub-type.
            </value>
            <remarks>
            When set, the device sub-type provide information about the device model.
            </remarks>
        </member>
        <member name="T:o2g.Types.UsersNS.Preferences">
            <summary>
            <c>Preferences</c> represents the preferred setting of a user.
            </summary>
        </member>
        <member name="P:o2g.Types.UsersNS.Preferences.GuiLanguage">
            <summary>
            This property gives the preferred GUI language. This is the language the user prefers when it uses an application with a graphical user interface.
            </summary>
            <value>
            A <see langword="string"/> that is the user prefered GUI language.
            </value>
        </member>
        <member name="P:o2g.Types.UsersNS.Preferences.OxeLanguage">
            <summary>
            This property gives the preferred OXE language. This is the language the user prefers when it uses his phone set.
            </summary>
            <value>
            A <see langword="string"/> that is the user prefered OXE language.
            </value>
        </member>
        <member name="T:o2g.Types.UsersNS.SupportedLanguages">
            <summary>
            <c>SupportedLanguages</c> represents the list of languages supported by a user.
            </summary>
        </member>
        <member name="P:o2g.Types.UsersNS.SupportedLanguages.Languages">
            <summary>
            The supported languages.
            </summary>
            <value>
            The list <see langword="string"/> that represents the supported languages.
            </value>
        </member>
        <member name="P:o2g.Types.UsersNS.SupportedLanguages.GuiLanguages">
            <summary>
            The supported GUI languages.
            </summary>
            <value>
            The list <see langword="string"/> that represents the supported GUI languages.
            </value>
        </member>
        <member name="T:o2g.Types.UsersNS.User">
            <summary>
            <c>User</c> class represents a user in the system. A user is an OmniPCX Enterprise subscriber. He can have one or several devices, an a mail box.
            </summary>
        </member>
        <member name="P:o2g.Types.UsersNS.User.CompanyPhone">
            <summary>
            This property gives the user company phone number. This company phone number is the phone number of the main device when the user has a multi-device configuration.
            </summary>
            <value>
            A <see langword="string"/> that represents the user company phone number.
            </value>
        </member>
        <member name="P:o2g.Types.UsersNS.User.FirstName">
            <summary>
            The user first name.
            </summary>
            <value>
            A <see langword="string"/> that represents the user first name.
            </value>
            <remarks>
            Corresponds to the "UTF8_Phone_Book_First_Name" parameter. If this one is empty, it is the parameter "Annu_First_Name" which is taken into account.
            </remarks>
        </member>
        <member name="P:o2g.Types.UsersNS.User.LastName">
            <summary>
            The user last name.
            </summary>
            <value>
            A <see langword="string"/> that represents the user last name.
            </value>
            <remarks>
            Corresponds to the "UTF8_Phone_Book_Last_Name" parameter. If this one is empty, it is the parameter "Annu_Last_Name" which is taken into account.
            </remarks>
        </member>
        <member name="P:o2g.Types.UsersNS.User.LoginName">
            <summary>
            The user login name that identifies the user account.
            </summary>
            <value>
            A <see langword="string"/> that represents the user login name.
            </value>
        </member>
        <member name="P:o2g.Types.UsersNS.User.Voicemail">
            <summary>
            The voice mail associated to this user.
            </summary>
            <value>
            A <see cref="P:o2g.Types.UsersNS.User.Voicemail"/> object that represents the voice mail, or <see langword="null"/> if the user has no voice mail.
            </value>
        </member>
        <member name="P:o2g.Types.UsersNS.User.Devices">
            <summary>
            The list of devices of this user. 
            </summary>
            <value>
            A list of <see cref="T:o2g.Types.UsersNS.Device"/>.
            </value>
        </member>
        <member name="P:o2g.Types.UsersNS.User.NodeId">
            <summary>
            This property give the OmniPCX Enterprise node the user belongs to.
            </summary>
            <value>
            An <see langword="int"/> that is the OXE node number.
            </value>
        </member>
        <member name="T:o2g.Types.UsersNS.Voicemail">
            <summary>
            <c>Voicemail</c> represents a voice mail box associated to a user.
            </summary>
        </member>
        <member name="T:o2g.Types.UsersNS.Voicemail.VoiceMailType">
            <summary>
            The voice mail type
            </summary>
        </member>
        <member name="F:o2g.Types.UsersNS.Voicemail.VoiceMailType.VM_4635">
            <summary>
            The voice mail is a 4635.
            </summary>
        </member>
        <member name="F:o2g.Types.UsersNS.Voicemail.VoiceMailType.VM_4645">
            <summary>
            The voice mail is a 4645.
            </summary>
        </member>
        <member name="F:o2g.Types.UsersNS.Voicemail.VoiceMailType.External">
            <summary>
            An external (third party) voice mail type.
            </summary>
        </member>
        <member name="P:o2g.Types.UsersNS.Voicemail.Number">
            <summary>
            This property gives the voice mail phone number.
            </summary>
            <value>
            The <see langword="string"/> that represents this voice mail phone number.
            </value>
        </member>
        <member name="P:o2g.Types.UsersNS.Voicemail.Type">
            <summary>
            This property gives the voice mail type.
            </summary>
            <value>
            An enum value that indicated the type of voice mail.
            </value>
        </member>
        <member name="T:o2g.Utility.AbstractStringMap`1">
            <summary>
            An abstract string map. It provides method to manipulate object references by name.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:o2g.Utility.AbstractStringMap`1.Item(System.String)">
            <summary>
            Return the object model with the specified name.
            </summary>
            <param name="name"></param>
            <returns>
            The object or <see langword="null"/> if there is no such object model.
            </returns>
        </member>
        <member name="M:o2g.Utility.AbstractStringMap`1.Contains(System.String)">
            <summary>
            Determines whether the <c>AbstractStringMap</c> contains the specified key.
            </summary>
            <param name="key">The key parameter to search.</param>
            <returns>
            <see langword="true"/> if the specified key is in the map; <see langword="false"/> otherwise
            </returns>
        </member>
        <member name="P:o2g.Utility.AbstractStringMap`1.Names">
            <summary>
            Return the list of the names.
            </summary>
            <value>
            A list of <see langword="string"/> that represents the name.
            </value>
        </member>
        <member name="M:o2g.Utility.AbstractStringMap`1.AsList">
            <summary>
            Return the list of child object models.
            </summary>
            <returns>
            A list of objects that represents the child object models.
            </returns>
        </member>
        <member name="M:o2g.Utility.AbstractStringMap`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="T:o2g.Utility.HttpClientBuilder">
            <summary>
            <c>HttpClientBuilder</c> is used internal by the SDK to build the <see cref="T:System.Net.Http.HttpClient"/> used to invoke REST services.
            It's possible to activate REST traces and to disable the SSL certificate verification. 
            <b>Do not use this option on a production environment.</b>
            </summary>
        </member>
        <member name="P:o2g.Utility.HttpClientBuilder.DisableSSValidation">
             <summary>
             Disable the SSL certificate validation.
             </summary>
             <value>
             <see langword="true"/> if the SSL certificate validation is disabled; <see langword="false"/> otherwise.
             </value>
             <remarks>
             <para>
             It can be useful to disable the O2G server certificate validation on a test environment, when the O2G server is for exemple a self-signed certificate.
             <b>Do not disable the SSL certificate validation on a production environment!</b>
             </para>
             <para>
             Disabling the SSL certificate validation must be done before the creation of the <see cref="T:System.Net.Http.HttpClient"/>, so before the call to the <see cref="M:o2g.O2G.Application.LoginAsync(System.String,System.String)"/> method.
             </para>
             </remarks>
             <example>
             <code>
                class Program
                {
                    static async Task Main(string[] args)
                    {
                        HttpClientBuilder.DisableSSValidation = true;
                        HttpClientBuilder.TraceREST = true;
            
                        O2G.Application myApp = new("MyApplication");
            
                        myApp.SetHost(new()
                        {
                             PrivateAddress = "o2g.private.vlab2.com",
                             PublicAddress = "o2g.public.vlab2.com"
                        });
            
                        await myApp.LoginAsync("oxe1000", "1234");
            
                        ...
                    }
             </code>
             </example>
        </member>
        <member name="P:o2g.Utility.HttpClientBuilder.TraceREST">
             <summary>
             Enable tracing the REST request.
             </summary>
             <value>
             <see langword="true"/> if the tracing is activated; <see langword="false"/> otherwise.
             </value>
             <remarks>
             <para>
             For debuging purpose, it can be interesting to log the REST messages exchanged.
             </para>
             <para>
             Activating REST traces must be done before the creation of the <see cref="T:System.Net.Http.HttpClient"/>, so before the call to the <see cref="M:o2g.O2G.Application.LoginAsync(System.String,System.String)"/> method.
             </para>
             </remarks>
             <example>
             <code>
                class Program
                {
                    static async Task Main(string[] args)
                    {
                        HttpClientBuilder.DisableSSValidation = true;
                        HttpClientBuilder.TraceREST = true;
            
                        O2G.Application myApp = new("MyApplication");
            
                        myApp.SetHost(new()
                        {
                             PrivateAddress = "o2g.private.vlab2.com",
                             PublicAddress = "o2g.public.vlab2.com"
                        });
            
                        await myApp.LoginAsync("oxe1000", "1234");
            
                        ...
                    }
             </code>
             </example>
        </member>
        <member name="T:o2g.Utility.MutableStringMap`1">
            <summary>
            A mutable string map object. It provides method to add object referenced by name.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:o2g.Utility.MutableStringMap`1.Add(System.String,`0)">
            <summary>
            Add a new Value with the specified name.
            </summary>
            <param name="name">The name of the new value.</param>
            <param name="value">The new value.</param>
        </member>
        <member name="T:o2g.Utility.StringMap`1">
            <summary>
            A generic string map objets
            </summary>
            <typeparam name="T"></typeparam>
        </member>
    </members>
</doc>
